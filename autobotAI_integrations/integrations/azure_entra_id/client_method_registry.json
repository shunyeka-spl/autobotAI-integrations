{
    "msgraph": {
        "admin": "Provides operations to manage the admin singleton.",
        "agreement_acceptances": "Provides operations to manage the collection of agreementAcceptance entities.",
        "agreements": "Provides operations to manage the collection of agreement entities.",
        "app_catalogs": "Provides operations to manage the appCatalogs singleton.",
        "application_templates": "Provides operations to manage the collection of applicationTemplate entities.",
        "applications": "Provides operations to manage the collection of application entities.",
        "applications_with_app_id": "Provides operations to manage the collection of application entities.        param app_id: Alternate key of application        Returns: ApplicationsWithAppIdRequestBuilder",
        "applications_with_unique_name": "Provides operations to manage the collection of application entities.        param unique_name: Alternate key of application        Returns: ApplicationsWithUniqueNameRequestBuilder",
        "audit_logs": "Provides operations to manage the auditLogRoot singleton.",
        "authentication_method_configurations": "Provides operations to manage the collection of authenticationMethodConfiguration entities.",
        "authentication_methods_policy": "Provides operations to manage the authenticationMethodsPolicy singleton.",
        "batch": "Returns a BatchRequestBuilder to enable batch requests.",
        "certificate_based_auth_configuration": "Provides operations to manage the collection of certificateBasedAuthConfiguration entities.",
        "chats": "Provides operations to manage the collection of chat entities.",
        "communications": "Provides operations to manage the cloudCommunications singleton.",
        "compliance": "Provides operations to manage the compliance singleton.",
        "connections": "Provides operations to manage the collection of externalConnection entities.",
        "contacts": "Provides operations to manage the collection of orgContact entities.",
        "contracts": "Provides operations to manage the collection of contract entities.",
        "data_policy_operations": "Provides operations to manage the collection of dataPolicyOperation entities.",
        "device_app_management": "Provides operations to manage the deviceAppManagement singleton.",
        "device_management": "Provides operations to manage the deviceManagement singleton.",
        "devices": "Provides operations to manage the collection of device entities.",
        "devices_with_device_id": "Provides operations to manage the collection of device entities.        param device_id: Alternate key of device        Returns: DevicesWithDeviceIdRequestBuilder",
        "directory": "Provides operations to manage the directory singleton.",
        "directory_objects": "Provides operations to manage the collection of directoryObject entities.",
        "directory_role_templates": "Provides operations to manage the collection of directoryRoleTemplate entities.",
        "directory_roles": "Provides operations to manage the collection of directoryRole entities.",
        "directory_roles_with_role_template_id": "Provides operations to manage the collection of directoryRole entities.        param role_template_id: Alternate key of directoryRole        Returns: DirectoryRolesWithRoleTemplateIdRequestBuilder",
        "domain_dns_records": "Provides operations to manage the collection of domainDnsRecord entities.",
        "domains": "Provides operations to manage the collection of domain entities.",
        "drives": "Provides operations to manage the collection of drive entities.",
        "education": "Provides operations to manage the educationRoot singleton.",
        "employee_experience": "Provides operations to manage the employeeExperience singleton.",
        "external": "Provides operations to manage the external singleton.",
        "filter_operators": "Provides operations to manage the collection of filterOperatorSchema entities.",
        "functions": "Provides operations to manage the collection of attributeMappingFunctionSchema entities.",
        "group_lifecycle_policies": "Provides operations to manage the collection of groupLifecyclePolicy entities.",
        "group_setting_templates": "Provides operations to manage the collection of groupSettingTemplate entities.",
        "group_settings": "Provides operations to manage the collection of groupSetting entities.",
        "groups": "Provides operations to manage the collection of group entities.",
        "groups_with_unique_name": "Provides operations to manage the collection of group entities.        param unique_name: Alternate key of group        Returns: GroupsWithUniqueNameRequestBuilder",
        "identity": "Provides operations to manage the identityContainer singleton.",
        "identity_governance": "Provides operations to manage the identityGovernance singleton.",
        "identity_protection": "Provides operations to manage the identityProtectionRoot singleton.",
        "identity_providers": "Provides operations to manage the collection of identityProvider entities.",
        "information_protection": "Provides operations to manage the informationProtection singleton.",
        "invitations": "Provides operations to manage the collection of invitation entities.",
        "me": "Maps requests to /me endpoint to /users/{{user-id}}",
        "oauth2_permission_grants": "Provides operations to manage the collection of oAuth2PermissionGrant entities.",
        "organization": "Provides operations to manage the collection of organization entities.",
        "permission_grants": "Provides operations to manage the collection of resourceSpecificPermissionGrant entities.",
        "places": "The places property",
        "planner": "Provides operations to manage the planner singleton.",
        "policies": "Provides operations to manage the policyRoot singleton.",
        "print": "Provides operations to manage the print singleton.",
        "privacy": "Provides operations to manage the privacy singleton.",
        "reports": "Provides operations to manage the reportRoot singleton.",
        "role_management": "Provides operations to manage the roleManagement singleton.",
        "schema_extensions": "Provides operations to manage the collection of schemaExtension entities.",
        "scoped_role_memberships": "Provides operations to manage the collection of scopedRoleMembership entities.",
        "search": "Provides operations to manage the searchEntity singleton.",
        "security": "Provides operations to manage the security singleton.",
        "service_principals": "Provides operations to manage the collection of servicePrincipal entities.",
        "service_principals_with_app_id": "Provides operations to manage the collection of servicePrincipal entities.        param app_id: Alternate key of servicePrincipal        Returns: ServicePrincipalsWithAppIdRequestBuilder",
        "shares": "Provides operations to manage the collection of sharedDriveItem entities.",
        "sites": "Provides operations to manage the collection of site entities.",
        "solutions": "Provides operations to manage the solutionsRoot singleton.",
        "storage": "Provides operations to manage the storage singleton.",
        "subscribed_skus": "Provides operations to manage the collection of subscribedSku entities.",
        "subscriptions": "Provides operations to manage the collection of subscription entities.",
        "teams": "Provides operations to manage the collection of team entities.",
        "teams_templates": "Provides operations to manage the collection of teamsTemplate entities.",
        "teamwork": "Provides operations to manage the teamwork singleton.",
        "tenant_relationships": "Provides operations to manage the tenantRelationship singleton.",
        "users": "Provides operations to manage the collection of user entities.",
        "users_with_user_principal_name": "Provides operations to manage the collection of user entities.        param user_principal_name: Alternate key of user        Returns: UsersWithUserPrincipalNameRequestBuilder"
    },
    "msgraph-beta": {
        "access_review_decisions": "Provides operations to manage the collection of accessReviewDecision entities.",
        "access_reviews": "Provides operations to manage the collection of accessReview entities.",
        "activitystatistics": "Provides operations to manage the collection of activityStatistics entities.",
        "admin": "Provides operations to manage the admin singleton.",
        "administrative_units": "Provides operations to manage the collection of administrativeUnit entities.",
        "agreement_acceptances": "Provides operations to manage the collection of agreementAcceptance entities.",
        "agreements": "Provides operations to manage the collection of agreement entities.",
        "allowed_data_locations": "Provides operations to manage the collection of allowedDataLocation entities.",
        "app": "Provides operations to manage the commsApplication singleton.",
        "app_catalogs": "Provides operations to manage the appCatalogs singleton.",
        "application_templates": "Provides operations to manage the collection of applicationTemplate entities.",
        "applications": "Provides operations to manage the collection of application entities.",
        "applications_with_app_id": "Provides operations to manage the collection of application entities.        param app_id: Alternate key of application        Returns: ApplicationsWithAppIdRequestBuilder",
        "applications_with_unique_name": "Provides operations to manage the collection of application entities.        param unique_name: Alternate key of application        Returns: ApplicationsWithUniqueNameRequestBuilder",
        "approval_workflow_providers": "Provides operations to manage the collection of approvalWorkflowProvider entities.",
        "audit_logs": "Provides operations to manage the auditLogRoot singleton.",
        "authentication_method_configurations": "Provides operations to manage the collection of authenticationMethodConfiguration entities.",
        "authentication_method_devices": "Provides operations to manage the collection of authenticationMethodDevice entities.",
        "authentication_methods_policy": "Provides operations to manage the authenticationMethodsPolicy singleton.",
        "booking_businesses": "Provides operations to manage the collection of bookingBusiness entities.",
        "booking_currencies": "Provides operations to manage the collection of bookingCurrency entities.",
        "business_flow_templates": "Provides operations to manage the collection of businessFlowTemplate entities.",
        "certificate_authorities": "Provides operations to manage the certificateAuthorityPath singleton.",
        "certificate_based_auth_configuration": "Provides operations to manage the collection of certificateBasedAuthConfiguration entities.",
        "chats": "Provides operations to manage the collection of chat entities.",
        "commands": "Provides operations to manage the collection of command entities.",
        "communications": "Provides operations to manage the cloudCommunications singleton.",
        "compliance": "Provides operations to manage the compliance singleton.",
        "connections": "Provides operations to manage the collection of externalConnection entities.",
        "contacts": "Provides operations to manage the collection of orgContact entities.",
        "contracts": "Provides operations to manage the collection of contract entities.",
        "data_classification": "Provides operations to manage the dataClassificationService singleton.",
        "data_policy_operations": "Provides operations to manage the collection of dataPolicyOperation entities.",
        "device_app_management": "Provides operations to manage the deviceAppManagement singleton.",
        "device_management": "Provides operations to manage the deviceManagement singleton.",
        "devices": "Provides operations to manage the collection of device entities.",
        "devices_with_device_id": "Provides operations to manage the collection of device entities.        param device_id: Alternate key of device        Returns: DevicesWithDeviceIdRequestBuilder",
        "directory": "Provides operations to manage the directory singleton.",
        "directory_objects": "Provides operations to manage the collection of directoryObject entities.",
        "directory_role_templates": "Provides operations to manage the collection of directoryRoleTemplate entities.",
        "directory_roles": "Provides operations to manage the collection of directoryRole entities.",
        "directory_roles_with_role_template_id": "Provides operations to manage the collection of directoryRole entities.        param role_template_id: Alternate key of directoryRole        Returns: DirectoryRolesWithRoleTemplateIdRequestBuilder",
        "directory_setting_templates": "Provides operations to manage the collection of directorySettingTemplate entities.",
        "domain_dns_records": "Provides operations to manage the collection of domainDnsRecord entities.",
        "domains": "Provides operations to manage the collection of domain entities.",
        "drives": "Provides operations to manage the collection of drive entities.",
        "education": "Provides operations to manage the educationRoot singleton.",
        "employee_experience": "Provides operations to manage the employeeExperience singleton.",
        "external": "Provides operations to manage the external singleton.",
        "filter_operators": "Provides operations to manage the collection of filterOperatorSchema entities.",
        "filtering_policies": "Provides operations to manage the collection of filteringPolicy entities.",
        "financials": "Provides operations to manage the financials singleton.",
        "functions": "Provides operations to manage the collection of attributeMappingFunctionSchema entities.",
        "governance_resources": "Provides operations to manage the collection of governanceResource entities.",
        "governance_role_assignment_requests": "Provides operations to manage the collection of governanceRoleAssignmentRequest entities.",
        "governance_role_assignments": "Provides operations to manage the collection of governanceRoleAssignment entities.",
        "governance_role_definitions": "Provides operations to manage the collection of governanceRoleDefinition entities.",
        "governance_role_settings": "Provides operations to manage the collection of governanceRoleSetting entities.",
        "governance_subjects": "Provides operations to manage the collection of governanceSubject entities.",
        "group_lifecycle_policies": "Provides operations to manage the collection of groupLifecyclePolicy entities.",
        "groups": "Provides operations to manage the collection of group entities.",
        "groups_with_unique_name": "Provides operations to manage the collection of group entities.        param unique_name: Alternate key of group        Returns: GroupsWithUniqueNameRequestBuilder",
        "identity": "Provides operations to manage the identityContainer singleton.",
        "identity_governance": "Provides operations to manage the identityGovernance singleton.",
        "identity_protection": "Provides operations to manage the identityProtectionRoot singleton.",
        "identity_providers": "Provides operations to manage the collection of identityProvider entities.",
        "information_protection": "Provides operations to manage the informationProtection singleton.",
        "invitations": "Provides operations to manage the collection of invitation entities.",
        "me": "Maps requests to /me endpoint to /users/{{user-id}}",
        "message_events": "Provides operations to manage the collection of messageEvent entities.",
        "message_recipients": "Provides operations to manage the collection of messageRecipient entities.",
        "message_traces": "Provides operations to manage the collection of messageTrace entities.",
        "mobility_management_policies": "Provides operations to manage the collection of mobilityManagementPolicy entities.",
        "monitoring": "Provides operations to manage the monitoring singleton.",
        "network": "Provides operations to manage the network singleton.",
        "network_access": "Provides operations to manage the networkAccessRoot singleton.",
        "oauth2_permission_grants": "Provides operations to manage the collection of oAuth2PermissionGrant entities.",
        "on_premises_publishing_profiles": "Provides operations to manage the collection of onPremisesPublishingProfile entities.",
        "organization": "Provides operations to manage the collection of organization entities.",
        "payload_response": "Provides operations to manage the collection of payloadResponse entities.",
        "permission_grants": "Provides operations to manage the collection of resourceSpecificPermissionGrant entities.",
        "places": "The places property",
        "places_with_place_id": "Provides operations to manage the collection of place entities.        param place_id: Alternate key of place        Returns: PlacesWithPlaceIdRequestBuilder",
        "planner": "Provides operations to manage the planner singleton.",
        "policies": "Provides operations to manage the policyRoot singleton.",
        "print": "Provides operations to manage the print singleton.",
        "privacy": "Provides operations to manage the privacy singleton.",
        "privileged_access": "Provides operations to manage the collection of privilegedAccess entities.",
        "privileged_approval": "Provides operations to manage the collection of privilegedApproval entities.",
        "privileged_operation_events": "Provides operations to manage the collection of privilegedOperationEvent entities.",
        "privileged_role_assignment_requests": "Provides operations to manage the collection of privilegedRoleAssignmentRequest entities.",
        "privileged_role_assignments": "Provides operations to manage the collection of privilegedRoleAssignment entities.",
        "privileged_roles": "Provides operations to manage the collection of privilegedRole entities.",
        "privileged_signup_status": "Provides operations to manage the collection of privilegedSignupStatus entities.",
        "program_control_types": "Provides operations to manage the collection of programControlType entities.",
        "program_controls": "Provides operations to manage the collection of programControl entities.",
        "programs": "Provides operations to manage the collection of program entities.",
        "reports": "Provides operations to manage the reportRoot singleton.",
        "risk_detections": "Provides operations to manage the collection of riskDetection entities.",
        "risky_users": "Provides operations to manage the collection of riskyUser entities.",
        "role_management": "Provides operations to manage the roleManagement singleton.",
        "schema_extensions": "Provides operations to manage the collection of schemaExtension entities.",
        "scoped_role_memberships": "Provides operations to manage the collection of scopedRoleMembership entities.",
        "search": "Provides operations to manage the searchEntity singleton.",
        "security": "Provides operations to manage the security singleton.",
        "service_principals": "Provides operations to manage the collection of servicePrincipal entities.",
        "service_principals_with_app_id": "Provides operations to manage the collection of servicePrincipal entities.        param app_id: Alternate key of servicePrincipal        Returns: ServicePrincipalsWithAppIdRequestBuilder",
        "settings": "Provides operations to manage the collection of directorySetting entities.",
        "shares": "Provides operations to manage the collection of sharedDriveItem entities.",
        "sites": "Provides operations to manage the collection of site entities.",
        "solutions": "Provides operations to manage the solutionsRoot singleton.",
        "storage": "Provides operations to manage the storage singleton.",
        "subscribed_skus": "Provides operations to manage the collection of subscribedSku entities.",
        "subscriptions": "Provides operations to manage the collection of subscription entities.",
        "team_template_definition": "Provides operations to manage the collection of teamTemplateDefinition entities.",
        "teams": "Provides operations to manage the collection of team entities.",
        "teams_templates": "Provides operations to manage the collection of teamsTemplate entities.",
        "teamwork": "Provides operations to manage the teamwork singleton.",
        "templates": "Provides operations to manage the template singleton.",
        "tenant_relationships": "Provides operations to manage the tenantRelationship singleton.",
        "term_store": "Provides operations to manage the store singleton.",
        "threat_submission": "Provides operations to manage the threatSubmissionRoot singleton.",
        "trust_framework": "Provides operations to manage the trustFramework singleton.",
        "users": "Provides operations to manage the collection of user entities.",
        "users_with_user_principal_name": "Provides operations to manage the collection of user entities.        param user_principal_name: Alternate key of user        Returns: UsersWithUserPrincipalNameRequestBuilder",
        "workplace": "Provides operations to manage the workplace singleton."
    }
}