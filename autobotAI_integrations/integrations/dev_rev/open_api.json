{
    "info": {
        "description": "DevRev's REST API.",
        "title": "DevRev REST API",
        "version": "2024-01-24"
    },
    "openapi": "3.0.3",
    "servers": [
        {
            "description": "DevRev API endpoint.",
            "url": "https://api.devrev.ai"
        }
    ],
    "paths": {
        "/accounts.create": {
            "post": {
                "description": "Creates an account, which is a record representing a customer or an\norganization.\n",
                "operationId": "accounts-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to create a new account in the Dev organization.\n",
                                "properties": {
                                    "description": {
                                        "description": "Description of the account.",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Name of the account.",
                                        "type": "string"
                                    },
                                    "domains": {
                                        "description": "List of company's domain names. Example - ['devrev.ai'].",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_refs": {
                                        "description": "External refs are unique identifiers from your customer system of\nrecords, stored as a list.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "owned_by": {
                                        "description": "List of Dev users owning this account.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "tier": {
                                        "description": "The tier of the account.",
                                        "type": "string"
                                    },
                                    "websites": {
                                        "description": "List of company websites. Example - ['www.devrev.ai',\n'www.marketplace.devrev.ai'].\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "display_name"
                                ],
                                "title": "accounts-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/accounts.delete": {
            "post": {
                "description": "Deletes an account.",
                "operationId": "accounts-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to delete an account.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of account to delete.",
                                        "example": "ACC-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "accounts-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/accounts.export": {
            "get": {
                "description": "Exports a collection of accounts.",
                "operationId": "accounts-export",
                "parameters": [
                    {
                        "description": "Filters for accounts created by the specified user(s).",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Array of display names of accounts to be filtered.",
                        "explode": false,
                        "in": "query",
                        "name": "display_name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Array of references of accounts to be filtered.",
                        "explode": false,
                        "in": "query",
                        "name": "external_refs",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The number of accounts to return. The default is '50'.",
                        "explode": false,
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "format": "int32",
                            "maximum": 500,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Fields to sort the accounts by and the direction to sort them in.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for accounts on specified stages.",
                        "explode": false,
                        "in": "query",
                        "name": "stage",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "AccountsExportQuery"
            },
            "post": {
                "description": "Exports a collection of accounts.",
                "operationId": "accounts-export-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to export a collection of accounts.",
                                "properties": {
                                    "created_by": {
                                        "description": "Filters for accounts created by the specified user(s).",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "display_name": {
                                        "description": "Array of display names of accounts to be filtered.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_refs": {
                                        "description": "Array of references of accounts to be filtered.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "first": {
                                        "description": "The number of accounts to return. The default is '50'.",
                                        "format": "int32",
                                        "maximum": 500,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "modified_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "sort_by": {
                                        "description": "Fields to sort the accounts by and the direction to sort them in.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "stage": {
                                        "description": "Filters for accounts on specified stages.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "accounts-export-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/accounts.get": {
            "get": {
                "description": "Retrieves an account's information.",
                "operationId": "accounts-get",
                "parameters": [
                    {
                        "description": "The ID of the account to be retrieved.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "ACC-12345",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "AccountsGetQuery"
            },
            "post": {
                "description": "Retrieves an account's information.",
                "operationId": "accounts-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to get an account's information.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of the account to be retrieved.",
                                        "example": "ACC-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "accounts-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/accounts.list": {
            "get": {
                "description": "Gets a list of accounts.",
                "operationId": "accounts-list",
                "parameters": [
                    {
                        "description": "Filters for accounts created by the specified user(s).",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Array of display names of accounts to be filtered.",
                        "explode": false,
                        "in": "query",
                        "name": "display_name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Array of references of accounts to be filtered.",
                        "explode": false,
                        "in": "query",
                        "name": "external_refs",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The maximum number of accounts to return per page. The default is\n'50'.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Fields to sort the accounts by and the direction to sort them in.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for accounts on specified stages.",
                        "explode": false,
                        "in": "query",
                        "name": "stage",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "AccountsListQuery"
            },
            "post": {
                "description": "Gets a list of accounts.",
                "operationId": "accounts-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "List the accounts.",
                                "properties": {
                                    "created_by": {
                                        "description": "Filters for accounts created by the specified user(s).",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Array of display names of accounts to be filtered.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_refs": {
                                        "description": "Array of references of accounts to be filtered.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "limit": {
                                        "description": "The maximum number of accounts to return per page. The default is\n'50'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "modified_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "sort_by": {
                                        "description": "Fields to sort the accounts by and the direction to sort them in.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "stage": {
                                        "description": "Filters for accounts on specified stages.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "accounts-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/accounts.update": {
            "post": {
                "description": "Updates an account's information.",
                "operationId": "accounts-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to update details of the account.",
                                "properties": {
                                    "description": {
                                        "description": "Updated description of the account.",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Updated display name for the account.",
                                        "type": "string"
                                    },
                                    "domains": {
                                        "description": "Updated list of company's domain names. Example - ['devrev.ai'].\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_refs": {
                                        "description": "Updated External Refs of account.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "id": {
                                        "description": "The ID of account to update.",
                                        "example": "ACC-12345",
                                        "type": "string"
                                    },
                                    "owned_by": {
                                        "description": "Updated list of the users owning this account.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "tier": {
                                        "description": "Updated tier of the account.",
                                        "nullable": true,
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "accounts-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/artifacts.get": {
            "get": {
                "description": "Gets the requested artifact's information.",
                "operationId": "artifacts-get",
                "parameters": [
                    {
                        "description": "The requested artifact's ID.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "ARTIFACT-12345",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The version of the artifact that needs to be fetched.",
                        "explode": false,
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "ArtifactsGetQuery"
            },
            "post": {
                "description": "Gets the requested artifact's information.",
                "operationId": "artifacts-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get an artifact's information.",
                                "properties": {
                                    "id": {
                                        "description": "The requested artifact's ID.",
                                        "example": "ARTIFACT-12345",
                                        "type": "string"
                                    },
                                    "version": {
                                        "description": "The version of the artifact that needs to be fetched.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "artifacts-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/artifacts.list": {
            "get": {
                "description": "List the artifacts attached to an object.",
                "operationId": "artifacts-list",
                "parameters": [
                    {
                        "description": "The ID of the object to filter artifacts.",
                        "explode": false,
                        "in": "query",
                        "name": "parent_id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "ArtifactsListQuery"
            },
            "post": {
                "description": "List the artifacts attached to an object.",
                "operationId": "artifacts-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to list artifacts attached to an object.",
                                "properties": {
                                    "parent_id": {
                                        "description": "The ID of the object to filter artifacts.",
                                        "type": "string"
                                    }
                                },
                                "title": "artifacts-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/artifacts.locate": {
            "get": {
                "description": "Gets the download URL for the artifact.",
                "operationId": "artifacts-locate",
                "parameters": [
                    {
                        "description": "The ID of the artifact to get the URL for.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "ARTIFACT-12345",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The version of the artifact that needs to be fetched.",
                        "explode": false,
                        "in": "query",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "ArtifactsLocateQuery"
            },
            "post": {
                "description": "Gets the download URL for the artifact.",
                "operationId": "artifacts-locate-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get an artifact's download URL.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of the artifact to get the URL for.",
                                        "example": "ARTIFACT-12345",
                                        "type": "string"
                                    },
                                    "version": {
                                        "description": "The version of the artifact that needs to be fetched.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "artifacts-locate-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/artifacts.prepare": {
            "post": {
                "description": "Creates an artifact and generates an upload URL for its data.\n",
                "operationId": "artifacts-prepare",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to prepare a URL to upload a file.",
                                "properties": {
                                    "file_name": {
                                        "description": "The name of the file that's being uploaded.",
                                        "type": "string"
                                    },
                                    "file_type": {
                                        "description": "The type of file that's being uploaded.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file_name"
                                ],
                                "title": "artifacts-prepare-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.create": {
            "post": {
                "description": "Creates a JWT corresponding to the requested token type for the\nauthenticated user.\n",
                "operationId": "auth-tokens-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to create a new token corresponding to the requested token\ntype.\n",
                                "properties": {
                                    "act_as": {
                                        "description": "The unique ID of the Dev user or the service account to\nimpersonate.\n",
                                        "type": "string"
                                    },
                                    "aud": {
                                        "description": "The expected audience values with respect to the token.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "client_id": {
                                        "description": "An identifier that represents the application which is requesting\nthe token. If no client_id is present in the request to generate an\napplication access token (AAT), DevRev will generate a client_id.\nThis client_id is only associated with an AAT.\n",
                                        "type": "string"
                                    },
                                    "expires_in": {
                                        "description": "The expected validity lifetime of the token in number of days. In\npractice, the value should be based on the usage of the token.\n",
                                        "maximum": 4294967295,
                                        "minimum": 0,
                                        "type": "integer"
                                    },
                                    "grant_type": {
                                        "description": "Specifies the process of obtaining a token.",
                                        "enum": [
                                            "urn:devrev:params:oauth:grant-type:token-issue",
                                            "urn:ietf:params:oauth:grant-type:token-exchange"
                                        ],
                                        "type": "string",
                                        "x-fern-enum": {
                                            "urn:devrev:params:oauth:grant-type:token-issue": {
                                                "name": "urn-devrev-params-oauth-grant-type-token-issue"
                                            },
                                            "urn:ietf:params:oauth:grant-type:token-exchange": {
                                                "name": "urn-ietf-params-oauth-grant-type-token-exchange"
                                            }
                                        }
                                    },
                                    "requested_token_type": {
                                        "description": "The type of the requested token.",
                                        "enum": [
                                            "urn:devrev:params:oauth:token-type:aat",
                                            "urn:devrev:params:oauth:token-type:aat:act-as",
                                            "urn:devrev:params:oauth:token-type:aat:public",
                                            "urn:devrev:params:oauth:token-type:dev",
                                            "urn:devrev:params:oauth:token-type:dev:connect",
                                            "urn:devrev:params:oauth:token-type:gat",
                                            "urn:devrev:params:oauth:token-type:pat",
                                            "urn:devrev:params:oauth:token-type:pat:act-as",
                                            "urn:devrev:params:oauth:token-type:rat",
                                            "urn:devrev:params:oauth:token-type:rev",
                                            "urn:devrev:params:oauth:token-type:session",
                                            "urn:devrev:params:oauth:token-type:session:dev0",
                                            "urn:devrev:params:oauth:token-type:session:onetime",
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as",
                                            "urn:devrev:params:oauth:token-type:super",
                                            "urn:devrev:params:oauth:token-type:sys",
                                            "urn:ietf:params:oauth:token-type:jwt"
                                        ],
                                        "type": "string",
                                        "x-fern-enum": {
                                            "urn:devrev:params:oauth:token-type:aat": {
                                                "name": "urn-devrev-params-oauth-token-type-aat"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:public": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-public"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev": {
                                                "name": "urn-devrev-params-oauth-token-type-dev"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev:connect": {
                                                "name": "urn-devrev-params-oauth-token-type-dev-connect"
                                            },
                                            "urn:devrev:params:oauth:token-type:gat": {
                                                "name": "urn-devrev-params-oauth-token-type-gat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat": {
                                                "name": "urn-devrev-params-oauth-token-type-pat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-pat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:rat": {
                                                "name": "urn-devrev-params-oauth-token-type-rat"
                                            },
                                            "urn:devrev:params:oauth:token-type:rev": {
                                                "name": "urn-devrev-params-oauth-token-type-rev"
                                            },
                                            "urn:devrev:params:oauth:token-type:session": {
                                                "name": "urn-devrev-params-oauth-token-type-session"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:dev0": {
                                                "name": "urn-devrev-params-oauth-token-type-session-dev0"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:onetime": {
                                                "name": "urn-devrev-params-oauth-token-type-session-onetime"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-session-rev-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:super": {
                                                "name": "urn-devrev-params-oauth-token-type-super"
                                            },
                                            "urn:devrev:params:oauth:token-type:sys": {
                                                "name": "urn-devrev-params-oauth-token-type-sys"
                                            },
                                            "urn:ietf:params:oauth:token-type:jwt": {
                                                "name": "urn-ietf-params-oauth-token-type-jwt"
                                            }
                                        }
                                    },
                                    "rev_info": {
                                        "description": "Carries info corresponding to the Rev user to be provisioned and/or\nissue a Rev session token.\n",
                                        "properties": {
                                            "org_ref": {
                                                "description": "An identifier which uniquely identifies a Rev org.",
                                                "type": "string"
                                            },
                                            "org_traits": {
                                                "description": "Carries Rev org info.",
                                                "properties": {
                                                    "custom_fields": {
                                                        "description": "Application-defined custom fields of the Rev org.",
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "description": "The description of the Rev org.",
                                                        "type": "string"
                                                    },
                                                    "display_name": {
                                                        "description": "The display name of the Rev org.",
                                                        "type": "string"
                                                    },
                                                    "domain": {
                                                        "description": "The domain of the Rev org.",
                                                        "type": "string"
                                                    },
                                                    "phone_numbers": {
                                                        "description": "Phone numbers of the Rev org.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "tier": {
                                                        "description": "The tier of the Rev org.",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "auth-tokens-org-traits",
                                                "type": "object"
                                            },
                                            "user_id": {
                                                "description": "The unique ID of the Rev user.",
                                                "type": "string"
                                            },
                                            "user_ref": {
                                                "description": "An identifier which uniquely identifies a Rev user.",
                                                "type": "string"
                                            },
                                            "user_traits": {
                                                "description": "Carries Rev user info.",
                                                "properties": {
                                                    "custom_fields": {
                                                        "description": "Application-defined custom fields of the Rev user.",
                                                        "type": "object"
                                                    },
                                                    "description": {
                                                        "description": "The description of the Rev user.",
                                                        "type": "string"
                                                    },
                                                    "display_name": {
                                                        "description": "The display name of the Rev user.",
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "description": "The email address of the Rev user.",
                                                        "type": "string"
                                                    },
                                                    "full_name": {
                                                        "deprecated": true,
                                                        "description": "The full name of the Rev user.",
                                                        "type": "string"
                                                    },
                                                    "phone_numbers": {
                                                        "description": "Phone numbers of the Rev user.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "auth-tokens-user-traits",
                                                "type": "object"
                                            }
                                        },
                                        "title": "auth-tokens-rev-info",
                                        "type": "object"
                                    },
                                    "scope": {
                                        "description": "The requested set of scopes associated with the issued token. A\nspace-delimited list of values in which the order of values does\nnot matter.\n",
                                        "type": "string"
                                    },
                                    "subject_token": {
                                        "description": "Represents the entity that requests the token. Not required when\nrequesting an application access token (AAT).\n",
                                        "type": "string"
                                    },
                                    "subject_token_type": {
                                        "description": "The type of the subject token.",
                                        "enum": [
                                            "urn:devrev:params:oauth:token-type:jwt:auth0",
                                            "urn:devrev:params:oauth:token-type:jwt:dev",
                                            "urn:devrev:params:oauth:token-type:rat",
                                            "urn:devrev:params:oauth:token-type:revinfo",
                                            "urn:devrev:params:oauth:token-type:session",
                                            "urn:devrev:params:oauth:token-type:sysu",
                                            "urn:devrev:params:oauth:token-type:userinfo",
                                            "urn:devrev:params:oauth:token-type:userinfo:profile",
                                            "urn:ietf:params:oauth:token-type:jwt"
                                        ],
                                        "type": "string",
                                        "x-fern-enum": {
                                            "urn:devrev:params:oauth:token-type:jwt:auth0": {
                                                "name": "urn-devrev-params-oauth-token-type-jwt-auth0"
                                            },
                                            "urn:devrev:params:oauth:token-type:jwt:dev": {
                                                "name": "urn-devrev-params-oauth-token-type-jwt-dev"
                                            },
                                            "urn:devrev:params:oauth:token-type:rat": {
                                                "name": "urn-devrev-params-oauth-token-type-rat"
                                            },
                                            "urn:devrev:params:oauth:token-type:revinfo": {
                                                "name": "urn-devrev-params-oauth-token-type-revinfo"
                                            },
                                            "urn:devrev:params:oauth:token-type:session": {
                                                "name": "urn-devrev-params-oauth-token-type-session"
                                            },
                                            "urn:devrev:params:oauth:token-type:sysu": {
                                                "name": "urn-devrev-params-oauth-token-type-sysu"
                                            },
                                            "urn:devrev:params:oauth:token-type:userinfo": {
                                                "name": "urn-devrev-params-oauth-token-type-userinfo"
                                            },
                                            "urn:devrev:params:oauth:token-type:userinfo:profile": {
                                                "name": "urn-devrev-params-oauth-token-type-userinfo-profile"
                                            },
                                            "urn:ietf:params:oauth:token-type:jwt": {
                                                "name": "urn-ietf-params-oauth-token-type-jwt"
                                            }
                                        }
                                    },
                                    "token_hint": {
                                        "description": "A hint that identifies the token.",
                                        "type": "string"
                                    }
                                },
                                "title": "auth-tokens-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.delete": {
            "post": {
                "description": "Revokes the token that matches the given token ID issued under the\ngiven Dev organization.\n",
                "operationId": "auth-tokens-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to revoke the token.",
                                "properties": {
                                    "token_id": {
                                        "description": "The unique identifier for the token under a given Dev organization.\nIf no token ID is provided, then the token ID will be set from the\nJTI claim of the token in the authorization header.\n",
                                        "type": "string"
                                    }
                                },
                                "title": "auth-tokens-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.get": {
            "get": {
                "description": "Gets the token metadata corresponding to the given token ID under the\ngiven Dev organization.\n",
                "operationId": "auth-tokens-get",
                "parameters": [
                    {
                        "description": "The unique identifier of the token under a given Dev organization.\n",
                        "explode": false,
                        "in": "query",
                        "name": "token_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "AuthTokensGetQuery"
            },
            "post": {
                "description": "Gets the token metadata corresponding to the given token ID under the\ngiven Dev organization.\n",
                "operationId": "auth-tokens-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get the token metadata.",
                                "properties": {
                                    "token_id": {
                                        "description": "The unique identifier of the token under a given Dev organization.\n",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token_id"
                                ],
                                "title": "auth-tokens-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.list": {
            "get": {
                "description": "Gets the token metadata for all the tokens corresponding to the given\ntoken type issued for a given subject.\n",
                "operationId": "auth-tokens-list",
                "parameters": [
                    {
                        "description": "An identifier that represents the application, which requested the\ntoken. Only relevant for application access tokens.\n",
                        "explode": false,
                        "in": "query",
                        "name": "client_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The type of the requested token. If no value is specified, the\nresponse will include tokens of all the types.\n",
                        "explode": false,
                        "in": "query",
                        "name": "requested_token_type",
                        "schema": {
                            "description": "The type of the requested token.",
                            "enum": [
                                "urn:devrev:params:oauth:token-type:aat",
                                "urn:devrev:params:oauth:token-type:aat:act-as",
                                "urn:devrev:params:oauth:token-type:aat:public",
                                "urn:devrev:params:oauth:token-type:dev",
                                "urn:devrev:params:oauth:token-type:dev:connect",
                                "urn:devrev:params:oauth:token-type:gat",
                                "urn:devrev:params:oauth:token-type:pat",
                                "urn:devrev:params:oauth:token-type:pat:act-as",
                                "urn:devrev:params:oauth:token-type:rat",
                                "urn:devrev:params:oauth:token-type:rev",
                                "urn:devrev:params:oauth:token-type:session",
                                "urn:devrev:params:oauth:token-type:session:dev0",
                                "urn:devrev:params:oauth:token-type:session:onetime",
                                "urn:devrev:params:oauth:token-type:session:rev:act-as",
                                "urn:devrev:params:oauth:token-type:super",
                                "urn:devrev:params:oauth:token-type:sys",
                                "urn:ietf:params:oauth:token-type:jwt"
                            ],
                            "type": "string",
                            "x-fern-enum": {
                                "urn:devrev:params:oauth:token-type:aat": {
                                    "name": "urn-devrev-params-oauth-token-type-aat"
                                },
                                "urn:devrev:params:oauth:token-type:aat:act-as": {
                                    "name": "urn-devrev-params-oauth-token-type-aat-act-as"
                                },
                                "urn:devrev:params:oauth:token-type:aat:public": {
                                    "name": "urn-devrev-params-oauth-token-type-aat-public"
                                },
                                "urn:devrev:params:oauth:token-type:dev": {
                                    "name": "urn-devrev-params-oauth-token-type-dev"
                                },
                                "urn:devrev:params:oauth:token-type:dev:connect": {
                                    "name": "urn-devrev-params-oauth-token-type-dev-connect"
                                },
                                "urn:devrev:params:oauth:token-type:gat": {
                                    "name": "urn-devrev-params-oauth-token-type-gat"
                                },
                                "urn:devrev:params:oauth:token-type:pat": {
                                    "name": "urn-devrev-params-oauth-token-type-pat"
                                },
                                "urn:devrev:params:oauth:token-type:pat:act-as": {
                                    "name": "urn-devrev-params-oauth-token-type-pat-act-as"
                                },
                                "urn:devrev:params:oauth:token-type:rat": {
                                    "name": "urn-devrev-params-oauth-token-type-rat"
                                },
                                "urn:devrev:params:oauth:token-type:rev": {
                                    "name": "urn-devrev-params-oauth-token-type-rev"
                                },
                                "urn:devrev:params:oauth:token-type:session": {
                                    "name": "urn-devrev-params-oauth-token-type-session"
                                },
                                "urn:devrev:params:oauth:token-type:session:dev0": {
                                    "name": "urn-devrev-params-oauth-token-type-session-dev0"
                                },
                                "urn:devrev:params:oauth:token-type:session:onetime": {
                                    "name": "urn-devrev-params-oauth-token-type-session-onetime"
                                },
                                "urn:devrev:params:oauth:token-type:session:rev:act-as": {
                                    "name": "urn-devrev-params-oauth-token-type-session-rev-act-as"
                                },
                                "urn:devrev:params:oauth:token-type:super": {
                                    "name": "urn-devrev-params-oauth-token-type-super"
                                },
                                "urn:devrev:params:oauth:token-type:sys": {
                                    "name": "urn-devrev-params-oauth-token-type-sys"
                                },
                                "urn:ietf:params:oauth:token-type:jwt": {
                                    "name": "urn-ietf-params-oauth-token-type-jwt"
                                }
                            }
                        }
                    },
                    {
                        "description": "The subject associated with the token. In the absence of this\nparameter, the ID of the authenticated entity is treated as the\nsubject.\n",
                        "explode": false,
                        "in": "query",
                        "name": "subject",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "AuthTokensListQuery"
            },
            "post": {
                "description": "Gets the token metadata for all the tokens corresponding to the given\ntoken type issued for a given subject.\n",
                "operationId": "auth-tokens-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to list the token metadata.",
                                "properties": {
                                    "client_id": {
                                        "description": "An identifier that represents the application, which requested the\ntoken. Only relevant for application access tokens.\n",
                                        "type": "string"
                                    },
                                    "requested_token_type": {
                                        "description": "The type of the requested token.",
                                        "enum": [
                                            "urn:devrev:params:oauth:token-type:aat",
                                            "urn:devrev:params:oauth:token-type:aat:act-as",
                                            "urn:devrev:params:oauth:token-type:aat:public",
                                            "urn:devrev:params:oauth:token-type:dev",
                                            "urn:devrev:params:oauth:token-type:dev:connect",
                                            "urn:devrev:params:oauth:token-type:gat",
                                            "urn:devrev:params:oauth:token-type:pat",
                                            "urn:devrev:params:oauth:token-type:pat:act-as",
                                            "urn:devrev:params:oauth:token-type:rat",
                                            "urn:devrev:params:oauth:token-type:rev",
                                            "urn:devrev:params:oauth:token-type:session",
                                            "urn:devrev:params:oauth:token-type:session:dev0",
                                            "urn:devrev:params:oauth:token-type:session:onetime",
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as",
                                            "urn:devrev:params:oauth:token-type:super",
                                            "urn:devrev:params:oauth:token-type:sys",
                                            "urn:ietf:params:oauth:token-type:jwt"
                                        ],
                                        "type": "string",
                                        "x-fern-enum": {
                                            "urn:devrev:params:oauth:token-type:aat": {
                                                "name": "urn-devrev-params-oauth-token-type-aat"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:public": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-public"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev": {
                                                "name": "urn-devrev-params-oauth-token-type-dev"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev:connect": {
                                                "name": "urn-devrev-params-oauth-token-type-dev-connect"
                                            },
                                            "urn:devrev:params:oauth:token-type:gat": {
                                                "name": "urn-devrev-params-oauth-token-type-gat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat": {
                                                "name": "urn-devrev-params-oauth-token-type-pat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-pat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:rat": {
                                                "name": "urn-devrev-params-oauth-token-type-rat"
                                            },
                                            "urn:devrev:params:oauth:token-type:rev": {
                                                "name": "urn-devrev-params-oauth-token-type-rev"
                                            },
                                            "urn:devrev:params:oauth:token-type:session": {
                                                "name": "urn-devrev-params-oauth-token-type-session"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:dev0": {
                                                "name": "urn-devrev-params-oauth-token-type-session-dev0"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:onetime": {
                                                "name": "urn-devrev-params-oauth-token-type-session-onetime"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-session-rev-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:super": {
                                                "name": "urn-devrev-params-oauth-token-type-super"
                                            },
                                            "urn:devrev:params:oauth:token-type:sys": {
                                                "name": "urn-devrev-params-oauth-token-type-sys"
                                            },
                                            "urn:ietf:params:oauth:token-type:jwt": {
                                                "name": "urn-ietf-params-oauth-token-type-jwt"
                                            }
                                        }
                                    },
                                    "subject": {
                                        "description": "The subject associated with the token. In the absence of this\nparameter, the ID of the authenticated entity is treated as the\nsubject.\n",
                                        "type": "string"
                                    }
                                },
                                "title": "auth-tokens-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.self.delete": {
            "post": {
                "description": "Revokes all the tokens that matches the given token type created by the\nauthenticated user.\n",
                "operationId": "auth-tokens-self-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to delete all the tokens created by the authenticated user,\nthat match with the provided token type.\n",
                                "properties": {
                                    "requested_token_type": {
                                        "description": "The type of the requested token.",
                                        "enum": [
                                            "urn:devrev:params:oauth:token-type:aat",
                                            "urn:devrev:params:oauth:token-type:aat:act-as",
                                            "urn:devrev:params:oauth:token-type:aat:public",
                                            "urn:devrev:params:oauth:token-type:dev",
                                            "urn:devrev:params:oauth:token-type:dev:connect",
                                            "urn:devrev:params:oauth:token-type:gat",
                                            "urn:devrev:params:oauth:token-type:pat",
                                            "urn:devrev:params:oauth:token-type:pat:act-as",
                                            "urn:devrev:params:oauth:token-type:rat",
                                            "urn:devrev:params:oauth:token-type:rev",
                                            "urn:devrev:params:oauth:token-type:session",
                                            "urn:devrev:params:oauth:token-type:session:dev0",
                                            "urn:devrev:params:oauth:token-type:session:onetime",
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as",
                                            "urn:devrev:params:oauth:token-type:super",
                                            "urn:devrev:params:oauth:token-type:sys",
                                            "urn:ietf:params:oauth:token-type:jwt"
                                        ],
                                        "type": "string",
                                        "x-fern-enum": {
                                            "urn:devrev:params:oauth:token-type:aat": {
                                                "name": "urn-devrev-params-oauth-token-type-aat"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:aat:public": {
                                                "name": "urn-devrev-params-oauth-token-type-aat-public"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev": {
                                                "name": "urn-devrev-params-oauth-token-type-dev"
                                            },
                                            "urn:devrev:params:oauth:token-type:dev:connect": {
                                                "name": "urn-devrev-params-oauth-token-type-dev-connect"
                                            },
                                            "urn:devrev:params:oauth:token-type:gat": {
                                                "name": "urn-devrev-params-oauth-token-type-gat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat": {
                                                "name": "urn-devrev-params-oauth-token-type-pat"
                                            },
                                            "urn:devrev:params:oauth:token-type:pat:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-pat-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:rat": {
                                                "name": "urn-devrev-params-oauth-token-type-rat"
                                            },
                                            "urn:devrev:params:oauth:token-type:rev": {
                                                "name": "urn-devrev-params-oauth-token-type-rev"
                                            },
                                            "urn:devrev:params:oauth:token-type:session": {
                                                "name": "urn-devrev-params-oauth-token-type-session"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:dev0": {
                                                "name": "urn-devrev-params-oauth-token-type-session-dev0"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:onetime": {
                                                "name": "urn-devrev-params-oauth-token-type-session-onetime"
                                            },
                                            "urn:devrev:params:oauth:token-type:session:rev:act-as": {
                                                "name": "urn-devrev-params-oauth-token-type-session-rev-act-as"
                                            },
                                            "urn:devrev:params:oauth:token-type:super": {
                                                "name": "urn-devrev-params-oauth-token-type-super"
                                            },
                                            "urn:devrev:params:oauth:token-type:sys": {
                                                "name": "urn-devrev-params-oauth-token-type-sys"
                                            },
                                            "urn:ietf:params:oauth:token-type:jwt": {
                                                "name": "urn-ietf-params-oauth-token-type-jwt"
                                            }
                                        }
                                    }
                                },
                                "title": "auth-tokens-self-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/auth-tokens.update": {
            "post": {
                "description": "Updates token metadata of a token issued under a given Dev\norganization.\n",
                "operationId": "auth-tokens-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to update the token metadata.",
                                "properties": {
                                    "token_hint": {
                                        "description": "A hint that identifies the token.",
                                        "type": "string"
                                    },
                                    "token_id": {
                                        "description": "The unique identifier of the token under a given Dev organization.\n",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token_hint",
                                    "token_id"
                                ],
                                "title": "auth-tokens-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.create": {
            "post": {
                "description": "Creates a new enterprise authentication connection for a Dev\norganization. This authentication connection will not be enabled by\ndefault for the organization and the user will need to explicitly\nenable this. Keep in mind that at a time, only one authentication\nconnection can be enabled for a Dev organization. At present, only 5\nenterprise connections can be created by an organization.\n",
                "operationId": "dev-org-auth-connections-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to create a new enterprise authentication connection.\n",
                                "discriminator": {
                                    "mapping": {
                                        "google_apps": "#/components/schemas/auth-connection-options-google-apps",
                                        "oidc": "#/components/schemas/auth-connection-options-oidc",
                                        "samlp": "#/components/schemas/auth-connection-options-saml",
                                        "waad": "#/components/schemas/auth-connection-options-azure-ad"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "description": "Object encapsulating the configuration parameters for an Azure AD\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the Azure authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the Azure authentication connection.",
                                                "type": "string"
                                            },
                                            "domain": {
                                                "description": "Domain URL of the Azure authentication connection.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-azure-ad",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for a Google Apps\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the Google Apps authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the Google Apps authentication connection.\n",
                                                "type": "string"
                                            },
                                            "tenant_domain": {
                                                "description": "Tenant domain URL of the Google Apps authentication connection.\n",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-google-apps",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for an OIDC\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the OIDC authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the OIDC authentication connection.",
                                                "type": "string"
                                            },
                                            "issuer": {
                                                "description": "Issuer URL of the OIDC authentication connection.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-oidc",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for a SAML\nauthentication connection.\n",
                                        "properties": {
                                            "sign_in_endpoint": {
                                                "description": "Sign In endpoint for the SAML authentication connection.",
                                                "type": "string"
                                            },
                                            "signing_cert": {
                                                "description": "Signing certificate for the SAML authentication connection.\n",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-saml",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "display_name": {
                                        "description": "Display name of the authentication connection. This name will be\nvisible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Defines the type for the authentication connection. Different types of\nauthentication connections have different configuration parameters.\n",
                                        "enum": [
                                            "google_apps",
                                            "oidc",
                                            "samlp",
                                            "waad"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ],
                                "title": "dev-org-auth-connections-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.delete": {
            "post": {
                "description": "Deletes an authentication connection. Only enterprise connections which\nare explicitly set up for a Dev organization can be deleted. Default\nconnections can not be deleted using this method.\n",
                "operationId": "dev-org-auth-connections-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to delete an enterprise authentication connection for a Dev\norganization. A default connection and a connection which is currently\nenabled cannot be deleted.\n",
                                "properties": {
                                    "id": {
                                        "description": "ID of the authentication connection to be deleted.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "dev-org-auth-connections-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.get": {
            "get": {
                "description": "Retrieves the details for an authentication connection.",
                "operationId": "dev-org-auth-connections-get",
                "parameters": [
                    {
                        "description": "ID of the authentication connection.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "DevOrgAuthConnectionsGetQuery"
            },
            "post": {
                "description": "Retrieves the details for an authentication connection.",
                "operationId": "dev-org-auth-connections-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to get configuration details of organization's authentication\nConnection.\n",
                                "properties": {
                                    "id": {
                                        "description": "ID of the authentication connection.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "dev-org-auth-connections-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.list": {
            "get": {
                "description": "Lists all the authentication connections available for a Dev\norganization. This list will include both social and enterprise\nconnections which are either available by default or are explicitly\ncreated by the user.\n",
                "operationId": "dev-org-auth-connections-list",
                "x-request-name": "DevOrgAuthConnectionsListQuery",
                "parameters": []
            },
            "post": {
                "description": "Lists all the authentication connections available for a Dev\norganization. This list will include both social and enterprise\nconnections which are either available by default or are explicitly\ncreated by the user.\n",
                "operationId": "dev-org-auth-connections-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "additionalProperties": false,
                                "title": "empty",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.toggle": {
            "post": {
                "description": "Enable or disable an authentication connection for a Dev organization.\nCurrently, only 1 authentication connection can be enabled at a time.\nWhen a new authentication connection is enabled, the connection which\nis currently enabled for the Dev organization is automatically\ndisabled.\n",
                "operationId": "dev-org-auth-connections-toggle",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to enable or disable an authentication connection for a Dev\norganization.\n",
                                "properties": {
                                    "id": {
                                        "description": "ID of the authentication connection to be toggled.",
                                        "type": "string"
                                    },
                                    "toggle": {
                                        "enum": [
                                            "disable",
                                            "enable"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "dev-org-auth-connections-toggle-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-orgs.auth-connections.update": {
            "post": {
                "description": "Updates an authentication connection.",
                "operationId": "dev-org-auth-connections-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request to update an enterprise authentication connection for a Dev\norganization.\n",
                                "discriminator": {
                                    "mapping": {
                                        "google_apps": "#/components/schemas/auth-connection-options-google-apps",
                                        "none": "#/components/schemas/empty",
                                        "oidc": "#/components/schemas/auth-connection-options-oidc",
                                        "samlp": "#/components/schemas/auth-connection-options-saml",
                                        "waad": "#/components/schemas/auth-connection-options-azure-ad"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "description": "Object encapsulating the configuration parameters for an Azure AD\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the Azure authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the Azure authentication connection.",
                                                "type": "string"
                                            },
                                            "domain": {
                                                "description": "Domain URL of the Azure authentication connection.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-azure-ad",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for a Google Apps\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the Google Apps authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the Google Apps authentication connection.\n",
                                                "type": "string"
                                            },
                                            "tenant_domain": {
                                                "description": "Tenant domain URL of the Google Apps authentication connection.\n",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-google-apps",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for an OIDC\nauthentication connection.\n",
                                        "properties": {
                                            "client_id": {
                                                "description": "Client ID for the OIDC authentication connection.",
                                                "type": "string"
                                            },
                                            "client_secret": {
                                                "description": "Client secret for the OIDC authentication connection.",
                                                "type": "string"
                                            },
                                            "issuer": {
                                                "description": "Issuer URL of the OIDC authentication connection.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-oidc",
                                        "type": "object"
                                    },
                                    {
                                        "description": "Object encapsulating the configuration parameters for a SAML\nauthentication connection.\n",
                                        "properties": {
                                            "sign_in_endpoint": {
                                                "description": "Sign In endpoint for the SAML authentication connection.",
                                                "type": "string"
                                            },
                                            "signing_cert": {
                                                "description": "Signing certificate for the SAML authentication connection.\n",
                                                "type": "string"
                                            }
                                        },
                                        "title": "auth-connection-options-saml",
                                        "type": "object"
                                    },
                                    {
                                        "additionalProperties": false,
                                        "title": "empty",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "display_name": {
                                        "description": "New display name of the authentication connection. This name will\nbe visible to all the users when they sign in to this Dev\norganization. For example, if the display_name is 'abclogin', then\nit would appear on the login button as 'Log in to abclogin'.\n",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "ID of the authentication connection which is to be updated.\n",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Specifies the type for the authentication connection. Different types\nof authentication connections have different configuration parameters\nthat can be updated.\n",
                                        "enum": [
                                            "google_apps",
                                            "none",
                                            "oidc",
                                            "samlp",
                                            "waad"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "dev-org-auth-connections-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-users.get": {
            "get": {
                "description": "Gets the requested user's information.",
                "operationId": "dev-users-get",
                "parameters": [
                    {
                        "description": "User ID of the requested Dev user.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "DevUsersGetQuery"
            },
            "post": {
                "description": "Gets the requested user's information.",
                "operationId": "dev-users-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to get a Dev user's information.",
                                "properties": {
                                    "id": {
                                        "description": "User ID of the requested Dev user.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "dev-users-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-users.list": {
            "get": {
                "description": "Lists users within your organization.",
                "operationId": "dev-users-list",
                "parameters": [
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters Dev users based on email addresses.",
                        "explode": false,
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Unique ID of the user in the external source.",
                        "explode": false,
                        "in": "query",
                        "name": "external_identity.id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Issuer of the external identity of the user.",
                        "explode": false,
                        "in": "query",
                        "name": "external_identity.issuer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The maximum number of Dev users to return. The default is '50'.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Fields to sort the Dev users by and the direction to sort them.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters Dev users based on state.",
                        "explode": false,
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "items": {
                                "description": "State of the user.",
                                "enum": [
                                    "active",
                                    "deactivated",
                                    "deleted",
                                    "locked",
                                    "shadow",
                                    "unassigned"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "DevUsersListQuery"
            },
            "post": {
                "description": "Lists users within your organization.",
                "operationId": "dev-users-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to get the list of Dev user's information.",
                                "properties": {
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Filters Dev users based on email addresses.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_identity": {
                                        "description": "Filters Dev users based on external identity.",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Unique ID of the user in the external source.",
                                                    "type": "string"
                                                },
                                                "issuer": {
                                                    "description": "Issuer of the external identity of the user.",
                                                    "type": "string"
                                                }
                                            },
                                            "title": "dev-user-external-identity-filter",
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "limit": {
                                        "description": "The maximum number of Dev users to return. The default is '50'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "sort_by": {
                                        "description": "Fields to sort the Dev users by and the direction to sort them.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "state": {
                                        "description": "Filters Dev users based on state.",
                                        "items": {
                                            "description": "State of the user.",
                                            "enum": [
                                                "active",
                                                "deactivated",
                                                "deleted",
                                                "locked",
                                                "shadow",
                                                "unassigned"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "dev-users-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/dev-users.self": {
            "get": {
                "description": "Gets the authenticated user's information.",
                "operationId": "dev-users-self",
                "x-request-name": "DevUsersSelfQuery",
                "parameters": []
            },
            "post": {
                "description": "Gets the authenticated user's information.",
                "operationId": "dev-users-self-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "additionalProperties": false,
                                "description": "A request to get the authenticated user's information.",
                                "title": "dev-users-self-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/parts.create": {
            "post": {
                "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
                "operationId": "parts-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "capability": "#/components/schemas/parts-create-request-capability",
                                        "enhancement": "#/components/schemas/parts-create-request-enhancement",
                                        "feature": "#/components/schemas/parts-create-request-feature",
                                        "product": "#/components/schemas/parts-create-request-product"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "parent_part": {
                                                "description": "ID of the parent product for the capability.",
                                                "example": [
                                                    "PROD-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 1,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "parent_part"
                                        ],
                                        "title": "parts-create-request-capability",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "parent_part": {
                                                "description": "ID of the parent part on which the enhancement is to be created.\n",
                                                "example": [
                                                    "PROD-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 1,
                                                "type": "array"
                                            },
                                            "target_close_date": {
                                                "description": "Target close date by which enhancement is expected to be closed.\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "target_start_date": {
                                                "description": "Target start date by which enhancement is expected to be started.\nExample Date Format: 2000-11-01T01:01:01Z\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "parent_part"
                                        ],
                                        "title": "parts-create-request-enhancement",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "parent_part": {
                                                "description": "ID of the parent capability/feature for the feature.",
                                                "example": [
                                                    "PROD-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 1,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "parent_part"
                                        ],
                                        "title": "parts-create-request-feature",
                                        "type": "object"
                                    },
                                    {
                                        "additionalProperties": false,
                                        "title": "parts-create-request-product",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "artifacts": {
                                        "description": "The IDs of the artifacts.",
                                        "example": [
                                            "ARTIFACT-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "description": {
                                        "description": "Description of the part.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Name of the part.",
                                        "type": "string"
                                    },
                                    "owned_by": {
                                        "description": "The users that own the part.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "enum": [
                                            "capability",
                                            "enhancement",
                                            "feature",
                                            "product"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "owned_by",
                                    "type"
                                ],
                                "title": "parts-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/parts.delete": {
            "post": {
                "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
                "operationId": "parts-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "The ID of the part to delete.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "parts-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/parts.get": {
            "get": {
                "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.\n",
                "operationId": "parts-get",
                "parameters": [
                    {
                        "description": "The ID of the part to retrieve.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "PROD-12345",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "PartsGetQuery"
            },
            "post": {
                "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.\n",
                "operationId": "parts-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "The ID of the part to retrieve.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "parts-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/parts.list": {
            "get": {
                "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).\n",
                "operationId": "parts-list",
                "parameters": [
                    {
                        "description": "Filters for parts created by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The maximum number of parts to return. The default is '50'.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for parts of the provided name(s).",
                        "explode": false,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for parts owned by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "owned_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Number of levels to fetch the part hierarchy up to.",
                        "explode": false,
                        "in": "query",
                        "name": "parent_part.level",
                        "schema": {
                            "format": "int32",
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Part IDs to fetch the hierarchy for. Required if any parent_part.*\nfields are provided.\n",
                        "explode": false,
                        "in": "query",
                        "name": "parent_part.parts",
                        "schema": {
                            "example": [
                                "PROD-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "minItems": 1,
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for parts of the provided type(s).",
                        "explode": false,
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "enum": [
                                    "capability",
                                    "enhancement",
                                    "feature",
                                    "product"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "PartsListQuery"
            },
            "post": {
                "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).\n",
                "operationId": "parts-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "created_by": {
                                        "description": "Filters for parts created by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "limit": {
                                        "description": "The maximum number of parts to return. The default is '50'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Filters for parts of the provided name(s).",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "owned_by": {
                                        "description": "Filters for parts owned by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "parent_part": {
                                        "description": "The filter for specifying parent part.",
                                        "properties": {
                                            "level": {
                                                "description": "Number of levels to fetch the part hierarchy up to.",
                                                "format": "int32",
                                                "minimum": 1,
                                                "type": "integer"
                                            },
                                            "parts": {
                                                "description": "Part IDs to fetch the hierarchy for.",
                                                "example": [
                                                    "PROD-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "minItems": 1,
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "parts"
                                        ],
                                        "title": "parent-part-filter",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Filters for parts of the provided type(s).",
                                        "items": {
                                            "enum": [
                                                "capability",
                                                "enhancement",
                                                "feature",
                                                "product"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "parts-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/parts.update": {
            "post": {
                "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.\n",
                "operationId": "parts-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "capability": "#/components/schemas/parts-update-request-capability",
                                        "enhancement": "#/components/schemas/parts-update-request-enhancement",
                                        "feature": "#/components/schemas/parts-update-request-feature",
                                        "none": "#/components/schemas/empty",
                                        "product": "#/components/schemas/parts-update-request-product"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "additionalProperties": false,
                                        "title": "empty",
                                        "type": "object"
                                    },
                                    {
                                        "additionalProperties": false,
                                        "title": "parts-update-request-capability",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "target_close_date": {
                                                "description": "Updates the target close date of the enhancement.",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "target_start_date": {
                                                "description": "Updates the target start date of the enhancement. Example Date\nFormat: 2000-11-01T01:01:01Z\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "parts-update-request-enhancement",
                                        "type": "object"
                                    },
                                    {
                                        "additionalProperties": false,
                                        "title": "parts-update-request-feature",
                                        "type": "object"
                                    },
                                    {
                                        "additionalProperties": false,
                                        "title": "parts-update-request-product",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "artifacts": {
                                        "properties": {
                                            "set": {
                                                "description": "Sets the artifacts to the provided IDs.",
                                                "example": [
                                                    "ARTIFACT-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "parts-update-request-artifacts",
                                        "type": "object"
                                    },
                                    "description": {
                                        "description": "The updated description of the part.",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The ID of the part to update.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The updated name of the part.",
                                        "type": "string"
                                    },
                                    "owned_by": {
                                        "properties": {
                                            "set": {
                                                "description": "Sets the owner IDs to the provided user IDs. This must not be\nempty.\n",
                                                "example": [
                                                    "DEVU-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "parts-update-request-owned-by",
                                        "type": "object"
                                    },
                                    "type": {
                                        "enum": [
                                            "capability",
                                            "enhancement",
                                            "feature",
                                            "product"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "parts-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/rev-orgs.create": {
            "post": {
                "description": "Creates a Rev organization in the authenticated user's Dev\norganization.\n",
                "operationId": "rev-orgs-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to create a new Rev organization in the Dev\norganization.\n",
                                "properties": {
                                    "description": {
                                        "description": "Description of the Rev organization.",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Name of the Rev organization.",
                                        "type": "string"
                                    },
                                    "domain": {
                                        "description": "Company's domain name. Example - 'devrev.ai'.",
                                        "type": "string"
                                    },
                                    "environment": {
                                        "description": "The environment of the Org. Defaults to 'production' if not specified.\n",
                                        "enum": [
                                            "production",
                                            "staging",
                                            "test"
                                        ],
                                        "type": "string"
                                    },
                                    "external_ref": {
                                        "description": "External ref is a custom unique identifier which is a reference to\nan unique id for this organization's data in some system of\nrecords.\n",
                                        "type": "string"
                                    },
                                    "tier": {
                                        "description": "The tier of the RevOrg.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "display_name"
                                ],
                                "title": "rev-orgs-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/rev-orgs.delete": {
            "post": {
                "description": "Deletes the Rev organization.",
                "operationId": "rev-orgs-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to delete a Rev organization.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of Rev organization to delete.",
                                        "example": "REV-AbCdEfGh",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "rev-orgs-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/rev-orgs.get": {
            "get": {
                "description": "Retrieves the Rev organization's information.",
                "operationId": "rev-orgs-get",
                "parameters": [
                    {
                        "description": "The ID of account for which default Rev organization is to be\nfetched.\n",
                        "explode": false,
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "example": "ACC-12345",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The ID of the required Rev organization.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "schema": {
                            "example": "REV-AbCdEfGh",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "RevOrgsGetQuery"
            },
            "post": {
                "description": "Retrieves the Rev organization's information.",
                "operationId": "rev-orgs-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to get Rev organization's information.",
                                "properties": {
                                    "account": {
                                        "description": "The ID of account for which default Rev organization is to be\nfetched.\n",
                                        "example": "ACC-12345",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The ID of the required Rev organization.",
                                        "example": "REV-AbCdEfGh",
                                        "type": "string"
                                    }
                                },
                                "title": "rev-orgs-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/rev-orgs.list": {
            "get": {
                "description": "Gets the list of Rev organizations' information belonging to the\nauthenticated user's Dev Organization which the user is also authorized\nto access.\n",
                "operationId": "rev-orgs-list",
                "parameters": [
                    {
                        "description": "Filters by creator.",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "created_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Array of display names of Rev orgs to be filtered.",
                        "explode": false,
                        "in": "query",
                        "name": "display_name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "List of external refs to filter Rev organizations for.",
                        "explode": false,
                        "in": "query",
                        "name": "external_ref",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The maximum number of Rev organizations to be retrieved per page.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created after the provided timestamp (inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.after",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                        "explode": false,
                        "in": "query",
                        "name": "modified_date.before",
                        "schema": {
                            "example": "2023-01-01T12:00:00.000Z",
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Fields to sort the Rev organizations by and the direction to sort\nthem.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "RevOrgsListQuery"
            },
            "post": {
                "description": "Gets the list of Rev organizations' information belonging to the\nauthenticated user's Dev Organization which the user is also authorized\nto access.\n",
                "operationId": "rev-orgs-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "A request to get the list of Rev organizations for the authenticated\nuser's Dev organization.\n",
                                "properties": {
                                    "created_by": {
                                        "description": "Filters by creator.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Array of display names of Rev orgs to be filtered.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "external_ref": {
                                        "description": "List of external refs to filter Rev organizations for.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "limit": {
                                        "description": "The maximum number of Rev organizations to be retrieved per page.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "modified_date": {
                                        "properties": {
                                            "after": {
                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "before": {
                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "date-time-filter",
                                        "type": "object"
                                    },
                                    "sort_by": {
                                        "description": "Fields to sort the Rev organizations by and the direction to sort\nthem.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "rev-orgs-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/rev-orgs.update": {
            "post": {
                "description": "Updates the Rev organization's information.",
                "operationId": "rev-orgs-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "Request object to update information of the Rev organization.\n",
                                "properties": {
                                    "description": {
                                        "description": "Description of the Rev organization.",
                                        "type": "string"
                                    },
                                    "display_name": {
                                        "description": "Customer chosen name for the Rev organization.",
                                        "type": "string"
                                    },
                                    "domain": {
                                        "description": "Company's domain name. Example - 'devrev.ai'.",
                                        "type": "string"
                                    },
                                    "environment": {
                                        "description": "The environment of the Org. Defaults to 'production' if not specified.\n",
                                        "enum": [
                                            "production",
                                            "staging",
                                            "test"
                                        ],
                                        "type": "string"
                                    },
                                    "external_ref": {
                                        "description": "External ref is a custom unique identifier which is a reference to\nan unique id for this organization's data in some system of\nrecords.\n",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The ID of Rev organization to update.",
                                        "example": "REV-AbCdEfGh",
                                        "type": "string"
                                    },
                                    "tier": {
                                        "description": "The tier of the RevOrg.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "rev-orgs-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/sla-trackers.get": {
            "get": {
                "description": "Gets an SLA tracker.",
                "operationId": "sla-trackers-get",
                "parameters": [
                    {
                        "description": "The ID of the SLA tracker to get.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "SlaTrackersGetQuery"
            },
            "post": {
                "description": "Gets an SLA tracker.",
                "operationId": "sla-trackers-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "The ID of the SLA tracker to get.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "sla-trackers-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/tags.create": {
            "post": {
                "description": "Creates a new tag, which is used to create associations between objects\nand a logical concept denoted by the tag's name.\n",
                "operationId": "tags-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to create a new tag.",
                                "properties": {
                                    "allowed_values": {
                                        "description": "The allowed values for the tag, or empty if no values are\npermitted.\n",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "description": {
                                        "description": "The description for the tag.",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The name for the tag, which must be unique across all tags.\n",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "title": "tags-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/tags.delete": {
            "post": {
                "description": "Deletes a tag.",
                "operationId": "tags-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to delete a tag.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of the tag to delete.",
                                        "example": "TAG-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "tags-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/tags.get": {
            "get": {
                "description": "Gets a tag's information.",
                "operationId": "tags-get",
                "parameters": [
                    {
                        "description": "The requested tag's ID.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "TAG-12345",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "TagsGetQuery"
            },
            "post": {
                "description": "Gets a tag's information.",
                "operationId": "tags-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get a tag's information.",
                                "properties": {
                                    "id": {
                                        "description": "The requested tag's ID.",
                                        "example": "TAG-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "tags-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/tags.list": {
            "get": {
                "description": "Lists the available tags.",
                "operationId": "tags-list",
                "parameters": [
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The maximum number of tags to return. The default is '50'.",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for tags with the provided names.",
                        "explode": false,
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Fields to sort tags by and the direction to sort them.",
                        "explode": false,
                        "in": "query",
                        "name": "sort_by",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "TagsListQuery"
            },
            "post": {
                "description": "Lists the available tags.",
                "operationId": "tags-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get information about a list of tags.",
                                "properties": {
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "limit": {
                                        "description": "The maximum number of tags to return. The default is '50'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "Filters for tags with the provided names.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "sort_by": {
                                        "description": "Fields to sort tags by and the direction to sort them.",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "tags-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/tags.update": {
            "post": {
                "description": "Updates a tag's information.",
                "operationId": "tags-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to update a tag.",
                                "properties": {
                                    "allowed_values": {
                                        "description": "Specifies an update to a tag's allowed values.",
                                        "properties": {
                                            "set": {
                                                "description": "Sets the allowed values for the tag.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "tags-update-allowed-values",
                                        "type": "object"
                                    },
                                    "description": {
                                        "description": "The updated description of the tag.",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The ID of the tag to update.",
                                        "example": "TAG-12345",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "The updated name of the tag. The name must be unique across all\ntags.\n",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "tags-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/timeline-entries.create": {
            "post": {
                "description": "Creates a new entry on an object's timeline.",
                "operationId": "timeline-entries-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to create a timeline entry for an object.",
                                "discriminator": {
                                    "mapping": {
                                        "timeline_comment": "#/components/schemas/timeline-entries-create-request-timeline-comment"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "artifacts": {
                                                "description": "The IDs of the artifacts attached to the comment.",
                                                "example": [
                                                    "ARTIFACT-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "type": "array"
                                            },
                                            "body": {
                                                "description": "The comment's body.",
                                                "type": "string"
                                            },
                                            "body_type": {
                                                "description": "The type of the body to use for the comment.",
                                                "enum": [
                                                    "snap_kit",
                                                    "snap_widget",
                                                    "text"
                                                ],
                                                "type": "string"
                                            },
                                            "snap_kit_body": {
                                                "description": "Snap Kit Body of the comment.",
                                                "properties": {
                                                    "body": {
                                                        "description": "The JSON body of the SnapKit.",
                                                        "type": "object"
                                                    },
                                                    "snap_in_action_name": {
                                                        "description": "The name of an action defined in the SnapIn. The combination of\nsnap_in_id and snap_in_action_name uniquely identifies the\ninteraction object which is to be called when actions on a snapkit\nelement is taken.\n",
                                                        "type": "string"
                                                    },
                                                    "snap_in_id": {
                                                        "description": "ID of the snap-in which created the SnapKit.",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "timeline-snap-kit-body",
                                                "type": "object"
                                            }
                                        },
                                        "title": "timeline-entries-create-request-timeline-comment",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "expires_at": {
                                        "description": "If set, then the entry is ephemeral and will be deleted after the\nprovided time. The minimum value should be at least a minute more\nthan the current timestamp.\n",
                                        "example": "2023-01-01T12:00:00.000Z",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "object": {
                                        "description": "The ID of the object to create the timeline entry for.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    },
                                    "private_to": {
                                        "description": "If the visibility of the entry is private, this specifies the users\nthat the entry is private to. Note the creator is always implicitly\nincluded in this list.\n",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "type": {
                                        "enum": [
                                            "timeline_comment"
                                        ],
                                        "type": "string"
                                    },
                                    "visibility": {
                                        "description": "The visibility of the entry. If 'private', then the entry is only\nvisible to the creator, 'internal' is visible with the Dev\norganization, 'external' is visible to the Dev organzation and Rev\nusers, and 'public' is visible to all. If not set, then the default\nvisibility is 'external'.\n",
                                        "enum": [
                                            "external",
                                            "internal",
                                            "private",
                                            "public"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "object",
                                    "type"
                                ],
                                "title": "timeline-entries-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/timeline-entries.delete": {
            "post": {
                "description": "Deletes an entry from an object's timeline.",
                "operationId": "timeline-entries-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to delete a timeline entry from an object.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of the timeline entry to delete.",
                                        "example": "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "timeline-entries-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/timeline-entries.get": {
            "get": {
                "description": "Gets an entry on an object's timeline.",
                "operationId": "timeline-entries-get",
                "parameters": [
                    {
                        "description": "The ID of the timeline entry to get.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "TimelineEntriesGetQuery"
            },
            "post": {
                "description": "Gets an entry on an object's timeline.",
                "operationId": "timeline-entries-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get a timeline entry.",
                                "properties": {
                                    "id": {
                                        "description": "The ID of the timeline entry to get.",
                                        "example": "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "timeline-entries-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/timeline-entries.list": {
            "get": {
                "description": "Lists the timeline entries for an object.",
                "operationId": "timeline-entries-list",
                "parameters": [
                    {
                        "description": "The ID of the object to list timeline entries for.",
                        "explode": false,
                        "in": "query",
                        "name": "object",
                        "required": true,
                        "schema": {
                            "example": "PROD-12345",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The maximum number of entries to return. If not set, then this\ndefaults to `50`.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The visibility of the timeline entries to filter for. Note this is a\nstrict filter, such that only entries with the exact visibilities\nspecified will be returned.\n",
                        "explode": false,
                        "in": "query",
                        "name": "visibility",
                        "schema": {
                            "items": {
                                "description": "The visibility of the entry. If 'private', then the entry is only\nvisible to the creator, 'internal' is visible with the Dev\norganization, 'external' is visible to the Dev organzation and Rev\nusers, and 'public' is visible to all. If not set, then the default\nvisibility is 'external'.\n",
                                "enum": [
                                    "external",
                                    "internal",
                                    "private",
                                    "public"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "TimelineEntriesListQuery"
            },
            "post": {
                "description": "Lists the timeline entries for an object.",
                "operationId": "timeline-entries-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to list timeline entries for an object.",
                                "properties": {
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "limit": {
                                        "description": "The maximum number of entries to return. If not set, then this\ndefaults to `50`.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "object": {
                                        "description": "The ID of the object to list timeline entries for.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    },
                                    "visibility": {
                                        "description": "The visibility of the timeline entries to filter for. Note this is\na strict filter, such that only entries with the exact visibilities\nspecified will be returned.\n",
                                        "items": {
                                            "description": "The visibility of the entry. If 'private', then the entry is only\nvisible to the creator, 'internal' is visible with the Dev\norganization, 'external' is visible to the Dev organzation and Rev\nusers, and 'public' is visible to all. If not set, then the default\nvisibility is 'external'.\n",
                                            "enum": [
                                                "external",
                                                "internal",
                                                "private",
                                                "public"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "object"
                                ],
                                "title": "timeline-entries-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/timeline-entries.update": {
            "post": {
                "description": "Updates an entry on an object's timeline.",
                "operationId": "timeline-entries-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to update a timeline entry.",
                                "discriminator": {
                                    "mapping": {
                                        "timeline_comment": "#/components/schemas/timeline-entries-update-request-timeline-comment"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "artifacts": {
                                                "properties": {
                                                    "add": {
                                                        "description": "Adds the provided artifacts to the comment. An artifact cannot be\nadded more than once, i.e. nothing is done if the artifact is\nalready attached. Mutually exclusive with `set`.\n",
                                                        "example": [
                                                            "ARTIFACT-12345"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "type": "array"
                                                    },
                                                    "remove": {
                                                        "description": "Removes the provided artifacts from the comment. If an artifact is\nnot present, then it's ignored. Mututally exclusive with `set`.\n",
                                                        "example": [
                                                            "ARTIFACT-12345"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 10,
                                                        "type": "array"
                                                    },
                                                    "set": {
                                                        "description": "Sets the field to the provided artifacts.",
                                                        "example": [
                                                            "ARTIFACT-12345"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 50,
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "timeline-entries-update-request-timeline-comment-artifacts",
                                                "type": "object"
                                            },
                                            "body": {
                                                "description": "The updated comment's body.",
                                                "type": "string"
                                            },
                                            "body_type": {
                                                "description": "The type of the body to use for the comment.",
                                                "enum": [
                                                    "snap_kit",
                                                    "snap_widget",
                                                    "text"
                                                ],
                                                "type": "string"
                                            },
                                            "snap_kit_body": {
                                                "description": "Snap Kit Body of the comment.",
                                                "properties": {
                                                    "body": {
                                                        "description": "The JSON body of the SnapKit.",
                                                        "type": "object"
                                                    },
                                                    "snap_in_action_name": {
                                                        "description": "The name of an action defined in the SnapIn. The combination of\nsnap_in_id and snap_in_action_name uniquely identifies the\ninteraction object which is to be called when actions on a snapkit\nelement is taken.\n",
                                                        "type": "string"
                                                    },
                                                    "snap_in_id": {
                                                        "description": "ID of the snap-in which created the SnapKit.",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "timeline-snap-kit-body",
                                                "type": "object"
                                            }
                                        },
                                        "title": "timeline-entries-update-request-timeline-comment",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "id": {
                                        "description": "The ID of the timeline entry to update.",
                                        "example": "don:core:<partition>:devo/<dev-org-id>:ticket/123:timeline_event/<timeline-event-id>",
                                        "type": "string"
                                    },
                                    "type": {
                                        "enum": [
                                            "timeline_comment"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id",
                                    "type"
                                ],
                                "title": "timeline-entries-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/webhooks.create": {
            "post": {
                "description": "Creates a new webhook target.",
                "operationId": "webhooks-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to create a new webhook.",
                                "properties": {
                                    "event_types": {
                                        "description": "The event types that the webhook endpoint will receive.",
                                        "items": {
                                            "description": "The event types that the webhook will receive.",
                                            "enum": [
                                                "account_created",
                                                "account_deleted",
                                                "account_updated",
                                                "conversation_created",
                                                "conversation_deleted",
                                                "conversation_updated",
                                                "dev_user_created",
                                                "dev_user_deleted",
                                                "dev_user_updated",
                                                "part_created",
                                                "part_deleted",
                                                "part_updated",
                                                "rev_org_created",
                                                "rev_org_deleted",
                                                "rev_org_updated",
                                                "rev_user_created",
                                                "rev_user_deleted",
                                                "rev_user_updated",
                                                "sla_tracker_created",
                                                "sla_tracker_deleted",
                                                "sla_tracker_updated",
                                                "tag_created",
                                                "tag_deleted",
                                                "tag_updated",
                                                "timeline_entry_created",
                                                "timeline_entry_deleted",
                                                "timeline_entry_updated",
                                                "verify",
                                                "webhook_created",
                                                "webhook_deleted",
                                                "webhook_updated",
                                                "work_created",
                                                "work_deleted",
                                                "work_updated"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "secret": {
                                        "description": "The secret to use when verifying webhook events. If provided, the\nsecret must be between 8 and 32 bytes (inclusive). If not set, a\nsecret will be automatically generated and provided in the\nresponse.\n",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "The URL of the webhook endpoint.",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "url"
                                ],
                                "title": "webhooks-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/webhooks.delete": {
            "post": {
                "description": "Deletes the requested webhook.",
                "operationId": "webhooks-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to delete a webhook.",
                                "properties": {
                                    "id": {
                                        "description": "ID for the webhook.",
                                        "example": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "webhooks-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/webhooks.get": {
            "get": {
                "description": "Gets the requested webhook's information.",
                "operationId": "webhooks-get",
                "parameters": [
                    {
                        "description": "ID for the webhook.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "WebhooksGetQuery"
            },
            "post": {
                "description": "Gets the requested webhook's information.",
                "operationId": "webhooks-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to get a webhook's information.",
                                "properties": {
                                    "id": {
                                        "description": "ID for the webhook.",
                                        "example": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "webhooks-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/webhooks.list": {
            "get": {
                "description": "Lists the webhooks.",
                "operationId": "webhooks-list",
                "x-request-name": "WebhooksListQuery",
                "parameters": []
            },
            "post": {
                "description": "Lists the webhooks.",
                "operationId": "webhooks-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "additionalProperties": false,
                                "description": "The request to list the webhooks.",
                                "title": "webhooks-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/webhooks.update": {
            "post": {
                "description": "Updates the requested webhook.",
                "operationId": "webhooks-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "description": "The request to update a webhook.",
                                "properties": {
                                    "action": {
                                        "description": "The action to update the webhook's status.",
                                        "enum": [
                                            "activate",
                                            "deactivate"
                                        ],
                                        "type": "string"
                                    },
                                    "event_types": {
                                        "properties": {
                                            "add": {
                                                "description": "The event types to add. If a provided event type is already set for\nthe webhook, then nothing is done. Note this is mutually exclusive\nwith 'set'.\n",
                                                "items": {
                                                    "description": "The event types that the webhook will receive.",
                                                    "enum": [
                                                        "account_created",
                                                        "account_deleted",
                                                        "account_updated",
                                                        "conversation_created",
                                                        "conversation_deleted",
                                                        "conversation_updated",
                                                        "dev_user_created",
                                                        "dev_user_deleted",
                                                        "dev_user_updated",
                                                        "part_created",
                                                        "part_deleted",
                                                        "part_updated",
                                                        "rev_org_created",
                                                        "rev_org_deleted",
                                                        "rev_org_updated",
                                                        "rev_user_created",
                                                        "rev_user_deleted",
                                                        "rev_user_updated",
                                                        "sla_tracker_created",
                                                        "sla_tracker_deleted",
                                                        "sla_tracker_updated",
                                                        "tag_created",
                                                        "tag_deleted",
                                                        "tag_updated",
                                                        "timeline_entry_created",
                                                        "timeline_entry_deleted",
                                                        "timeline_entry_updated",
                                                        "verify",
                                                        "webhook_created",
                                                        "webhook_deleted",
                                                        "webhook_updated",
                                                        "work_created",
                                                        "work_deleted",
                                                        "work_updated"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "remove": {
                                                "description": "The event types to remove. If a provided event type isn't set for\nthe webhook, then nothing is done. Note this is mutually exclusive\nwith 'set'.\n",
                                                "items": {
                                                    "description": "The event types that the webhook will receive.",
                                                    "enum": [
                                                        "account_created",
                                                        "account_deleted",
                                                        "account_updated",
                                                        "conversation_created",
                                                        "conversation_deleted",
                                                        "conversation_updated",
                                                        "dev_user_created",
                                                        "dev_user_deleted",
                                                        "dev_user_updated",
                                                        "part_created",
                                                        "part_deleted",
                                                        "part_updated",
                                                        "rev_org_created",
                                                        "rev_org_deleted",
                                                        "rev_org_updated",
                                                        "rev_user_created",
                                                        "rev_user_deleted",
                                                        "rev_user_updated",
                                                        "sla_tracker_created",
                                                        "sla_tracker_deleted",
                                                        "sla_tracker_updated",
                                                        "tag_created",
                                                        "tag_deleted",
                                                        "tag_updated",
                                                        "timeline_entry_created",
                                                        "timeline_entry_deleted",
                                                        "timeline_entry_updated",
                                                        "verify",
                                                        "webhook_created",
                                                        "webhook_deleted",
                                                        "webhook_updated",
                                                        "work_created",
                                                        "work_deleted",
                                                        "work_updated"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "set": {
                                                "description": "The updated event types, which will replace the webhook's current\nevent types. Note this is mutually exclusive with 'add' and\n'remove'.\n",
                                                "items": {
                                                    "description": "The event types that the webhook will receive.",
                                                    "enum": [
                                                        "account_created",
                                                        "account_deleted",
                                                        "account_updated",
                                                        "conversation_created",
                                                        "conversation_deleted",
                                                        "conversation_updated",
                                                        "dev_user_created",
                                                        "dev_user_deleted",
                                                        "dev_user_updated",
                                                        "part_created",
                                                        "part_deleted",
                                                        "part_updated",
                                                        "rev_org_created",
                                                        "rev_org_deleted",
                                                        "rev_org_updated",
                                                        "rev_user_created",
                                                        "rev_user_deleted",
                                                        "rev_user_updated",
                                                        "sla_tracker_created",
                                                        "sla_tracker_deleted",
                                                        "sla_tracker_updated",
                                                        "tag_created",
                                                        "tag_deleted",
                                                        "tag_updated",
                                                        "timeline_entry_created",
                                                        "timeline_entry_deleted",
                                                        "timeline_entry_updated",
                                                        "verify",
                                                        "webhook_created",
                                                        "webhook_deleted",
                                                        "webhook_updated",
                                                        "work_created",
                                                        "work_deleted",
                                                        "work_updated"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "webhooks-update-request-event-types",
                                        "type": "object"
                                    },
                                    "id": {
                                        "description": "ID for the webhook.",
                                        "example": "don:integration:<partition>:devo/<dev-org-id>:webhook/<webhook-id>",
                                        "type": "string"
                                    },
                                    "secret": {
                                        "description": "If provided, updates the secret that's used when verifying webhook\nevents, which must be between 8 and 32 bytes (inclusive). Otherwise\nif empty, then a new secret is generated. If the webhook is active,\nthen its status will transition to the 'unverified' state and it\nwon't receive any object events until successfully verified.\n",
                                        "format": "byte",
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "The webhook's updated URL. If the webhook is active, then the\nwebhook's status will transition to the 'unverified' state and it\nwon't receive any object events until successfully verified.\n",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "webhooks-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.create": {
            "post": {
                "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),\n[ticket](https://devrev.ai/docs/product/support)) item.\n[task](https://docs.devrev.ai/product/tasks) and opportunity work types\nare supported in the beta version.\n",
                "operationId": "works-create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "issue": "#/components/schemas/works-create-request-issue",
                                        "ticket": "#/components/schemas/works-create-request-ticket"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "properties": {
                                            "developed_with": {
                                                "description": "The IDs of the parts associated with issue.",
                                                "example": [
                                                    "PROD-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 8,
                                                "type": "array"
                                            },
                                            "priority": {
                                                "description": "Priority of the work based upon impact and criticality.",
                                                "enum": [
                                                    "p0",
                                                    "p1",
                                                    "p2",
                                                    "p3"
                                                ],
                                                "type": "string"
                                            },
                                            "priority_v2": {
                                                "description": "Priority enum id of the work based upon impact and criticality.\n",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "sprint": {
                                                "description": "The sprint that the issue belongs to.",
                                                "type": "string"
                                            },
                                            "target_start_date": {
                                                "description": "Timestamp for when the work is expected to start.",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "title": "works-create-request-issue",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "channels": {
                                                "description": "Channels of the ticket.",
                                                "items": {
                                                    "description": "Channels of the ticket.",
                                                    "enum": [
                                                        "email",
                                                        "plug",
                                                        "slack"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "group": {
                                                "description": "The group that the ticket is associated with.",
                                                "type": "string"
                                            },
                                            "is_spam": {
                                                "description": "Whether the ticket is spam.",
                                                "type": "boolean"
                                            },
                                            "needs_response": {
                                                "description": "Whether the ticket needs a response.",
                                                "type": "boolean"
                                            },
                                            "rev_org": {
                                                "description": "The Rev organization that the ticket is associated with.",
                                                "example": "REV-AbCdEfGh",
                                                "type": "string"
                                            },
                                            "severity": {
                                                "description": "Severity of the ticket.",
                                                "enum": [
                                                    "blocker",
                                                    "high",
                                                    "low",
                                                    "medium"
                                                ],
                                                "type": "string"
                                            },
                                            "source_channel": {
                                                "description": "The source channel of the ticket.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "works-create-request-ticket",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "applies_to_part": {
                                        "description": "The [part](https://devrev.ai/docs/product/parts) that the work\napplies to. Specifying a part is required when creating tickets and\nissues.\n",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    },
                                    "artifacts": {
                                        "description": "The IDs of the artifacts to associate with the work item.\n",
                                        "example": [
                                            "ARTIFACT-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "body": {
                                        "description": "Body of the work object.",
                                        "type": "string"
                                    },
                                    "owned_by": {
                                        "description": "The users that own the work.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "reported_by": {
                                        "description": "The users that reported the work.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "stage": {
                                        "description": "Sets an object's initial stage.",
                                        "properties": {
                                            "name": {
                                                "description": "The name of the stage.",
                                                "type": "string"
                                            }
                                        },
                                        "title": "stage-init",
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Tags associated with the work item.",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "The ID of the tag.",
                                                    "example": "TAG-12345",
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "description": "The value for the object's association with the tag. If specified,\nthe value must be one that's specified in the tag's allowed values.\n",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id"
                                            ],
                                            "title": "set-tag-with-value",
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "target_close_date": {
                                        "description": "Timestamp for when the work is expected to be complete.",
                                        "example": "2023-01-01T12:00:00.000Z",
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title of the work object.",
                                        "type": "string"
                                    },
                                    "type": {
                                        "enum": [
                                            "issue",
                                            "ticket"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "applies_to_part",
                                    "owned_by",
                                    "title",
                                    "type"
                                ],
                                "title": "works-create-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.delete": {
            "post": {
                "description": "Deletes a work item.",
                "operationId": "works-delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "The work's ID.",
                                        "example": "ISS-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "works-delete-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.export": {
            "get": {
                "description": "Exports a collection of work items.",
                "operationId": "works-export",
                "parameters": [
                    {
                        "description": "Filters for work belonging to any of the provided parts.",
                        "explode": false,
                        "in": "query",
                        "name": "applies_to_part",
                        "schema": {
                            "example": [
                                "PROD-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work created by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The number of work items to return. The default is '50', the maximum\nis '5000'.\n",
                        "explode": false,
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided Accounts.",
                        "explode": false,
                        "in": "query",
                        "name": "issue.accounts",
                        "schema": {
                            "example": [
                                "ACC-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided priorities.",
                        "explode": false,
                        "in": "query",
                        "name": "issue.priority",
                        "schema": {
                            "items": {
                                "description": "Priority of the work based upon impact and criticality.",
                                "enum": [
                                    "p0",
                                    "p1",
                                    "p2",
                                    "p3"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided priority enum ids.\n",
                        "explode": false,
                        "in": "query",
                        "name": "issue.priority_v2",
                        "schema": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided Rev organizations.\n",
                        "explode": false,
                        "in": "query",
                        "name": "issue.rev_orgs",
                        "schema": {
                            "example": [
                                "REV-AbCdEfGh"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work owned by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "owned_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work reported by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "reported_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for records in the provided stage(s) by name.",
                        "explode": false,
                        "in": "query",
                        "name": "stage.name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues that are staged.",
                        "explode": false,
                        "in": "query",
                        "name": "staged_info.is_staged",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for works with selected sync statuses.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_in.status",
                        "schema": {
                            "items": {
                                "enum": [
                                    "failed",
                                    "modified",
                                    "staged",
                                    "succeeded"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works modified with selected sync units.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_in.sync_unit",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works with selected sync statuses.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_out.status",
                        "schema": {
                            "items": {
                                "enum": [
                                    "failed",
                                    "succeeded"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works modified with selected sync units.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_out.sync_unit",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues synced from this specific origin system.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.origin_system",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work with any of the provided tags.",
                        "explode": false,
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "example": [
                                "TAG-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided channels.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.channels",
                        "schema": {
                            "items": {
                                "description": "Channels of the ticket.",
                                "enum": [
                                    "email",
                                    "plug",
                                    "slack"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets belonging to specific groups.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.group",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets that are spam.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.is_spam",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for tickets that need response.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.needs_response",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for tickets that are associated with any of the provided Rev\norganizations.\n",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.rev_org",
                        "schema": {
                            "example": [
                                "REV-AbCdEfGh"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided severities.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.severity",
                        "schema": {
                            "items": {
                                "description": "Severity of the ticket.",
                                "enum": [
                                    "blocker",
                                    "high",
                                    "low",
                                    "medium"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for records with any of the provided SLA stages.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.sla_summary.stage",
                        "schema": {
                            "items": {
                                "description": "The stage of the SLA. This is the metric stage which is closest to\nbreach.\n",
                                "enum": [
                                    "breached",
                                    "completed",
                                    "paused",
                                    "running",
                                    "warning"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided source channels.\n",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.source_channel",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work of the provided types.",
                        "explode": false,
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "enum": [
                                    "issue",
                                    "ticket"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "WorksExportQuery"
            },
            "post": {
                "description": "Exports a collection of work items.",
                "operationId": "works-export-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actual_close_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "applies_to_part": {
                                        "description": "Filters for work belonging to any of the provided parts.",
                                        "example": [
                                            "PROD-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_by": {
                                        "description": "Filters for work created by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "first": {
                                        "description": "The number of work items to return. The default is '50', the\nmaximum is '5000'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "issue": {
                                        "properties": {
                                            "accounts": {
                                                "description": "Filters for issues with any of the provided Accounts.",
                                                "example": [
                                                    "ACC-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "actual_start_date": {
                                                "description": "Provides ways to specify date ranges on objects.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "preset": "#/components/schemas/date-time-preset",
                                                        "range": "#/components/schemas/date-time-filter"
                                                    },
                                                    "propertyName": "type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "after": {
                                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "before": {
                                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "title": "date-time-filter",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Provides preset types for date filter.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                            },
                                                            "propertyName": "preset_type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-last-n-days",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-next-n-days",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "preset_type": {
                                                                "description": "Type of date preset.",
                                                                "enum": [
                                                                    "last_n_days",
                                                                    "next_n_days"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "preset_type"
                                                        ],
                                                        "title": "date-time-preset",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of date filter.",
                                                        "enum": [
                                                            "preset",
                                                            "range"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "title": "date-filter",
                                                "type": "object"
                                            },
                                            "priority": {
                                                "description": "Filters for issues with any of the provided priorities.",
                                                "items": {
                                                    "description": "Priority of the work based upon impact and criticality.",
                                                    "enum": [
                                                        "p0",
                                                        "p1",
                                                        "p2",
                                                        "p3"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "priority_v2": {
                                                "description": "Filters for issues with any of the provided priority enum ids.\n",
                                                "items": {
                                                    "format": "int64",
                                                    "type": "integer"
                                                },
                                                "type": "array"
                                            },
                                            "rev_orgs": {
                                                "description": "Filters for issues with any of the provided Rev organizations.\n",
                                                "example": [
                                                    "REV-AbCdEfGh"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "target_start_date": {
                                                "description": "Provides ways to specify date ranges on objects.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "preset": "#/components/schemas/date-time-preset",
                                                        "range": "#/components/schemas/date-time-filter"
                                                    },
                                                    "propertyName": "type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "after": {
                                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "before": {
                                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "title": "date-time-filter",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Provides preset types for date filter.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                            },
                                                            "propertyName": "preset_type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-last-n-days",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-next-n-days",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "preset_type": {
                                                                "description": "Type of date preset.",
                                                                "enum": [
                                                                    "last_n_days",
                                                                    "next_n_days"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "preset_type"
                                                        ],
                                                        "title": "date-time-preset",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of date filter.",
                                                        "enum": [
                                                            "preset",
                                                            "range"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "title": "date-filter",
                                                "type": "object"
                                            }
                                        },
                                        "title": "works-filter-issue",
                                        "type": "object"
                                    },
                                    "modified_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "owned_by": {
                                        "description": "Filters for work owned by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "reported_by": {
                                        "description": "Filters for work reported by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "stage": {
                                        "description": "The filter for stages.",
                                        "properties": {
                                            "name": {
                                                "description": "Filters for records in the provided stage(s) by name.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "stage-filter",
                                        "type": "object"
                                    },
                                    "staged_info": {
                                        "properties": {
                                            "is_staged": {
                                                "description": "Filters for issues that are staged.",
                                                "type": "boolean"
                                            }
                                        },
                                        "title": "staged-info-filter",
                                        "type": "object"
                                    },
                                    "sync_metadata": {
                                        "properties": {
                                            "last_sync_in": {
                                                "properties": {
                                                    "status": {
                                                        "description": "Filters for works with selected sync statuses.",
                                                        "items": {
                                                            "enum": [
                                                                "failed",
                                                                "modified",
                                                                "staged",
                                                                "succeeded"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "sync_date": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    },
                                                    "sync_unit": {
                                                        "description": "Filters for works modified with selected sync units.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "sync-metadata-filter-sync-in-filter",
                                                "type": "object"
                                            },
                                            "last_sync_out": {
                                                "properties": {
                                                    "status": {
                                                        "description": "Filters for works with selected sync statuses.",
                                                        "items": {
                                                            "enum": [
                                                                "failed",
                                                                "succeeded"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "sync_date": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    },
                                                    "sync_unit": {
                                                        "description": "Filters for works modified with selected sync units.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "sync-metadata-filter-sync-out-filter",
                                                "type": "object"
                                            },
                                            "origin_system": {
                                                "description": "Filters for issues synced from this specific origin system.\n",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "sync-metadata-filter",
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Filters for work with any of the provided tags.",
                                        "example": [
                                            "TAG-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "target_close_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "ticket": {
                                        "properties": {
                                            "channels": {
                                                "description": "Filters for tickets with any of the provided channels.",
                                                "items": {
                                                    "description": "Channels of the ticket.",
                                                    "enum": [
                                                        "email",
                                                        "plug",
                                                        "slack"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "group": {
                                                "description": "Filters for tickets belonging to specific groups.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "is_spam": {
                                                "description": "Filters for tickets that are spam.",
                                                "type": "boolean"
                                            },
                                            "needs_response": {
                                                "description": "Filters for tickets that need response.",
                                                "type": "boolean"
                                            },
                                            "rev_org": {
                                                "description": "Filters for tickets that are associated with any of the provided\nRev organizations.\n",
                                                "example": [
                                                    "REV-AbCdEfGh"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "severity": {
                                                "description": "Filters for tickets with any of the provided severities.",
                                                "items": {
                                                    "description": "Severity of the ticket.",
                                                    "enum": [
                                                        "blocker",
                                                        "high",
                                                        "low",
                                                        "medium"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "sla_summary": {
                                                "description": "The filter for SLA summary.",
                                                "properties": {
                                                    "stage": {
                                                        "description": "Filters for records with any of the provided SLA stages.",
                                                        "items": {
                                                            "description": "The stage of the SLA. This is the metric stage which is closest to\nbreach.\n",
                                                            "enum": [
                                                                "breached",
                                                                "completed",
                                                                "paused",
                                                                "running",
                                                                "warning"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "target_time": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    }
                                                },
                                                "title": "sla-summary-filter",
                                                "type": "object"
                                            },
                                            "source_channel": {
                                                "description": "Filters for tickets with any of the provided source channels.\n",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "surveys": {
                                                "additionalProperties": false,
                                                "description": "The filter for survey aggregation.",
                                                "title": "survey-aggregation-filter",
                                                "type": "object"
                                            }
                                        },
                                        "title": "works-filter-ticket",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Filters for work of the provided types.",
                                        "items": {
                                            "enum": [
                                                "issue",
                                                "ticket"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "works-export-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.get": {
            "get": {
                "description": "Gets a work item's information.",
                "operationId": "works-get",
                "parameters": [
                    {
                        "description": "The work's ID.",
                        "explode": false,
                        "in": "query",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "example": "ISS-12345",
                            "type": "string"
                        }
                    }
                ],
                "x-request-name": "WorksGetQuery"
            },
            "post": {
                "description": "Gets a work item's information.",
                "operationId": "works-get-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "The work's ID.",
                                        "example": "ISS-12345",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "works-get-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.list": {
            "get": {
                "description": "Lists a collection of work items.",
                "operationId": "works-list",
                "parameters": [
                    {
                        "description": "Filters for work belonging to any of the provided parts.",
                        "explode": false,
                        "in": "query",
                        "name": "applies_to_part",
                        "schema": {
                            "example": [
                                "PROD-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work created by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "created_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The cursor to resume iteration from. If not provided, then iteration\nstarts from the beginning.\n",
                        "explode": false,
                        "in": "query",
                        "name": "cursor",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided Accounts.",
                        "explode": false,
                        "in": "query",
                        "name": "issue.accounts",
                        "schema": {
                            "example": [
                                "ACC-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided priorities.",
                        "explode": false,
                        "in": "query",
                        "name": "issue.priority",
                        "schema": {
                            "items": {
                                "description": "Priority of the work based upon impact and criticality.",
                                "enum": [
                                    "p0",
                                    "p1",
                                    "p2",
                                    "p3"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided priority enum ids.\n",
                        "explode": false,
                        "in": "query",
                        "name": "issue.priority_v2",
                        "schema": {
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues with any of the provided Rev organizations.\n",
                        "explode": false,
                        "in": "query",
                        "name": "issue.rev_orgs",
                        "schema": {
                            "example": [
                                "REV-AbCdEfGh"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "The maximum number of works to return. The default is '50'.\n",
                        "explode": false,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The iteration mode to use, otherwise if not set, then \"after\" is\nused.\n",
                        "explode": false,
                        "in": "query",
                        "name": "mode",
                        "schema": {
                            "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                            "enum": [
                                "after",
                                "before"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filters for work owned by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "owned_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work reported by any of these users.",
                        "explode": false,
                        "in": "query",
                        "name": "reported_by",
                        "schema": {
                            "example": [
                                "DEVU-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for records in the provided stage(s) by name.",
                        "explode": false,
                        "in": "query",
                        "name": "stage.name",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues that are staged.",
                        "explode": false,
                        "in": "query",
                        "name": "staged_info.is_staged",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for works with selected sync statuses.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_in.status",
                        "schema": {
                            "items": {
                                "enum": [
                                    "failed",
                                    "modified",
                                    "staged",
                                    "succeeded"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works modified with selected sync units.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_in.sync_unit",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works with selected sync statuses.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_out.status",
                        "schema": {
                            "items": {
                                "enum": [
                                    "failed",
                                    "succeeded"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for works modified with selected sync units.",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.last_sync_out.sync_unit",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for issues synced from this specific origin system.\n",
                        "explode": false,
                        "in": "query",
                        "name": "sync_metadata.origin_system",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work with any of the provided tags.",
                        "explode": false,
                        "in": "query",
                        "name": "tags",
                        "schema": {
                            "example": [
                                "TAG-12345"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided channels.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.channels",
                        "schema": {
                            "items": {
                                "description": "Channels of the ticket.",
                                "enum": [
                                    "email",
                                    "plug",
                                    "slack"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets belonging to specific groups.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.group",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets that are spam.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.is_spam",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for tickets that need response.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.needs_response",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filters for tickets that are associated with any of the provided Rev\norganizations.\n",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.rev_org",
                        "schema": {
                            "example": [
                                "REV-AbCdEfGh"
                            ],
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided severities.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.severity",
                        "schema": {
                            "items": {
                                "description": "Severity of the ticket.",
                                "enum": [
                                    "blocker",
                                    "high",
                                    "low",
                                    "medium"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for records with any of the provided SLA stages.",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.sla_summary.stage",
                        "schema": {
                            "items": {
                                "description": "The stage of the SLA. This is the metric stage which is closest to\nbreach.\n",
                                "enum": [
                                    "breached",
                                    "completed",
                                    "paused",
                                    "running",
                                    "warning"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for tickets with any of the provided source channels.\n",
                        "explode": false,
                        "in": "query",
                        "name": "ticket.source_channel",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Filters for work of the provided types.",
                        "explode": false,
                        "in": "query",
                        "name": "type",
                        "schema": {
                            "items": {
                                "enum": [
                                    "issue",
                                    "ticket"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    }
                ],
                "x-request-name": "WorksListQuery"
            },
            "post": {
                "description": "Lists a collection of work items.",
                "operationId": "works-list-post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "actual_close_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "applies_to_part": {
                                        "description": "Filters for work belonging to any of the provided parts.",
                                        "example": [
                                            "PROD-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_by": {
                                        "description": "Filters for work created by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "created_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "cursor": {
                                        "description": "The cursor to resume iteration from. If not provided, then\niteration starts from the beginning.\n",
                                        "type": "string"
                                    },
                                    "issue": {
                                        "properties": {
                                            "accounts": {
                                                "description": "Filters for issues with any of the provided Accounts.",
                                                "example": [
                                                    "ACC-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "actual_start_date": {
                                                "description": "Provides ways to specify date ranges on objects.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "preset": "#/components/schemas/date-time-preset",
                                                        "range": "#/components/schemas/date-time-filter"
                                                    },
                                                    "propertyName": "type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "after": {
                                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "before": {
                                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "title": "date-time-filter",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Provides preset types for date filter.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                            },
                                                            "propertyName": "preset_type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-last-n-days",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-next-n-days",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "preset_type": {
                                                                "description": "Type of date preset.",
                                                                "enum": [
                                                                    "last_n_days",
                                                                    "next_n_days"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "preset_type"
                                                        ],
                                                        "title": "date-time-preset",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of date filter.",
                                                        "enum": [
                                                            "preset",
                                                            "range"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "title": "date-filter",
                                                "type": "object"
                                            },
                                            "priority": {
                                                "description": "Filters for issues with any of the provided priorities.",
                                                "items": {
                                                    "description": "Priority of the work based upon impact and criticality.",
                                                    "enum": [
                                                        "p0",
                                                        "p1",
                                                        "p2",
                                                        "p3"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "priority_v2": {
                                                "description": "Filters for issues with any of the provided priority enum ids.\n",
                                                "items": {
                                                    "format": "int64",
                                                    "type": "integer"
                                                },
                                                "type": "array"
                                            },
                                            "rev_orgs": {
                                                "description": "Filters for issues with any of the provided Rev organizations.\n",
                                                "example": [
                                                    "REV-AbCdEfGh"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "target_start_date": {
                                                "description": "Provides ways to specify date ranges on objects.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "preset": "#/components/schemas/date-time-preset",
                                                        "range": "#/components/schemas/date-time-filter"
                                                    },
                                                    "propertyName": "type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "after": {
                                                                "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "before": {
                                                                "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                "example": "2023-01-01T12:00:00.000Z",
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "title": "date-time-filter",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "description": "Provides preset types for date filter.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                            },
                                                            "propertyName": "preset_type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-last-n-days",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "properties": {
                                                                    "days": {
                                                                        "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                        "maximum": 4294967295,
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "days"
                                                                ],
                                                                "title": "date-time-preset-next-n-days",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "preset_type": {
                                                                "description": "Type of date preset.",
                                                                "enum": [
                                                                    "last_n_days",
                                                                    "next_n_days"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "preset_type"
                                                        ],
                                                        "title": "date-time-preset",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "type": {
                                                        "description": "Type of date filter.",
                                                        "enum": [
                                                            "preset",
                                                            "range"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type"
                                                ],
                                                "title": "date-filter",
                                                "type": "object"
                                            }
                                        },
                                        "title": "works-filter-issue",
                                        "type": "object"
                                    },
                                    "limit": {
                                        "description": "The maximum number of works to return. The default is '50'.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "The iteration mode to use. If \"after\", then entries after the provided\ncursor will be returned, or if no cursor is provided, then from the\nbeginning. If \"before\", then entries before the provided cursor will be\nreturned, or if no cursor is provided, then from the end. Entries will\nalways be returned in the specified sort-by order.\n",
                                        "enum": [
                                            "after",
                                            "before"
                                        ],
                                        "type": "string"
                                    },
                                    "modified_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "owned_by": {
                                        "description": "Filters for work owned by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "reported_by": {
                                        "description": "Filters for work reported by any of these users.",
                                        "example": [
                                            "DEVU-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "stage": {
                                        "description": "The filter for stages.",
                                        "properties": {
                                            "name": {
                                                "description": "Filters for records in the provided stage(s) by name.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "stage-filter",
                                        "type": "object"
                                    },
                                    "staged_info": {
                                        "properties": {
                                            "is_staged": {
                                                "description": "Filters for issues that are staged.",
                                                "type": "boolean"
                                            }
                                        },
                                        "title": "staged-info-filter",
                                        "type": "object"
                                    },
                                    "sync_metadata": {
                                        "properties": {
                                            "last_sync_in": {
                                                "properties": {
                                                    "status": {
                                                        "description": "Filters for works with selected sync statuses.",
                                                        "items": {
                                                            "enum": [
                                                                "failed",
                                                                "modified",
                                                                "staged",
                                                                "succeeded"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "sync_date": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    },
                                                    "sync_unit": {
                                                        "description": "Filters for works modified with selected sync units.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "sync-metadata-filter-sync-in-filter",
                                                "type": "object"
                                            },
                                            "last_sync_out": {
                                                "properties": {
                                                    "status": {
                                                        "description": "Filters for works with selected sync statuses.",
                                                        "items": {
                                                            "enum": [
                                                                "failed",
                                                                "succeeded"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "sync_date": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    },
                                                    "sync_unit": {
                                                        "description": "Filters for works modified with selected sync units.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "sync-metadata-filter-sync-out-filter",
                                                "type": "object"
                                            },
                                            "origin_system": {
                                                "description": "Filters for issues synced from this specific origin system.\n",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "sync-metadata-filter",
                                        "type": "object"
                                    },
                                    "tags": {
                                        "description": "Filters for work with any of the provided tags.",
                                        "example": [
                                            "TAG-12345"
                                        ],
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "target_close_date": {
                                        "description": "Provides ways to specify date ranges on objects.",
                                        "discriminator": {
                                            "mapping": {
                                                "preset": "#/components/schemas/date-time-preset",
                                                "range": "#/components/schemas/date-time-filter"
                                            },
                                            "propertyName": "type"
                                        },
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "after": {
                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "before": {
                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                        "example": "2023-01-01T12:00:00.000Z",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "date-time-filter",
                                                "type": "object"
                                            },
                                            {
                                                "description": "Provides preset types for date filter.",
                                                "discriminator": {
                                                    "mapping": {
                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                    },
                                                    "propertyName": "preset_type"
                                                },
                                                "oneOf": [
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-last-n-days",
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "days": {
                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                "maximum": 4294967295,
                                                                "minimum": 0,
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "days"
                                                        ],
                                                        "title": "date-time-preset-next-n-days",
                                                        "type": "object"
                                                    }
                                                ],
                                                "properties": {
                                                    "preset_type": {
                                                        "description": "Type of date preset.",
                                                        "enum": [
                                                            "last_n_days",
                                                            "next_n_days"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "preset_type"
                                                ],
                                                "title": "date-time-preset",
                                                "type": "object"
                                            }
                                        ],
                                        "properties": {
                                            "type": {
                                                "description": "Type of date filter.",
                                                "enum": [
                                                    "preset",
                                                    "range"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "type"
                                        ],
                                        "title": "date-filter",
                                        "type": "object"
                                    },
                                    "ticket": {
                                        "properties": {
                                            "channels": {
                                                "description": "Filters for tickets with any of the provided channels.",
                                                "items": {
                                                    "description": "Channels of the ticket.",
                                                    "enum": [
                                                        "email",
                                                        "plug",
                                                        "slack"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "group": {
                                                "description": "Filters for tickets belonging to specific groups.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "is_spam": {
                                                "description": "Filters for tickets that are spam.",
                                                "type": "boolean"
                                            },
                                            "needs_response": {
                                                "description": "Filters for tickets that need response.",
                                                "type": "boolean"
                                            },
                                            "rev_org": {
                                                "description": "Filters for tickets that are associated with any of the provided\nRev organizations.\n",
                                                "example": [
                                                    "REV-AbCdEfGh"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "severity": {
                                                "description": "Filters for tickets with any of the provided severities.",
                                                "items": {
                                                    "description": "Severity of the ticket.",
                                                    "enum": [
                                                        "blocker",
                                                        "high",
                                                        "low",
                                                        "medium"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "sla_summary": {
                                                "description": "The filter for SLA summary.",
                                                "properties": {
                                                    "stage": {
                                                        "description": "Filters for records with any of the provided SLA stages.",
                                                        "items": {
                                                            "description": "The stage of the SLA. This is the metric stage which is closest to\nbreach.\n",
                                                            "enum": [
                                                                "breached",
                                                                "completed",
                                                                "paused",
                                                                "running",
                                                                "warning"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "target_time": {
                                                        "description": "Provides ways to specify date ranges on objects.",
                                                        "discriminator": {
                                                            "mapping": {
                                                                "preset": "#/components/schemas/date-time-preset",
                                                                "range": "#/components/schemas/date-time-filter"
                                                            },
                                                            "propertyName": "type"
                                                        },
                                                        "oneOf": [
                                                            {
                                                                "properties": {
                                                                    "after": {
                                                                        "description": "Filters for objects created after the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    },
                                                                    "before": {
                                                                        "description": "Filters for objects created before the provided timestamp\n(inclusive).\n",
                                                                        "example": "2023-01-01T12:00:00.000Z",
                                                                        "format": "date-time",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "title": "date-time-filter",
                                                                "type": "object"
                                                            },
                                                            {
                                                                "description": "Provides preset types for date filter.",
                                                                "discriminator": {
                                                                    "mapping": {
                                                                        "last_n_days": "#/components/schemas/date-time-preset-last-n-days",
                                                                        "next_n_days": "#/components/schemas/date-time-preset-next-n-days"
                                                                    },
                                                                    "propertyName": "preset_type"
                                                                },
                                                                "oneOf": [
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\npast n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-last-n-days",
                                                                        "type": "object"
                                                                    },
                                                                    {
                                                                        "properties": {
                                                                            "days": {
                                                                                "description": "The range starts from the current timestamp and continues for the\nnext n days.\n",
                                                                                "maximum": 4294967295,
                                                                                "minimum": 0,
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "days"
                                                                        ],
                                                                        "title": "date-time-preset-next-n-days",
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "properties": {
                                                                    "preset_type": {
                                                                        "description": "Type of date preset.",
                                                                        "enum": [
                                                                            "last_n_days",
                                                                            "next_n_days"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "preset_type"
                                                                ],
                                                                "title": "date-time-preset",
                                                                "type": "object"
                                                            }
                                                        ],
                                                        "properties": {
                                                            "type": {
                                                                "description": "Type of date filter.",
                                                                "enum": [
                                                                    "preset",
                                                                    "range"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "type"
                                                        ],
                                                        "title": "date-filter",
                                                        "type": "object"
                                                    }
                                                },
                                                "title": "sla-summary-filter",
                                                "type": "object"
                                            },
                                            "source_channel": {
                                                "description": "Filters for tickets with any of the provided source channels.\n",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "surveys": {
                                                "additionalProperties": false,
                                                "description": "The filter for survey aggregation.",
                                                "title": "survey-aggregation-filter",
                                                "type": "object"
                                            }
                                        },
                                        "title": "works-filter-ticket",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Filters for work of the provided types.",
                                        "items": {
                                            "enum": [
                                                "issue",
                                                "ticket"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "title": "works-list-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/works.update": {
            "post": {
                "description": "Updates a work item's information.",
                "operationId": "works-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "discriminator": {
                                    "mapping": {
                                        "issue": "#/components/schemas/works-update-request-issue",
                                        "none": "#/components/schemas/empty",
                                        "ticket": "#/components/schemas/works-update-request-ticket"
                                    },
                                    "propertyName": "type"
                                },
                                "oneOf": [
                                    {
                                        "additionalProperties": false,
                                        "title": "empty",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "developed_with": {
                                                "properties": {
                                                    "set": {
                                                        "description": "Sets the IDs of the parts associated with issue.",
                                                        "example": [
                                                            "PROD-12345"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "maxItems": 8,
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "works-update-request-issue-developed-with",
                                                "type": "object"
                                            },
                                            "priority": {
                                                "description": "Priority of the work based upon impact and criticality.",
                                                "enum": [
                                                    "p0",
                                                    "p1",
                                                    "p2",
                                                    "p3"
                                                ],
                                                "type": "string"
                                            },
                                            "priority_v2": {
                                                "description": "Priority enum id of the work based upon impact and criticality.\n",
                                                "format": "int64",
                                                "type": "integer"
                                            },
                                            "sprint": {
                                                "description": "Updates the sprint that the issue belongs to.",
                                                "nullable": true,
                                                "type": "string"
                                            },
                                            "target_start_date": {
                                                "description": "Updates the timestamp for when the work is expected to start.\n",
                                                "example": "2023-01-01T12:00:00.000Z",
                                                "format": "date-time",
                                                "nullable": true,
                                                "type": "string"
                                            }
                                        },
                                        "title": "works-update-request-issue",
                                        "type": "object"
                                    },
                                    {
                                        "properties": {
                                            "channels": {
                                                "properties": {
                                                    "set": {
                                                        "description": "Sets the channels to the provided channels.",
                                                        "items": {
                                                            "description": "Channels of the ticket.",
                                                            "enum": [
                                                                "email",
                                                                "plug",
                                                                "slack"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "works-update-request-ticket-channels",
                                                "type": "object"
                                            },
                                            "group": {
                                                "description": "Updates the group that the ticket is associated with.",
                                                "nullable": true,
                                                "type": "string"
                                            },
                                            "is_spam": {
                                                "description": "Updates whether the ticket is spam.",
                                                "type": "boolean"
                                            },
                                            "needs_response": {
                                                "description": "Updates whether the ticket needs a response.",
                                                "type": "boolean"
                                            },
                                            "rev_org": {
                                                "description": "Updates the Rev organization that the ticket is associated with.\n",
                                                "example": "REV-AbCdEfGh",
                                                "nullable": true,
                                                "type": "string"
                                            },
                                            "severity": {
                                                "description": "Severity of the ticket.",
                                                "enum": [
                                                    "blocker",
                                                    "high",
                                                    "low",
                                                    "medium"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "title": "works-update-request-ticket",
                                        "type": "object"
                                    }
                                ],
                                "properties": {
                                    "applies_to_part": {
                                        "description": "Updates the part that the work item applies to.",
                                        "example": "PROD-12345",
                                        "type": "string"
                                    },
                                    "artifacts": {
                                        "properties": {
                                            "add": {
                                                "description": "Adds the provided artifacts (if not already present) to the field.\n",
                                                "example": [
                                                    "ARTIFACT-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "type": "array"
                                            },
                                            "remove": {
                                                "description": "Removes the provided artifacts (if they exist) from the field.\n",
                                                "example": [
                                                    "ARTIFACT-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "type": "array"
                                            },
                                            "set": {
                                                "description": "Sets the field to the provided artifacts.",
                                                "example": [
                                                    "ARTIFACT-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "maxItems": 50,
                                                "type": "array"
                                            }
                                        },
                                        "title": "works-update-request-artifacts",
                                        "type": "object"
                                    },
                                    "body": {
                                        "description": "Updated body of the work object, or unchanged if not provided.\n",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "The work's ID.",
                                        "example": "ISS-12345",
                                        "type": "string"
                                    },
                                    "owned_by": {
                                        "properties": {
                                            "set": {
                                                "description": "Sets the owner IDs to the provided user IDs. This must not be\nempty.\n",
                                                "example": [
                                                    "DEVU-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "works-update-request-owned-by",
                                        "type": "object"
                                    },
                                    "reported_by": {
                                        "properties": {
                                            "set": {
                                                "description": "Sets the users that reported the work to the provided user IDs.\n",
                                                "example": [
                                                    "DEVU-12345"
                                                ],
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "works-update-request-reported-by",
                                        "type": "object"
                                    },
                                    "stage": {
                                        "description": "Updates an object's stage.",
                                        "properties": {
                                            "name": {
                                                "description": "The updated name of the stage, otherwise unchanged if not set.\n",
                                                "type": "string"
                                            }
                                        },
                                        "title": "stage-update",
                                        "type": "object"
                                    },
                                    "staged_info": {
                                        "properties": {
                                            "unresolved_fields": {
                                                "description": "Updates the unresolved fields of the staged work.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "unresolved_fields"
                                        ],
                                        "title": "works-update-request-staged-info-staged-info-update",
                                        "type": "object"
                                    },
                                    "tags": {
                                        "properties": {
                                            "set": {
                                                "description": "Sets the provided tags on the work item.",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "The ID of the tag.",
                                                            "example": "TAG-12345",
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "description": "The value for the object's association with the tag. If specified,\nthe value must be one that's specified in the tag's allowed values.\n",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id"
                                                    ],
                                                    "title": "set-tag-with-value",
                                                    "type": "object"
                                                },
                                                "type": "array"
                                            }
                                        },
                                        "title": "works-update-request-tags",
                                        "type": "object"
                                    },
                                    "target_close_date": {
                                        "description": "Updates the timestamp for when the work is expected to be complete.\n",
                                        "example": "2023-01-01T12:00:00.000Z",
                                        "format": "date-time",
                                        "nullable": true,
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Updated title of the work object, or unchanged if not provided.\n",
                                        "type": "string"
                                    },
                                    "type": {
                                        "enum": [
                                            "issue",
                                            "ticket"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "id"
                                ],
                                "title": "works-update-request",
                                "type": "object"
                            }
                        }
                    }
                },
                "parameters": []
            }
        }
    }
}