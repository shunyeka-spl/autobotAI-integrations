{
    "WebClient": {
        "BASE_URL": "str(object='') -> strstr(bytes_or_buffer[, encoding[, errors]]) -> strCreate a new string object from the given object. If encoding orerrors is specified, then the object must expose a data bufferthat will be decoded using the given encoding and error handler.Otherwise, returns the result of object.__str__() (if defined)or repr(object).encoding defaults to sys.getdefaultencoding().errors defaults to 'strict'.",
        "admin_analytics_getFile": "Retrieve analytics data for a given date, presented as a compressed JSON file        https://api.slack.com/methods/admin.analytics.getFile",
        "admin_apps_activities_list": "Get logs for a specified team/org        https://api.slack.com/methods/admin.apps.activities.list",
        "admin_apps_approve": "Approve an app for installation on a workspace.        Either app_id or request_id is required.        These IDs can be obtained either directly via the app_requested event,        or by the admin.apps.requests.list method.        https://api.slack.com/methods/admin.apps.approve",
        "admin_apps_approved_list": "List approved apps for an org or workspace.        https://api.slack.com/methods/admin.apps.approved.list",
        "admin_apps_clearResolution": "Clear an app resolution        https://api.slack.com/methods/admin.apps.clearResolution",
        "admin_apps_config_lookup": "Look up the app config for connectors by their IDs        https://api.slack.com/methods/admin.apps.config.lookup",
        "admin_apps_config_set": "Set the app config for a connector        https://api.slack.com/methods/admin.apps.config.set",
        "admin_apps_requests_cancel": "List app requests for a team/workspace.        https://api.slack.com/methods/admin.apps.requests.cancel",
        "admin_apps_requests_list": "List app requests for a team/workspace.        https://api.slack.com/methods/admin.apps.requests.list",
        "admin_apps_restrict": "Restrict an app for installation on a workspace.        Exactly one of the team_id or enterprise_id arguments is required, not both.        Either app_id or request_id is required. These IDs can be obtained either directly        via the app_requested event, or by the admin.apps.requests.list method.        https://api.slack.com/methods/admin.apps.restrict",
        "admin_apps_restricted_list": "List restricted apps for an org or workspace.        https://api.slack.com/methods/admin.apps.restricted.list",
        "admin_apps_uninstall": "Uninstall an app from one or many workspaces, or an entire enterprise organization.        With an org-level token, enterprise_id or team_ids is required.        https://api.slack.com/methods/admin.apps.uninstall",
        "admin_auth_policy_assignEntities": "Assign entities to a particular authentication policy.        https://api.slack.com/methods/admin.auth.policy.assignEntities",
        "admin_auth_policy_getEntities": "Fetch all the entities assigned to a particular authentication policy by name.        https://api.slack.com/methods/admin.auth.policy.getEntities",
        "admin_auth_policy_removeEntities": "Remove specified entities from a specified authentication policy.        https://api.slack.com/methods/admin.auth.policy.removeEntities",
        "admin_barriers_create": "Create an Information Barrier        https://api.slack.com/methods/admin.barriers.create",
        "admin_barriers_delete": "Delete an existing Information Barrier        https://api.slack.com/methods/admin.barriers.delete",
        "admin_barriers_list": "Get all Information Barriers for your organization        https://api.slack.com/methods/admin.barriers.list",
        "admin_barriers_update": "Update an existing Information Barrier        https://api.slack.com/methods/admin.barriers.update",
        "admin_conversations_archive": "Archive a public or private channel.        https://api.slack.com/methods/admin.conversations.archive",
        "admin_conversations_bulkArchive": "Archive public or private channels in bulk.        https://api.slack.com/methods/admin.conversations.bulkArchive",
        "admin_conversations_bulkDelete": "Delete public or private channels in bulk.        https://slack.com/api/admin.conversations.bulkDelete",
        "admin_conversations_bulkMove": "Move public or private channels in bulk.        https://api.slack.com/methods/admin.conversations.bulkMove",
        "admin_conversations_convertToPrivate": "Convert a public channel to a private channel.        https://api.slack.com/methods/admin.conversations.convertToPrivate",
        "admin_conversations_convertToPublic": "Convert a privte channel to a public channel.        https://api.slack.com/methods/admin.conversations.convertToPublic",
        "admin_conversations_create": "Create a public or private channel-based conversation.        https://api.slack.com/methods/admin.conversations.create",
        "admin_conversations_delete": "Delete a public or private channel.        https://api.slack.com/methods/admin.conversations.delete",
        "admin_conversations_disconnectShared": "Disconnect a connected channel from one or more workspaces.        https://api.slack.com/methods/admin.conversations.disconnectShared",
        "admin_conversations_ekm_listOriginalConnectedChannelInfo": "List all disconnected channels\u2014i.e.,        channels that were once connected to other workspaces and then disconnected\u2014and        the corresponding original channel IDs for key revocation with EKM.        https://api.slack.com/methods/admin.conversations.ekm.listOriginalConnectedChannelInfo",
        "admin_conversations_getConversationPrefs": "Get conversation preferences for a public or private channel.        https://api.slack.com/methods/admin.conversations.getConversationPrefs",
        "admin_conversations_getCustomRetention": "Get a channel's retention policy        https://api.slack.com/methods/admin.conversations.getCustomRetention",
        "admin_conversations_getTeams": "Set the workspaces in an Enterprise grid org that connect to a channel.        https://api.slack.com/methods/admin.conversations.getTeams",
        "admin_conversations_invite": "Invite a user to a public or private channel.        https://api.slack.com/methods/admin.conversations.invite",
        "admin_conversations_lookup": "Returns channels on the given team using the filters.        https://api.slack.com/methods/admin.conversations.lookup",
        "admin_conversations_removeCustomRetention": "Remove a channel's retention policy        https://api.slack.com/methods/admin.conversations.removeCustomRetention",
        "admin_conversations_rename": "Rename a public or private channel.        https://api.slack.com/methods/admin.conversations.rename",
        "admin_conversations_restrictAccess_addGroup": "Add an allowlist of IDP groups for accessing a channel.        https://api.slack.com/methods/admin.conversations.restrictAccess.addGroup",
        "admin_conversations_restrictAccess_listGroups": "List all IDP Groups linked to a channel.        https://api.slack.com/methods/admin.conversations.restrictAccess.listGroups",
        "admin_conversations_restrictAccess_removeGroup": "Remove a linked IDP group linked from a private channel.        https://api.slack.com/methods/admin.conversations.restrictAccess.removeGroup",
        "admin_conversations_search": "Search for public or private channels in an Enterprise organization.        https://api.slack.com/methods/admin.conversations.search",
        "admin_conversations_setConversationPrefs": "Set the posting permissions for a public or private channel.        https://api.slack.com/methods/admin.conversations.setConversationPrefs",
        "admin_conversations_setCustomRetention": "Set a channel's retention policy        https://api.slack.com/methods/admin.conversations.setCustomRetention",
        "admin_conversations_setTeams": "Set the workspaces in an Enterprise grid org that connect to a public or private channel.        https://api.slack.com/methods/admin.conversations.setTeams",
        "admin_conversations_unarchive": "Unarchive a public or private channel.        https://api.slack.com/methods/admin.conversations.archive",
        "admin_emoji_add": "Add an emoji.        https://api.slack.com/methods/admin.emoji.add",
        "admin_emoji_addAlias": "Add an emoji alias.        https://api.slack.com/methods/admin.emoji.addAlias",
        "admin_emoji_list": "List emoji for an Enterprise Grid organization.        https://api.slack.com/methods/admin.emoji.list",
        "admin_emoji_remove": "Remove an emoji across an Enterprise Grid organization.        https://api.slack.com/methods/admin.emoji.remove",
        "admin_emoji_rename": "Rename an emoji.        https://api.slack.com/methods/admin.emoji.rename",
        "admin_functions_list": "Look up functions by a set of apps        https://api.slack.com/methods/admin.functions.list",
        "admin_functions_permissions_lookup": "Lookup the visibility of multiple Slack functions        and include the users if it is limited to particular named entities.        https://api.slack.com/methods/admin.functions.permissions.lookup",
        "admin_functions_permissions_set": "Set the visibility of a Slack function        and define the users or workspaces if it is set to named_entities        https://api.slack.com/methods/admin.functions.permissions.set",
        "admin_inviteRequests_approve": "Approve a workspace invite request.        https://api.slack.com/methods/admin.inviteRequests.approve",
        "admin_inviteRequests_approved_list": "List all approved workspace invite requests.        https://api.slack.com/methods/admin.inviteRequests.approved.list",
        "admin_inviteRequests_denied_list": "List all denied workspace invite requests.        https://api.slack.com/methods/admin.inviteRequests.denied.list",
        "admin_inviteRequests_deny": "Deny a workspace invite request.        https://api.slack.com/methods/admin.inviteRequests.deny",
        "admin_inviteRequests_list": "List all pending workspace invite requests.",
        "admin_roles_addAssignments": "Adds members to the specified role with the specified scopes        https://api.slack.com/methods/admin.roles.addAssignments",
        "admin_roles_listAssignments": "Lists assignments for all roles across entities.            Options to scope results by any combination of roles or entities        https://api.slack.com/methods/admin.roles.listAssignments",
        "admin_roles_removeAssignments": "Removes a set of users from a role for the given scopes and entities        https://api.slack.com/methods/admin.roles.removeAssignments",
        "admin_teams_admins_list": "List all of the admins on a given workspace.        https://api.slack.com/methods/admin.inviteRequests.list",
        "admin_teams_create": "Create an Enterprise team.        https://api.slack.com/methods/admin.teams.create",
        "admin_teams_list": "List all teams on an Enterprise organization.        https://api.slack.com/methods/admin.teams.list",
        "admin_teams_owners_list": "List all of the admins on a given workspace.        https://api.slack.com/methods/admin.teams.owners.list",
        "admin_teams_settings_info": "Fetch information about settings in a workspace        https://api.slack.com/methods/admin.teams.settings.info",
        "admin_teams_settings_setDefaultChannels": "Set the default channels of a workspace.        https://api.slack.com/methods/admin.teams.settings.setDefaultChannels",
        "admin_teams_settings_setDescription": "Set the description of a given workspace.        https://api.slack.com/methods/admin.teams.settings.setDescription",
        "admin_teams_settings_setDiscoverability": "Sets the icon of a workspace.        https://api.slack.com/methods/admin.teams.settings.setDiscoverability",
        "admin_teams_settings_setIcon": "Sets the icon of a workspace.        https://api.slack.com/methods/admin.teams.settings.setIcon",
        "admin_teams_settings_setName": "Sets the icon of a workspace.        https://api.slack.com/methods/admin.teams.settings.setName",
        "admin_usergroups_addChannels": "Add one or more default channels to an IDP group.        https://api.slack.com/methods/admin.usergroups.addChannels",
        "admin_usergroups_addTeams": "Associate one or more default workspaces with an organization-wide IDP group.        https://api.slack.com/methods/admin.usergroups.addTeams",
        "admin_usergroups_listChannels": "Add one or more default channels to an IDP group.        https://api.slack.com/methods/admin.usergroups.listChannels",
        "admin_usergroups_removeChannels": "Add one or more default channels to an IDP group.        https://api.slack.com/methods/admin.usergroups.removeChannels",
        "admin_users_assign": "Add an Enterprise user to a workspace.        https://api.slack.com/methods/admin.users.assign",
        "admin_users_invite": "Invite a user to a workspace.        https://api.slack.com/methods/admin.users.invite",
        "admin_users_list": "List users on a workspace        https://api.slack.com/methods/admin.users.list",
        "admin_users_remove": "Remove a user from a workspace.        https://api.slack.com/methods/admin.users.remove",
        "admin_users_session_clearSettings": "Clear user-specific session settings\u2014the session duration        and what happens when the client closes\u2014for a list of users.        https://api.slack.com/methods/admin.users.session.clearSettings",
        "admin_users_session_getSettings": "Get user-specific session settings\u2014the session duration        and what happens when the client closes\u2014given a list of users.        https://api.slack.com/methods/admin.users.session.getSettings",
        "admin_users_session_invalidate": "Invalidate a single session for a user by session_id.        https://api.slack.com/methods/admin.users.session.invalidate",
        "admin_users_session_list": "Lists all active user sessions for an organization        https://api.slack.com/methods/admin.users.session.list",
        "admin_users_session_reset": "Wipes all valid sessions on all devices for a given user.        https://api.slack.com/methods/admin.users.session.reset",
        "admin_users_session_resetBulk": "Enqueues an asynchronous job to wipe all valid sessions on all devices for a given list of users        https://api.slack.com/methods/admin.users.session.resetBulk",
        "admin_users_session_setSettings": "Configure the user-level session settings\u2014the session duration        and what happens when the client closes\u2014for one or more users.        https://api.slack.com/methods/admin.users.session.setSettings",
        "admin_users_setAdmin": "Set an existing guest, regular user, or owner to be an admin user.        https://api.slack.com/methods/admin.users.setAdmin",
        "admin_users_setExpiration": "Set an expiration for a guest user.        https://api.slack.com/methods/admin.users.setExpiration",
        "admin_users_setOwner": "Set an existing guest, regular user, or admin user to be a workspace owner.        https://api.slack.com/methods/admin.users.setOwner",
        "admin_users_setRegular": "Set an existing guest user, admin user, or owner to be a regular user.        https://api.slack.com/methods/admin.users.setRegular",
        "admin_users_unsupportedVersions_export": "Ask Slackbot to send you an export listing all workspace members using unsupported software,        presented as a zipped CSV file.        https://api.slack.com/methods/admin.users.unsupportedVersions.export",
        "admin_workflows_collaborators_add": "Add collaborators to workflows within the team or enterprise        https://api.slack.com/methods/admin.workflows.collaborators.add",
        "admin_workflows_collaborators_remove": "Remove collaborators from workflows within the team or enterprise        https://api.slack.com/methods/admin.workflows.collaborators.remove",
        "admin_workflows_permissions_lookup": "Look up the permissions for a set of workflows        https://api.slack.com/methods/admin.workflows.permissions.lookup",
        "admin_workflows_search": "Search workflows within the team or enterprise        https://api.slack.com/methods/admin.workflows.search",
        "admin_workflows_unpublish": "Unpublish workflows within the team or enterprise        https://api.slack.com/methods/admin.workflows.unpublish",
        "api_call": "Create a request and execute the API call to Slack.        Args:            api_method (str): The target Slack API method.                e.g. 'chat.postMessage'            http_verb (str): HTTP Verb. e.g. 'POST'            files (dict): Files to multipart upload.                e.g. {image OR file: file_object OR file_path}            data: The body to attach to the request. If a dictionary is                provided, form-encoding will take place.                e.g. {'key1': 'value1', 'key2': 'value2'}            params (dict): The URL parameters to append to the URL.                e.g. {'key1': 'value1', 'key2': 'value2'}            json (dict): JSON for the body to attach to the request                (if files or data is not specified).                e.g. {'key1': 'value1', 'key2': 'value2'}            headers (dict): Additional request headers            auth (dict): A dictionary that consists of client_id and client_secret        Returns:            (SlackResponse)                The server's response to an HTTP request. Data                from the response can be accessed like a dict.                If the response included 'next_cursor' it can                be iterated on to execute subsequent requests.        Raises:            SlackApiError: The following Slack API call failed:                'chat.postMessage'.            SlackRequestError: Json data can only be submitted as                POST requests.",
        "api_test": "Checks API calling code.        https://api.slack.com/methods/api.test",
        "apps_connections_open": "Generate a temporary Socket Mode WebSocket URL that your app can connect to        in order to receive events and interactive payloads        https://api.slack.com/methods/apps.connections.open",
        "apps_event_authorizations_list": "Get a list of authorizations for the given event context.        Each authorization represents an app installation that the event is visible to.        https://api.slack.com/methods/apps.event.authorizations.list",
        "apps_manifest_create": "Create an app from an app manifest        https://api.slack.com/methods/apps.manifest.create",
        "apps_manifest_delete": "Permanently deletes an app created through app manifests        https://api.slack.com/methods/apps.manifest.delete",
        "apps_manifest_export": "Export an app manifest from an existing app        https://api.slack.com/methods/apps.manifest.export",
        "apps_manifest_update": "Update an app from an app manifest        https://api.slack.com/methods/apps.manifest.update",
        "apps_manifest_validate": "Validate an app manifest        https://api.slack.com/methods/apps.manifest.validate",
        "apps_uninstall": "Uninstalls your app from a workspace.        https://api.slack.com/methods/apps.uninstall",
        "assistant_threads_setStatus": "Revokes a token.        https://api.slack.com/methods/assistant.threads.setStatus",
        "assistant_threads_setSuggestedPrompts": "Revokes a token.        https://api.slack.com/methods/assistant.threads.setSuggestedPrompts",
        "assistant_threads_setTitle": "Revokes a token.        https://api.slack.com/methods/assistant.threads.setTitle",
        "auth_revoke": "Revokes a token.        https://api.slack.com/methods/auth.revoke",
        "auth_teams_list": "List the workspaces a token can access.        https://api.slack.com/methods/auth.teams.list",
        "auth_test": "Checks authentication & identity.        https://api.slack.com/methods/auth.test",
        "bookmarks_add": "Add bookmark to a channel.        https://api.slack.com/methods/bookmarks.add",
        "bookmarks_edit": "Edit bookmark.        https://api.slack.com/methods/bookmarks.edit",
        "bookmarks_list": "List bookmark for the channel.        https://api.slack.com/methods/bookmarks.list",
        "bookmarks_remove": "Remove bookmark from the channel.        https://api.slack.com/methods/bookmarks.remove",
        "bots_info": "Gets information about a bot user.        https://api.slack.com/methods/bots.info",
        "calls_add": "Registers a new Call.        https://api.slack.com/methods/calls.add",
        "calls_end": "Ends a Call.        https://api.slack.com/methods/calls.end",
        "calls_info": "Returns information about a Call.        https://api.slack.com/methods/calls.info",
        "calls_participants_add": "Registers new participants added to a Call.        https://api.slack.com/methods/calls.participants.add",
        "calls_participants_remove": "Registers participants removed from a Call.        https://api.slack.com/methods/calls.participants.remove",
        "calls_update": "Updates information about a Call.        https://api.slack.com/methods/calls.update",
        "canvases_access_delete": "Create a Channel Canvas for a channel        https://api.slack.com/methods/canvases.access.delete",
        "canvases_access_set": "Sets the access level to a canvas for specified entities        https://api.slack.com/methods/canvases.access.set",
        "canvases_create": "Create Canvas for a user        https://api.slack.com/methods/canvases.create",
        "canvases_delete": "Deletes a canvas        https://api.slack.com/methods/canvases.delete",
        "canvases_edit": "Update an existing canvas        https://api.slack.com/methods/canvases.edit",
        "canvases_sections_lookup": "Find sections matching the provided criteria        https://api.slack.com/methods/canvases.sections.lookup",
        "channels_archive": "Archives a channel.",
        "channels_create": "Creates a channel.",
        "channels_history": "Fetches history of messages and events from a channel.",
        "channels_info": "Gets information about a channel.",
        "channels_invite": "Invites a user to a channel.",
        "channels_join": "Joins a channel, creating it if needed.",
        "channels_kick": "Removes a user from a channel.",
        "channels_leave": "Leaves a channel.",
        "channels_list": "Lists all channels in a Slack team.",
        "channels_mark": "Sets the read cursor in a channel.",
        "channels_rename": "Renames a channel.",
        "channels_replies": "Retrieve a thread of messages posted to a channel",
        "channels_setPurpose": "Sets the purpose for a channel.",
        "channels_setTopic": "Sets the topic for a channel.",
        "channels_unarchive": "Unarchives a channel.",
        "chat_delete": "Deletes a message.        https://api.slack.com/methods/chat.delete",
        "chat_deleteScheduledMessage": "Deletes a scheduled message.        https://api.slack.com/methods/chat.deleteScheduledMessage",
        "chat_getPermalink": "Retrieve a permalink URL for a specific extant message        https://api.slack.com/methods/chat.getPermalink",
        "chat_meMessage": "Share a me message into a channel.        https://api.slack.com/methods/chat.meMessage",
        "chat_postEphemeral": "Sends an ephemeral message to a user in a channel.        https://api.slack.com/methods/chat.postEphemeral",
        "chat_postMessage": "Sends a message to a channel.        https://api.slack.com/methods/chat.postMessage",
        "chat_scheduleMessage": "Schedules a message.        https://api.slack.com/methods/chat.scheduleMessage",
        "chat_scheduledMessages_list": "Lists all scheduled messages.        https://api.slack.com/methods/chat.scheduledMessages.list",
        "chat_unfurl": "Provide custom unfurl behavior for user-posted URLs.        https://api.slack.com/methods/chat.unfurl",
        "chat_update": "Updates a message in a channel.        https://api.slack.com/methods/chat.update",
        "conversations_acceptSharedInvite": "Accepts an invitation to a Slack Connect channel.        https://api.slack.com/methods/conversations.acceptSharedInvite",
        "conversations_approveSharedInvite": "Approves an invitation to a Slack Connect channel.        https://api.slack.com/methods/conversations.approveSharedInvite",
        "conversations_archive": "Archives a conversation.        https://api.slack.com/methods/conversations.archive",
        "conversations_canvases_create": "Create a Channel Canvas for a channel        https://api.slack.com/methods/conversations.canvases.create",
        "conversations_close": "Closes a direct message or multi-person direct message.        https://api.slack.com/methods/conversations.close",
        "conversations_create": "Initiates a public or private channel-based conversation        https://api.slack.com/methods/conversations.create",
        "conversations_declineSharedInvite": "Declines a Slack Connect channel invite.        https://api.slack.com/methods/conversations.declineSharedInvite",
        "conversations_externalInvitePermissions_set": "Sets a team in a shared External Limited channel to a shared Slack Connect channel or vice versa.        https://api.slack.com/methods/conversations.externalInvitePermissions.set",
        "conversations_history": "Fetches a conversation's history of messages and events.        https://api.slack.com/methods/conversations.history",
        "conversations_info": "Retrieve information about a conversation.        https://api.slack.com/methods/conversations.info",
        "conversations_invite": "Invites users to a channel.        https://api.slack.com/methods/conversations.invite",
        "conversations_inviteShared": "Sends an invitation to a Slack Connect channel.        https://api.slack.com/methods/conversations.inviteShared",
        "conversations_join": "Joins an existing conversation.        https://api.slack.com/methods/conversations.join",
        "conversations_kick": "Removes a user from a conversation.        https://api.slack.com/methods/conversations.kick",
        "conversations_leave": "Leaves a conversation.        https://api.slack.com/methods/conversations.leave",
        "conversations_list": "Lists all channels in a Slack team.        https://api.slack.com/methods/conversations.list",
        "conversations_listConnectInvites": "List shared channel invites that have been generated        or received but have not yet been approved by all parties.        https://api.slack.com/methods/conversations.listConnectInvites",
        "conversations_mark": "Sets the read cursor in a channel.        https://api.slack.com/methods/conversations.mark",
        "conversations_members": "Retrieve members of a conversation.        https://api.slack.com/methods/conversations.members",
        "conversations_open": "Opens or resumes a direct message or multi-person direct message.        https://api.slack.com/methods/conversations.open",
        "conversations_rename": "Renames a conversation.        https://api.slack.com/methods/conversations.rename",
        "conversations_replies": "Retrieve a thread of messages posted to a conversation        https://api.slack.com/methods/conversations.replies",
        "conversations_requestSharedInvite_approve": "Approve a request to add an external user to a channel. This also sends them a Slack Connect invite.        https://api.slack.com/methods/conversations.requestSharedInvite.approve",
        "conversations_requestSharedInvite_deny": "Deny a request to invite an external user to a channel.        https://api.slack.com/methods/conversations.requestSharedInvite.deny",
        "conversations_requestSharedInvite_list": "Lists requests to add external users to channels with ability to filter.        https://api.slack.com/methods/conversations.requestSharedInvite.list",
        "conversations_setPurpose": "Sets the purpose for a conversation.        https://api.slack.com/methods/conversations.setPurpose",
        "conversations_setTopic": "Sets the topic for a conversation.        https://api.slack.com/methods/conversations.setTopic",
        "conversations_unarchive": "Reverses conversation archival.        https://api.slack.com/methods/conversations.unarchive",
        "dialog_open": "Open a dialog with a user.        https://api.slack.com/methods/dialog.open",
        "dnd_endDnd": "Ends the current user's Do Not Disturb session immediately.        https://api.slack.com/methods/dnd.endDnd",
        "dnd_endSnooze": "Ends the current user's snooze mode immediately.        https://api.slack.com/methods/dnd.endSnooze",
        "dnd_info": "Retrieves a user's current Do Not Disturb status.        https://api.slack.com/methods/dnd.info",
        "dnd_setSnooze": "Turns on Do Not Disturb mode for the current user, or changes its duration.        https://api.slack.com/methods/dnd.setSnooze",
        "dnd_teamInfo": "Retrieves the Do Not Disturb status for users on a team.        https://api.slack.com/methods/dnd.teamInfo",
        "emoji_list": "Lists custom emoji for a team.        https://api.slack.com/methods/emoji.list",
        "files_comments_delete": "Deletes an existing comment on a file.        https://api.slack.com/methods/files.comments.delete",
        "files_completeUploadExternal": "Finishes an upload started with files.getUploadURLExternal.        https://api.slack.com/methods/files.completeUploadExternal",
        "files_delete": "Deletes a file.        https://api.slack.com/methods/files.delete",
        "files_getUploadURLExternal": "Gets a URL for an edge external upload.        https://api.slack.com/methods/files.getUploadURLExternal",
        "files_info": "Gets information about a team file.        https://api.slack.com/methods/files.info",
        "files_list": "Lists & filters team files.        https://api.slack.com/methods/files.list",
        "files_remote_add": "Adds a file from a remote service.        https://api.slack.com/methods/files.remote.add",
        "files_remote_info": "Retrieve information about a remote file added to Slack.        https://api.slack.com/methods/files.remote.info",
        "files_remote_list": "Retrieve information about a remote file added to Slack.        https://api.slack.com/methods/files.remote.list",
        "files_remote_remove": "Remove a remote file.        https://api.slack.com/methods/files.remote.remove",
        "files_remote_share": "Share a remote file into a channel.        https://api.slack.com/methods/files.remote.share",
        "files_remote_update": "Updates an existing remote file.        https://api.slack.com/methods/files.remote.update",
        "files_revokePublicURL": "Revokes public/external sharing access for a file        https://api.slack.com/methods/files.revokePublicURL",
        "files_sharedPublicURL": "Enables a file for public/external sharing.        https://api.slack.com/methods/files.sharedPublicURL",
        "files_upload": "Uploads or creates a file.        https://api.slack.com/methods/files.upload",
        "files_upload_v2": "This wrapper method provides an easy way to upload files using the following endpoints:        - step1: https://api.slack.com/methods/files.getUploadURLExternal        - step2: \"https://files.slack.com/upload/v1/...\" URLs returned from files.getUploadURLExternal API        - step3: https://api.slack.com/methods/files.completeUploadExternal            and https://api.slack.com/methods/files.info",
        "functions_completeError": "Signal the failure to execute a function        https://api.slack.com/methods/functions.completeError",
        "functions_completeSuccess": "Signal the successful completion of a function        https://api.slack.com/methods/functions.completeSuccess",
        "groups_archive": "Archives a private channel.",
        "groups_create": "Creates a private channel.",
        "groups_createChild": "Clones and archives a private channel.",
        "groups_history": "Fetches history of messages and events from a private channel.",
        "groups_info": "Gets information about a private channel.",
        "groups_invite": "Invites a user to a private channel.",
        "groups_kick": "Removes a user from a private channel.",
        "groups_leave": "Leaves a private channel.",
        "groups_list": "Lists private channels that the calling user has access to.",
        "groups_mark": "Sets the read cursor in a private channel.",
        "groups_open": "Opens a private channel.",
        "groups_rename": "Renames a private channel.",
        "groups_replies": "Retrieve a thread of messages posted to a private channel",
        "groups_setPurpose": "Sets the purpose for a private channel.",
        "groups_setTopic": "Sets the topic for a private channel.",
        "groups_unarchive": "Unarchives a private channel.",
        "im_close": "Close a direct message channel.",
        "im_history": "Fetches history of messages and events from direct message channel.",
        "im_list": "Lists direct message channels for the calling user.",
        "im_mark": "Sets the read cursor in a direct message channel.",
        "im_open": "Opens a direct message channel.",
        "im_replies": "Retrieve a thread of messages posted to a direct message conversation",
        "migration_exchange": "For Enterprise Grid workspaces, map local user IDs to global user IDs        https://api.slack.com/methods/migration.exchange",
        "mpim_close": "Closes a multiparty direct message channel.",
        "mpim_history": "Fetches history of messages and events from a multiparty direct message.",
        "mpim_list": "Lists multiparty direct message channels for the calling user.",
        "mpim_mark": "Sets the read cursor in a multiparty direct message channel.",
        "mpim_open": "This method opens a multiparty direct message.",
        "mpim_replies": "Retrieve a thread of messages posted to a direct message conversation from a        multiparty direct message.",
        "oauth_access": "Exchanges a temporary OAuth verifier code for an access token.        https://api.slack.com/methods/oauth.access",
        "oauth_v2_access": "Exchanges a temporary OAuth verifier code for an access token.        https://api.slack.com/methods/oauth.v2.access",
        "oauth_v2_exchange": "Exchanges a legacy access token for a new expiring access token and refresh token        https://api.slack.com/methods/oauth.v2.exchange",
        "openid_connect_token": "Exchanges a temporary OAuth verifier code for an access token for Sign in with Slack.        https://api.slack.com/methods/openid.connect.token",
        "openid_connect_userInfo": "Get the identity of a user who has authorized Sign in with Slack.        https://api.slack.com/methods/openid.connect.userInfo",
        "pins_add": "Pins an item to a channel.        https://api.slack.com/methods/pins.add",
        "pins_list": "Lists items pinned to a channel.        https://api.slack.com/methods/pins.list",
        "pins_remove": "Un-pins an item from a channel.        https://api.slack.com/methods/pins.remove",
        "reactions_add": "Adds a reaction to an item.        https://api.slack.com/methods/reactions.add",
        "reactions_get": "Gets reactions for an item.        https://api.slack.com/methods/reactions.get",
        "reactions_list": "Lists reactions made by a user.        https://api.slack.com/methods/reactions.list",
        "reactions_remove": "Removes a reaction from an item.        https://api.slack.com/methods/reactions.remove",
        "reminders_add": "Creates a reminder.        https://api.slack.com/methods/reminders.add",
        "reminders_complete": "Marks a reminder as complete.        https://api.slack.com/methods/reminders.complete",
        "reminders_delete": "Deletes a reminder.        https://api.slack.com/methods/reminders.delete",
        "reminders_info": "Gets information about a reminder.        https://api.slack.com/methods/reminders.info",
        "reminders_list": "Lists all reminders created by or for a given user.        https://api.slack.com/methods/reminders.list",
        "rtm_connect": "Starts a Real Time Messaging session.        https://api.slack.com/methods/rtm.connect",
        "rtm_start": "Starts a Real Time Messaging session.        https://api.slack.com/methods/rtm.start",
        "search_all": "Searches for messages and files matching a query.        https://api.slack.com/methods/search.all",
        "search_files": "Searches for files matching a query.        https://api.slack.com/methods/search.files",
        "search_messages": "Searches for messages matching a query.        https://api.slack.com/methods/search.messages",
        "stars_add": "Adds a star to an item.        https://api.slack.com/methods/stars.add",
        "stars_list": "Lists stars for a user.        https://api.slack.com/methods/stars.list",
        "stars_remove": "Removes a star from an item.        https://api.slack.com/methods/stars.remove",
        "team_accessLogs": "Gets the access logs for the current team.        https://api.slack.com/methods/team.accessLogs",
        "team_billableInfo": "Gets billable users information for the current team.        https://api.slack.com/methods/team.billableInfo",
        "team_billing_info": "Reads a workspace's billing plan information.        https://api.slack.com/methods/team.billing.info",
        "team_externalTeams_disconnect": "Disconnects an external organization.        https://api.slack.com/methods/team.externalTeams.disconnect",
        "team_externalTeams_list": "Returns a list of all the external teams connected and details about the connection.        https://api.slack.com/methods/team.externalTeams.list",
        "team_info": "Gets information about the current team.        https://api.slack.com/methods/team.info",
        "team_integrationLogs": "Gets the integration logs for the current team.        https://api.slack.com/methods/team.integrationLogs",
        "team_preferences_list": "Retrieve a list of a workspace's team preferences.        https://api.slack.com/methods/team.preferences.list",
        "team_profile_get": "Retrieve a team's profile.        https://api.slack.com/methods/team.profile.get",
        "tooling_tokens_rotate": "Exchanges a refresh token for a new app configuration token        https://api.slack.com/methods/tooling.tokens.rotate",
        "usergroups_create": "Create a User Group        https://api.slack.com/methods/usergroups.create",
        "usergroups_disable": "Disable an existing User Group        https://api.slack.com/methods/usergroups.disable",
        "usergroups_enable": "Enable a User Group        https://api.slack.com/methods/usergroups.enable",
        "usergroups_list": "List all User Groups for a team        https://api.slack.com/methods/usergroups.list",
        "usergroups_update": "Update an existing User Group        https://api.slack.com/methods/usergroups.update",
        "usergroups_users_list": "List all users in a User Group        https://api.slack.com/methods/usergroups.users.list",
        "usergroups_users_update": "Update the list of users for a User Group        https://api.slack.com/methods/usergroups.users.update",
        "users_conversations": "List conversations the calling user may access.        https://api.slack.com/methods/users.conversations",
        "users_deletePhoto": "Delete the user profile photo        https://api.slack.com/methods/users.deletePhoto",
        "users_discoverableContacts_lookup": "Lookup an email address to see if someone is on Slack        https://api.slack.com/methods/users.discoverableContacts.lookup",
        "users_getPresence": "Gets user presence information.        https://api.slack.com/methods/users.getPresence",
        "users_identity": "Get a user's identity.        https://api.slack.com/methods/users.identity",
        "users_info": "Gets information about a user.        https://api.slack.com/methods/users.info",
        "users_list": "Lists all users in a Slack team.        https://api.slack.com/methods/users.list",
        "users_lookupByEmail": "Find a user with an email address.        https://api.slack.com/methods/users.lookupByEmail",
        "users_profile_get": "Retrieves a user's profile information.        https://api.slack.com/methods/users.profile.get",
        "users_profile_set": "Set the profile information for a user.        https://api.slack.com/methods/users.profile.set",
        "users_setPhoto": "Set the user profile photo        https://api.slack.com/methods/users.setPhoto",
        "users_setPresence": "Manually sets user presence.        https://api.slack.com/methods/users.setPresence",
        "validate_slack_signature": "Slack creates a unique string for your app and shares it with you. Verify        requests from Slack with confidence by verifying signatures using your        signing secret.        On each HTTP request that Slack sends, we add an X-Slack-Signature HTTP        header. The signature is created by combining the signing secret with the        body of the request we're sending using a standard HMAC-SHA256 keyed hash.        https://api.slack.com/docs/verifying-requests-from-slack#how_to_make_a_request_signature_in_4_easy_steps__an_overview        Args:            signing_secret: Your application's signing secret, available in the                Slack API dashboard            data: The raw body of the incoming request - no headers, just the body.            timestamp: from the 'X-Slack-Request-Timestamp' header            signature: from the 'X-Slack-Signature' header - the calculated signature                should match this.        Returns:            True if signatures matches",
        "views_open": "Open a view for a user.        https://api.slack.com/methods/views.open        See https://api.slack.com/surfaces/modals for details.",
        "views_publish": "Publish a static view for a User.        Create or update the view that comprises an        app's Home tab (https://api.slack.com/surfaces/tabs)        https://api.slack.com/methods/views.publish",
        "views_push": "Push a view onto the stack of a root view.        Push a new view onto the existing view stack by passing a view        payload and a valid trigger_id generated from an interaction        within the existing modal.        Read the modals documentation (https://api.slack.com/surfaces/modals)        to learn more about the lifecycle and intricacies of views.        https://api.slack.com/methods/views.push",
        "views_update": "Update an existing view.        Update a view by passing a new view definition along with the        view_id returned in views.open or the external_id.        See the modals documentation (https://api.slack.com/surfaces/modals#updating_views)        to learn more about updating views and avoiding race conditions with the hash argument.        https://api.slack.com/methods/views.update",
        "workflows_stepCompleted": "Indicate a successful outcome of a workflow step's execution.        https://api.slack.com/methods/workflows.stepCompleted",
        "workflows_stepFailed": "Indicate an unsuccessful outcome of a workflow step's execution.        https://api.slack.com/methods/workflows.stepFailed",
        "workflows_updateStep": "Update the configuration for a workflow extension step.        https://api.slack.com/methods/workflows.updateStep"
    },
    "WebhookClient": {
        "send": "Performs a Slack API request and returns the result.        Args:            text: The text message                (even when having blocks, setting this as well is recommended as it works as fallback)            attachments: A collection of attachments            blocks: A collection of Block Kit UI components            response_type: The type of message (either 'in_channel' or 'ephemeral')            replace_original: True if you use this option for response_url requests            delete_original: True if you use this option for response_url requests            unfurl_links: Option to indicate whether text url should unfurl            unfurl_media: Option to indicate whether media url should unfurl            metadata: Metadata attached to the message            headers: Request headers to append only for this request        Returns:            Webhook response",
        "send_dict": "Performs a Slack API request and returns the result.        Args:            body: JSON data structure (it's still a dict at this point),                if you give this argument, body_params and files will be skipped            headers: Request headers to append only for this request        Returns:            Webhook response"
    }
}