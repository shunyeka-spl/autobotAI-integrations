{
    "openapi": "3.0.0",
    "paths": {
        "/monitors": {
            "get": {
                "operationId": "MonitorsController_list",
                "summary": "List monitors",
                "description": "List all monitors in a user's account. Values can be paginated with the cursor parameter.",
                "parameters": [
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor to paginate through monitors",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitorPaginationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "MonitorsController_create",
                "summary": "Create a monitor",
                "description": "New monitors of any type can be created using this endpoint.",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMonitorDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/monitors/{id}": {
            "get": {
                "operationId": "MonitorsController_get",
                "summary": "Get a monitor by ID",
                "description": "Get a monitor details by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "MonitorsController_update",
                "summary": "Update a monitor",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMonitorDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitorDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "MonitorsController_delete",
                "summary": "Delete a monitor",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/monitors/{id}/reset": {
            "post": {
                "operationId": "MonitorsController_reset",
                "summary": "Reset stats for a monitor",
                "description": "Resets stats for a monitor. This includes the stats for incidents and alerts.",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Monitors"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/psps": {
            "get": {
                "operationId": "PspController_list",
                "summary": "List PSPs",
                "description": "List Public Status Pages",
                "parameters": [
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor to paginate through PSPs",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PspPaginationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Public Status Pages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "PspController_create",
                "summary": "Create a PSP",
                "description": "Create a Public Status Page",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePsPDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PspDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Public Status Pages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/psps/{id}": {
            "get": {
                "operationId": "PspController_get",
                "summary": "Get a PSP by ID",
                "description": "Get a Public Status Page by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PspDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Public Status Pages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "PspController_update",
                "summary": "Update a PSP",
                "description": "Update a Public Status Page",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePspDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PspDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Public Status Pages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "PspController_delete",
                "summary": "Delete a PSP",
                "description": "Delete a Public Status Page",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Public Status Pages"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/maintenance-windows": {
            "get": {
                "operationId": "MaintenanceWindowsController_list",
                "summary": "List maintenance windows",
                "description": "List maintenance windows",
                "parameters": [
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaintenanceWindowPaginationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance Windows"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "MaintenanceWindowsController_create",
                "summary": "Create a maintenance window",
                "description": "Create a maintenance window",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMaintenanceWindowDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaintenanceWindowDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance Windows"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/maintenance-windows/{id}": {
            "get": {
                "operationId": "MaintenanceWindowsController_get",
                "summary": "Get a maintenance window by ID",
                "description": "Get a maintenance window by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID of the maintenance window",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaintenanceWindowDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance Windows"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "MaintenanceWindowsController_update",
                "summary": "Update a maintenance window",
                "description": "Update a maintenance window",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID of the maintenance window",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMaintenanceWindowDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MaintenanceWindowDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Maintenance Windows"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "MaintenanceWindowsController_delete",
                "summary": "Delete a maintenance window",
                "description": "Delete a maintenance window",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Maintenance Windows"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/me": {
            "get": {
                "operationId": "UserController_getMe",
                "summary": "Get current user",
                "description": "Get current user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/user/alert-contacts": {
            "get": {
                "operationId": "UserController_getAlertContacts",
                "summary": "Get alert contacts",
                "description": "Get alert contacts",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlertContactDto"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/integrations": {
            "get": {
                "operationId": "IntegrationsController_list",
                "summary": "List Integrations",
                "description": "List Integrations",
                "parameters": [
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor to paginate through the integrations",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationPaginationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "operationId": "IntegrationsController_create",
                "summary": "Create a Integration",
                "description": "Create a Integration",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/CreateSlackIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateTelegramIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateMsTeamsIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateWebhookIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateZapierIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreatePagerdutyIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateGoogleChatIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateDiscordIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateSplunkIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreatePushbulletIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreatePushoverIntegrationDto"
                                    },
                                    {
                                        "$ref": "#/components/schemas/CreateMattermostIntegrationDto"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/integrations/{id}": {
            "get": {
                "operationId": "IntegrationsController_get",
                "summary": "Get an integration by ID",
                "description": "Get an integration details by ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID of the integration",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "patch": {
                "operationId": "IntegrationsController_update",
                "summary": "Update a Integration",
                "description": "Update a Integration",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "ID of the integration",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/UpdateSlackIntegrationSchema",
                                        "title": "Slack"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateTelegramIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateMsTeamsIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateWebhookIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateZapierIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdatePagerdutyIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateGoogleChatIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateDiscordIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateSplunkIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdatePushbulletIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdatePushoverIntegrationSchema"
                                    },
                                    {
                                        "$ref": "#/components/schemas/UpdateMattermostIntegrationSchema"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IntegrationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "operationId": "IntegrationsController_delete",
                "summary": "Delete a Integration",
                "description": "Delete a Integration",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Integrations"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/tags": {
            "get": {
                "operationId": "TagsController_getTags",
                "summary": "List user tags",
                "description": "Get a paginated list of tags for the authenticated user, sorted by ID in ascending order",
                "parameters": [
                    {
                        "name": "cursor",
                        "required": false,
                        "in": "query",
                        "description": "Cursor for pagination",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User tags retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleTagPaginationDto"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/tags/{id}": {
            "delete": {
                "operationId": "TagsController_deleteTag",
                "summary": "Delete a tag",
                "description": "Delete a tag and remove it from all monitors",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "Tag ID to delete",
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tag deleted successfully"
                    }
                },
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "info": {
        "title": "UptimeRobot API",
        "description": "",
        "version": "3.0",
        "contact": {}
    },
    "tags": [
        {
            "name": "Monitors",
            "description": ""
        },
        {
            "name": "Public Status Pages",
            "description": ""
        },
        {
            "name": "Maintenance Windows",
            "description": ""
        },
        {
            "name": "User",
            "description": ""
        },
        {
            "name": "Integrations",
            "description": ""
        }
    ],
    "servers": [
        {
            "url": "https://api.uptimerobot.com/v3"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "type": "http"
            }
        },
        "schemas": {
            "MonitorPaginationDto": {
                "type": "object",
                "properties": {
                    "nextLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {},
                                "interval": {
                                    "type": "number",
                                    "minimum": 30,
                                    "exclusiveMinimum": false,
                                    "maximum": 2678400,
                                    "exclusiveMaximum": false
                                },
                                "sslBrand": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "sslExpiryDateTime": {
                                    "oneOf": [
                                        {},
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "nullable": true
                                },
                                "domainExpireDate": {
                                    "oneOf": [
                                        {},
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "nullable": true
                                },
                                "checkSSLErrors": {
                                    "type": "boolean"
                                },
                                "sslExpirationReminder": {
                                    "type": "boolean",
                                    "nullable": true
                                },
                                "domainExpirationReminder": {
                                    "type": "boolean",
                                    "nullable": true
                                },
                                "followRedirections": {
                                    "type": "boolean"
                                },
                                "authType": {
                                    "nullable": true
                                },
                                "httpUsername": {
                                    "type": "string"
                                },
                                "httpPassword": {
                                    "type": "string"
                                },
                                "customHttpHeaders": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "nullable": true
                                },
                                "httpMethodType": {
                                    "nullable": true
                                },
                                "successHttpResponseCodes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "timeout": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "maximum": 60,
                                    "exclusiveMaximum": false,
                                    "nullable": true
                                },
                                "postValueData": {
                                    "oneOf": [
                                        {
                                            "oneOf": [
                                                {
                                                    "oneOf": [
                                                        {
                                                            "type": "string"
                                                        },
                                                        {
                                                            "type": "number"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": {}
                                                }
                                            ]
                                        },
                                        {
                                            "type": "array",
                                            "items": {}
                                        }
                                    ],
                                    "nullable": true
                                },
                                "postValueType": {
                                    "type": "string",
                                    "enum": [
                                        "KEY_VALUE",
                                        "RAW_JSON"
                                    ],
                                    "x-enumNames": [
                                        "KEY_VALUE",
                                        "RAW_JSON"
                                    ],
                                    "nullable": true
                                },
                                "port": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "maximum": 65535,
                                    "exclusiveMaximum": false,
                                    "nullable": true
                                },
                                "gracePeriod": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "maximum": 86400,
                                    "exclusiveMaximum": false,
                                    "nullable": true
                                },
                                "keywordValue": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 500,
                                    "nullable": true
                                },
                                "keywordCaseType": {
                                    "oneOf": [
                                        {
                                            "type": "number",
                                            "minimum": 0,
                                            "maximum": 0
                                        },
                                        {
                                            "type": "number",
                                            "minimum": 1,
                                            "maximum": 1
                                        }
                                    ],
                                    "nullable": true
                                },
                                "keywordType": {
                                    "nullable": true
                                },
                                "responseTimeThreshold": {
                                    "type": "number"
                                },
                                "config": {
                                    "type": "object",
                                    "properties": {
                                        "dnsRecords": {
                                            "type": "object",
                                            "properties": {
                                                "CNAME": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "MX": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "NS": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "A": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "AAAA": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "TXT": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "SRV": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "PTR": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "SOA": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "SPF": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "DNSKEY": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "DS": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "NSEC": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "NSEC3": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "sslExpirationPeriodDays": {
                                            "type": "array",
                                            "maxItems": 10,
                                            "items": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "exclusiveMinimum": false,
                                                "maximum": 365,
                                                "exclusiveMaximum": false
                                            }
                                        }
                                    },
                                    "nullable": true
                                },
                                "maintenanceWindows": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "userId": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 3
                                            },
                                            "interval": {
                                                "type": "string",
                                                "enum": [
                                                    "once",
                                                    "daily",
                                                    "weekly",
                                                    "monthly"
                                                ],
                                                "x-enumNames": [
                                                    "once",
                                                    "daily",
                                                    "weekly",
                                                    "monthly"
                                                ]
                                            },
                                            "date": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "time": {
                                                "type": "string",
                                                "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$"
                                            },
                                            "duration": {
                                                "type": "number",
                                                "minimum": 1,
                                                "exclusiveMinimum": false
                                            },
                                            "autoAddMonitors": {
                                                "type": "boolean"
                                            },
                                            "days": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                }
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "active",
                                                    "paused"
                                                ],
                                                "x-enumNames": [
                                                    "active",
                                                    "paused"
                                                ]
                                            },
                                            "created": {
                                                "oneOf": [
                                                    {},
                                                    {
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "userId",
                                            "name",
                                            "interval",
                                            "date",
                                            "time",
                                            "duration",
                                            "autoAddMonitors",
                                            "days",
                                            "status",
                                            "created"
                                        ]
                                    }
                                },
                                "psps": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "friendlyName": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "customDomain": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "isPasswordSet": {
                                                "type": "boolean"
                                            },
                                            "monitorIds": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                },
                                                "nullable": true
                                            },
                                            "monitorsCount": {
                                                "type": "number",
                                                "nullable": true
                                            },
                                            "status": {},
                                            "urlKey": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "homepageLink": {
                                                "type": "string",
                                                "minLength": 3,
                                                "nullable": true
                                            },
                                            "gaCode": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "shareAnalyticsConsent": {
                                                "type": "boolean"
                                            },
                                            "useSmallCookieConsentModal": {
                                                "type": "boolean"
                                            },
                                            "icon": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "noIndex": {
                                                "type": "boolean"
                                            },
                                            "logo": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hideUrlLinks": {
                                                "type": "boolean"
                                            },
                                            "subscription": {
                                                "type": "boolean"
                                            },
                                            "showCookieBar": {
                                                "type": "boolean"
                                            },
                                            "pinnedAnnouncementId": {
                                                "type": "integer",
                                                "minimum": 0,
                                                "exclusiveMinimum": false,
                                                "nullable": true
                                            },
                                            "customSettings": {
                                                "type": "object",
                                                "properties": {
                                                    "font": {
                                                        "type": "object",
                                                        "properties": {
                                                            "family": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "required": [
                                                            "family"
                                                        ],
                                                        "nullable": true
                                                    },
                                                    "page": {
                                                        "type": "object",
                                                        "properties": {
                                                            "layout": {
                                                                "type": "string"
                                                            },
                                                            "theme": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "light",
                                                                    "dark"
                                                                ]
                                                            },
                                                            "density": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "normal",
                                                                    "compact"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "colors": {
                                                        "type": "object",
                                                        "properties": {
                                                            "main": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "text": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "link": {
                                                                "type": "string",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "required": [
                                                            "main",
                                                            "text",
                                                            "link"
                                                        ]
                                                    },
                                                    "features": {
                                                        "type": "object",
                                                        "properties": {
                                                            "showBars": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "showUptimePercentage": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "enableFloatingStatus": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "showOverallUptime": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "showOutageUpdates": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "showOutageDetails": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "enableDetailsPage": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "showMonitorURL": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            },
                                                            "hidePausedMonitors": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "true",
                                                                    "false"
                                                                ],
                                                                "nullable": true
                                                            }
                                                        },
                                                        "required": [
                                                            "showUptimePercentage"
                                                        ]
                                                    }
                                                },
                                                "nullable": true
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "friendlyName",
                                            "customDomain",
                                            "isPasswordSet",
                                            "monitorIds",
                                            "monitorsCount",
                                            "status",
                                            "urlKey",
                                            "homepageLink",
                                            "gaCode",
                                            "shareAnalyticsConsent",
                                            "useSmallCookieConsentModal",
                                            "icon",
                                            "noIndex",
                                            "logo",
                                            "hideUrlLinks",
                                            "subscription",
                                            "showCookieBar",
                                            "pinnedAnnouncementId",
                                            "customSettings"
                                        ]
                                    }
                                },
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "friendlyName": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "status": {},
                                "url": {
                                    "type": "string"
                                },
                                "regionalData": {
                                    "type": "object",
                                    "properties": {
                                        "REGION": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "enum": [
                                                    "na",
                                                    "eu",
                                                    "as",
                                                    "oc"
                                                ],
                                                "x-enumNames": [
                                                    "NorthAmerica",
                                                    "Europe",
                                                    "Asia",
                                                    "Oceania"
                                                ]
                                            }
                                        },
                                        "MANUAL_SELECTED": {
                                            "type": "boolean"
                                        },
                                        "INFRASTRUCTURE": {
                                            "type": "string",
                                            "enum": [
                                                "Legacy",
                                                "New"
                                            ],
                                            "x-enumNames": [
                                                "Legacy",
                                                "New"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "REGION"
                                    ]
                                },
                                "currentStateDuration": {
                                    "type": "number"
                                },
                                "lastIncidentId": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "userId": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "name": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "color": {
                                                "type": "string",
                                                "minLength": 1
                                            },
                                            "monitors": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "minimum": 0,
                                                            "exclusiveMinimum": false
                                                        },
                                                        "friendlyName": {
                                                            "type": "string",
                                                            "minLength": 1,
                                                            "nullable": true
                                                        },
                                                        "status": {},
                                                        "url": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "friendlyName",
                                                        "status",
                                                        "url"
                                                    ]
                                                }
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "name",
                                            "color"
                                        ]
                                    }
                                },
                                "assignedAlertContacts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "alertContactId": {
                                                "type": "string"
                                            },
                                            "threshold": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "recurrence": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            }
                                        },
                                        "required": [
                                            "alertContactId",
                                            "threshold",
                                            "recurrence"
                                        ]
                                    }
                                },
                                "lastIncident": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": false
                                        },
                                        "status": {},
                                        "cause": {
                                            "type": "number"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "startedAt": {
                                            "oneOf": [
                                                {},
                                                {
                                                    "type": "string"
                                                }
                                            ]
                                        },
                                        "duration": {
                                            "type": "number",
                                            "nullable": true
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "status",
                                        "cause",
                                        "reason",
                                        "startedAt",
                                        "duration"
                                    ],
                                    "nullable": true
                                },
                                "lastDayUptimes": {
                                    "type": "object",
                                    "properties": {
                                        "bucketSize": {
                                            "type": "number"
                                        },
                                        "histogram": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "timestamp": {
                                                        "type": "number"
                                                    },
                                                    "uptime": {
                                                        "type": "number",
                                                        "minimum": 0,
                                                        "exclusiveMinimum": false
                                                    }
                                                },
                                                "required": [
                                                    "timestamp",
                                                    "uptime"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "bucketSize",
                                        "histogram"
                                    ]
                                },
                                "createDateTime": {
                                    "oneOf": [
                                        {},
                                        {
                                            "type": "string"
                                        }
                                    ]
                                },
                                "apiKey": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "groupId": {
                                    "type": "number",
                                    "nullable": true
                                }
                            },
                            "required": [
                                "type",
                                "interval",
                                "sslBrand",
                                "sslExpiryDateTime",
                                "domainExpireDate",
                                "checkSSLErrors",
                                "sslExpirationReminder",
                                "domainExpirationReminder",
                                "followRedirections",
                                "authType",
                                "customHttpHeaders",
                                "httpMethodType",
                                "successHttpResponseCodes",
                                "timeout",
                                "postValueData",
                                "postValueType",
                                "port",
                                "gracePeriod",
                                "keywordValue",
                                "keywordCaseType",
                                "keywordType",
                                "responseTimeThreshold",
                                "config",
                                "maintenanceWindows",
                                "psps",
                                "id",
                                "friendlyName",
                                "status",
                                "url",
                                "regionalData",
                                "currentStateDuration",
                                "lastIncidentId",
                                "userId",
                                "tags",
                                "assignedAlertContacts",
                                "lastDayUptimes",
                                "createDateTime",
                                "apiKey"
                            ]
                        }
                    }
                },
                "required": [
                    "nextLink",
                    "data"
                ]
            },
            "MonitorDto": {
                "type": "object",
                "properties": {
                    "type": {},
                    "interval": {
                        "type": "number",
                        "minimum": 30,
                        "exclusiveMinimum": false,
                        "maximum": 2678400,
                        "exclusiveMaximum": false
                    },
                    "sslBrand": {
                        "type": "string",
                        "nullable": true
                    },
                    "sslExpiryDateTime": {
                        "oneOf": [
                            {},
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true
                    },
                    "domainExpireDate": {
                        "oneOf": [
                            {},
                            {
                                "type": "string"
                            }
                        ],
                        "nullable": true
                    },
                    "checkSSLErrors": {
                        "type": "boolean"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "domainExpirationReminder": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "followRedirections": {
                        "type": "boolean"
                    },
                    "authType": {
                        "nullable": true
                    },
                    "httpUsername": {
                        "type": "string"
                    },
                    "httpPassword": {
                        "type": "string"
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "httpMethodType": {
                        "nullable": true
                    },
                    "successHttpResponseCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timeout": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "maximum": 60,
                        "exclusiveMaximum": false,
                        "nullable": true
                    },
                    "postValueData": {
                        "oneOf": [
                            {
                                "oneOf": [
                                    {
                                        "oneOf": [
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "number"
                                            }
                                        ]
                                    },
                                    {
                                        "type": "object",
                                        "additionalProperties": {}
                                    }
                                ]
                            },
                            {
                                "type": "array",
                                "items": {}
                            }
                        ],
                        "nullable": true
                    },
                    "postValueType": {
                        "type": "string",
                        "enum": [
                            "KEY_VALUE",
                            "RAW_JSON"
                        ],
                        "x-enumNames": [
                            "KEY_VALUE",
                            "RAW_JSON"
                        ],
                        "nullable": true
                    },
                    "port": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "maximum": 65535,
                        "exclusiveMaximum": false,
                        "nullable": true
                    },
                    "gracePeriod": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "maximum": 86400,
                        "exclusiveMaximum": false,
                        "nullable": true
                    },
                    "keywordValue": {
                        "type": "string",
                        "minLength": 0,
                        "maxLength": 500,
                        "nullable": true
                    },
                    "keywordCaseType": {
                        "oneOf": [
                            {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 0
                            },
                            {
                                "type": "number",
                                "minimum": 1,
                                "maximum": 1
                            }
                        ],
                        "nullable": true
                    },
                    "keywordType": {
                        "nullable": true
                    },
                    "responseTimeThreshold": {
                        "type": "number"
                    },
                    "config": {
                        "type": "object",
                        "properties": {
                            "dnsRecords": {
                                "type": "object",
                                "properties": {
                                    "CNAME": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "MX": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "NS": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "A": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "AAAA": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "TXT": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "SRV": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "PTR": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "SOA": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "SPF": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "DNSKEY": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "DS": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "NSEC": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "NSEC3": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "sslExpirationPeriodDays": {
                                "type": "array",
                                "maxItems": 10,
                                "items": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "maximum": 365,
                                    "exclusiveMaximum": false
                                }
                            }
                        },
                        "nullable": true
                    },
                    "maintenanceWindows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "userId": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 3
                                },
                                "interval": {
                                    "type": "string",
                                    "enum": [
                                        "once",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ],
                                    "x-enumNames": [
                                        "once",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "date": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "time": {
                                    "type": "string",
                                    "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$"
                                },
                                "duration": {
                                    "type": "number",
                                    "minimum": 1,
                                    "exclusiveMinimum": false
                                },
                                "autoAddMonitors": {
                                    "type": "boolean"
                                },
                                "days": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "active",
                                        "paused"
                                    ],
                                    "x-enumNames": [
                                        "active",
                                        "paused"
                                    ]
                                },
                                "created": {
                                    "oneOf": [
                                        {},
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "userId",
                                "name",
                                "interval",
                                "date",
                                "time",
                                "duration",
                                "autoAddMonitors",
                                "days",
                                "status",
                                "created"
                            ]
                        }
                    },
                    "psps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "friendlyName": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "customDomain": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "isPasswordSet": {
                                    "type": "boolean"
                                },
                                "monitorIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    },
                                    "nullable": true
                                },
                                "monitorsCount": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "status": {},
                                "urlKey": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "homepageLink": {
                                    "type": "string",
                                    "minLength": 3,
                                    "nullable": true
                                },
                                "gaCode": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "shareAnalyticsConsent": {
                                    "type": "boolean"
                                },
                                "useSmallCookieConsentModal": {
                                    "type": "boolean"
                                },
                                "icon": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "noIndex": {
                                    "type": "boolean"
                                },
                                "logo": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "hideUrlLinks": {
                                    "type": "boolean"
                                },
                                "subscription": {
                                    "type": "boolean"
                                },
                                "showCookieBar": {
                                    "type": "boolean"
                                },
                                "pinnedAnnouncementId": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "nullable": true
                                },
                                "customSettings": {
                                    "type": "object",
                                    "properties": {
                                        "font": {
                                            "type": "object",
                                            "properties": {
                                                "family": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "family"
                                            ],
                                            "nullable": true
                                        },
                                        "page": {
                                            "type": "object",
                                            "properties": {
                                                "layout": {
                                                    "type": "string"
                                                },
                                                "theme": {
                                                    "type": "string",
                                                    "enum": [
                                                        "light",
                                                        "dark"
                                                    ]
                                                },
                                                "density": {
                                                    "type": "string",
                                                    "enum": [
                                                        "normal",
                                                        "compact"
                                                    ]
                                                }
                                            }
                                        },
                                        "colors": {
                                            "type": "object",
                                            "properties": {
                                                "main": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "main",
                                                "text",
                                                "link"
                                            ]
                                        },
                                        "features": {
                                            "type": "object",
                                            "properties": {
                                                "showBars": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showUptimePercentage": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "enableFloatingStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOverallUptime": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOutageUpdates": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOutageDetails": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "enableDetailsPage": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showMonitorURL": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "hidePausedMonitors": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "showUptimePercentage"
                                            ]
                                        }
                                    },
                                    "nullable": true
                                }
                            },
                            "required": [
                                "id",
                                "friendlyName",
                                "customDomain",
                                "isPasswordSet",
                                "monitorIds",
                                "monitorsCount",
                                "status",
                                "urlKey",
                                "homepageLink",
                                "gaCode",
                                "shareAnalyticsConsent",
                                "useSmallCookieConsentModal",
                                "icon",
                                "noIndex",
                                "logo",
                                "hideUrlLinks",
                                "subscription",
                                "showCookieBar",
                                "pinnedAnnouncementId",
                                "customSettings"
                            ]
                        }
                    },
                    "id": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "friendlyName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "status": {},
                    "url": {
                        "type": "string"
                    },
                    "regionalData": {
                        "type": "object",
                        "properties": {
                            "REGION": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "na",
                                        "eu",
                                        "as",
                                        "oc"
                                    ],
                                    "x-enumNames": [
                                        "NorthAmerica",
                                        "Europe",
                                        "Asia",
                                        "Oceania"
                                    ]
                                }
                            },
                            "MANUAL_SELECTED": {
                                "type": "boolean"
                            },
                            "INFRASTRUCTURE": {
                                "type": "string",
                                "enum": [
                                    "Legacy",
                                    "New"
                                ],
                                "x-enumNames": [
                                    "Legacy",
                                    "New"
                                ]
                            }
                        },
                        "required": [
                            "REGION"
                        ]
                    },
                    "currentStateDuration": {
                        "type": "number"
                    },
                    "lastIncidentId": {
                        "type": "number",
                        "nullable": true
                    },
                    "userId": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "color": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "monitors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "minimum": 0,
                                                "exclusiveMinimum": false
                                            },
                                            "friendlyName": {
                                                "type": "string",
                                                "minLength": 1,
                                                "nullable": true
                                            },
                                            "status": {},
                                            "url": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "friendlyName",
                                            "status",
                                            "url"
                                        ]
                                    }
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "color"
                            ]
                        }
                    },
                    "assignedAlertContacts": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "alertContactId": {
                                    "type": "string"
                                },
                                "threshold": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "recurrence": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                }
                            },
                            "required": [
                                "alertContactId",
                                "threshold",
                                "recurrence"
                            ]
                        }
                    },
                    "lastIncident": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "number",
                                "minimum": 0,
                                "exclusiveMinimum": false
                            },
                            "status": {},
                            "cause": {
                                "type": "number"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "startedAt": {
                                "oneOf": [
                                    {},
                                    {
                                        "type": "string"
                                    }
                                ]
                            },
                            "duration": {
                                "type": "number",
                                "nullable": true
                            }
                        },
                        "required": [
                            "id",
                            "status",
                            "cause",
                            "reason",
                            "startedAt",
                            "duration"
                        ],
                        "nullable": true
                    },
                    "lastDayUptimes": {
                        "type": "object",
                        "properties": {
                            "bucketSize": {
                                "type": "number"
                            },
                            "histogram": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "timestamp": {
                                            "type": "number"
                                        },
                                        "uptime": {
                                            "type": "number",
                                            "minimum": 0,
                                            "exclusiveMinimum": false
                                        }
                                    },
                                    "required": [
                                        "timestamp",
                                        "uptime"
                                    ]
                                }
                            }
                        },
                        "required": [
                            "bucketSize",
                            "histogram"
                        ]
                    },
                    "createDateTime": {
                        "oneOf": [
                            {},
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "apiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "groupId": {
                        "type": "number",
                        "nullable": true
                    }
                },
                "required": [
                    "type",
                    "interval",
                    "sslBrand",
                    "sslExpiryDateTime",
                    "domainExpireDate",
                    "checkSSLErrors",
                    "sslExpirationReminder",
                    "domainExpirationReminder",
                    "followRedirections",
                    "authType",
                    "customHttpHeaders",
                    "httpMethodType",
                    "successHttpResponseCodes",
                    "timeout",
                    "postValueData",
                    "postValueType",
                    "port",
                    "gracePeriod",
                    "keywordValue",
                    "keywordCaseType",
                    "keywordType",
                    "responseTimeThreshold",
                    "config",
                    "maintenanceWindows",
                    "psps",
                    "id",
                    "friendlyName",
                    "status",
                    "url",
                    "regionalData",
                    "currentStateDuration",
                    "lastIncidentId",
                    "userId",
                    "tags",
                    "assignedAlertContacts",
                    "lastDayUptimes",
                    "createDateTime",
                    "apiKey"
                ]
            },
            "AlertContactSettings": {
                "type": "object",
                "properties": {
                    "alertContactId": {
                        "type": "number",
                        "description": "ID of the alert contact to notify",
                        "example": 12345
                    },
                    "threshold": {
                        "type": "number",
                        "description": "Delay of notification in minutes, after the monitor is down",
                        "example": 5
                    },
                    "recurrence": {
                        "type": "number",
                        "description": "Repeat notifications every X minutes",
                        "example": 30
                    }
                },
                "required": [
                    "alertContactId",
                    "threshold",
                    "recurrence"
                ]
            },
            "CreateMonitorDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 250,
                        "example": "My monitor",
                        "description": "Friendly name of the monitor"
                    },
                    "url": {
                        "type": "string",
                        "maxLength": 10000,
                        "example": "http://test.com",
                        "description": "URL of the monitor. For DNS monitors: DNS server IP or hostname. Not required for Heartbeat monitor"
                    },
                    "type": {
                        "enum": [
                            "HTTP",
                            "KEYWORD",
                            "PING",
                            "PORT",
                            "HEARTBEAT",
                            "DNS"
                        ],
                        "type": "string",
                        "example": "HTTP"
                    },
                    "port": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "description": "Required for Port monitor"
                    },
                    "keywordType": {
                        "enum": [
                            "ALERT_EXISTS",
                            "ALERT_NOT_EXISTS"
                        ],
                        "type": "string",
                        "example": "ALERT_EXISTS",
                        "description": "Required for Keyword monitor"
                    },
                    "keywordCaseType": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "number",
                        "description": "Required for Keyword monitor"
                    },
                    "keywordValue": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 500,
                        "description": "Required for Keyword monitor"
                    },
                    "interval": {
                        "type": "number",
                        "minimum": 30,
                        "example": 60,
                        "description": "Interval of check in seconds"
                    },
                    "timeout": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 60,
                        "example": 30,
                        "description": "Timeout of check in seconds. Only for Http, Keyword and Port monitors"
                    },
                    "gracePeriod": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 86400,
                        "example": 300,
                        "description": "Grace period of check in seconds. Only for Heartbeat monitor"
                    },
                    "httpUsername": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "admin",
                        "description": "Username for HTTP Basic authentication"
                    },
                    "httpPassword": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "password",
                        "description": "Password for HTTP Basic authentication"
                    },
                    "httpMethodType": {
                        "nullable": true,
                        "enum": [
                            "HEAD",
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "OPTIONS"
                        ],
                        "type": "string",
                        "example": "HEAD",
                        "description": "Required for HTTP and Keyword monitors. Specifies which HTTP method to use for the request"
                    },
                    "authType": {
                        "enum": [
                            "NONE",
                            "HTTP_BASIC",
                            "DIGEST"
                        ],
                        "type": "string",
                        "example": "NONE",
                        "description": "Authentication method to use for the request. Only applicable for HTTP and Keyword monitors"
                    },
                    "postValueData": {
                        "type": "object",
                        "description": "Data to be sent in the request. Not applicable for HTTP method type = HEAD. Can be JSON string or string"
                    },
                    "postValueType": {
                        "enum": [
                            "KEY_VALUE",
                            "RAW_JSON"
                        ],
                        "type": "string",
                        "description": "Type of data payload to be sent in the request. Affects what data is accepted by \"postValueData\" field"
                    },
                    "assignedAlertContacts": {
                        "description": "Alert contacts to be assigned to the monitor. Threshold and recurrence are only available in the paid plans, they are always 0 in the Free Plan",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertContactSettings"
                        }
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "description": "Custom HTTP headers to be sent in the request. Must be sent as JSON object with key-value pairs"
                    },
                    "successHttpResponseCodes": {
                        "example": [
                            "2xx",
                            "3xx"
                        ],
                        "default": [],
                        "description": "Success HTTP response codes. Can contain specific codes or ranges like 2xx. Default is [2xx, 3xx]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "checkSSLErrors": {
                        "type": "boolean",
                        "description": "Whether to check for SSL and domain expiration errors"
                    },
                    "tagNames": {
                        "example": [
                            "tag1",
                            "tag2"
                        ],
                        "description": "Tags to be assigned to the monitor",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maintenanceWindowsIds": {
                        "example": [
                            123,
                            234
                        ],
                        "description": "Maintenance windows to be assigned to the monitor",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "domainExpirationReminder": {
                        "type": "boolean",
                        "description": "Whether to send a notification when the domain is about to expire"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Whether to send a notification when the SSL certificate is about to expire"
                    },
                    "followRedirections": {
                        "type": "boolean",
                        "description": "Whether to follow redirections"
                    },
                    "responseTimeThreshold": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 60000,
                        "description": "Response time threshold in milliseconds. Response time over this threshold will trigger an incident"
                    },
                    "regionalData": {
                        "type": "string",
                        "description": "Region for monitoring: NA (North America), EU (Europe), AS (Asia), OC (Oceania)",
                        "enum": [
                            "na",
                            "eu",
                            "as",
                            "oc"
                        ],
                        "example": "NA"
                    },
                    "config": {
                        "type": "object",
                        "description": "DNS monitor configuration data",
                        "example": {
                            "dnsRecords": {
                                "CNAME": [
                                    "example.com"
                                ],
                                "MX": [
                                    "1 aspmx.l.google.com.",
                                    "5 alt1.aspmx.l.google.com."
                                ],
                                "NS": [
                                    "ns-cloud-a1.googledomains.com.",
                                    "ns-cloud-a2.googledomains.com."
                                ],
                                "A": [
                                    "192.168.1.1"
                                ],
                                "PTR": [
                                    "example.com"
                                ]
                            }
                        }
                    }
                },
                "required": [
                    "friendlyName",
                    "type",
                    "keywordType",
                    "interval"
                ]
            },
            "UpdateMonitorDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 250,
                        "example": "My monitor",
                        "description": "Friendly name of the monitor"
                    },
                    "url": {
                        "type": "string",
                        "maxLength": 10000,
                        "example": "http://test.com",
                        "description": "URL of the monitor. For DNS monitors: DNS server IP or hostname. Not required for Heartbeat monitor"
                    },
                    "type": {
                        "enum": [
                            "HTTP",
                            "KEYWORD",
                            "PING",
                            "PORT",
                            "HEARTBEAT",
                            "DNS"
                        ],
                        "type": "string",
                        "example": "HTTP"
                    },
                    "port": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 65535,
                        "description": "Required for Port monitor"
                    },
                    "keywordType": {
                        "enum": [
                            "ALERT_EXISTS",
                            "ALERT_NOT_EXISTS"
                        ],
                        "type": "string",
                        "example": "ALERT_EXISTS",
                        "description": "Required for Keyword monitor"
                    },
                    "keywordCaseType": {
                        "enum": [
                            0,
                            1
                        ],
                        "type": "number",
                        "description": "Required for Keyword monitor"
                    },
                    "keywordValue": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 500,
                        "description": "Required for Keyword monitor"
                    },
                    "interval": {
                        "type": "number",
                        "minimum": 30,
                        "example": 60,
                        "description": "Interval of check in seconds"
                    },
                    "timeout": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 60,
                        "example": 30,
                        "description": "Timeout of check in seconds. Only for Http, Keyword and Port monitors"
                    },
                    "gracePeriod": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 86400,
                        "example": 300,
                        "description": "Grace period of check in seconds. Only for Heartbeat monitor"
                    },
                    "httpUsername": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "admin",
                        "description": "Username for HTTP Basic authentication"
                    },
                    "httpPassword": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "password",
                        "description": "Password for HTTP Basic authentication"
                    },
                    "httpMethodType": {
                        "nullable": true,
                        "enum": [
                            "HEAD",
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "OPTIONS"
                        ],
                        "type": "string",
                        "example": "HEAD",
                        "description": "Required for HTTP and Keyword monitors. Specifies which HTTP method to use for the request"
                    },
                    "authType": {
                        "enum": [
                            "NONE",
                            "HTTP_BASIC",
                            "DIGEST"
                        ],
                        "type": "string",
                        "example": "NONE",
                        "description": "Authentication method to use for the request. Only applicable for HTTP and Keyword monitors"
                    },
                    "postValueData": {
                        "type": "object",
                        "description": "Data to be sent in the request. Not applicable for HTTP method type = HEAD. Can be JSON string or string"
                    },
                    "postValueType": {
                        "enum": [
                            "KEY_VALUE",
                            "RAW_JSON"
                        ],
                        "type": "string",
                        "description": "Type of data payload to be sent in the request. Affects what data is accepted by \"postValueData\" field"
                    },
                    "assignedAlertContacts": {
                        "description": "Alert contacts to be assigned to the monitor. Threshold and recurrence are only available in the paid plans, they are always 0 in the Free Plan",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AlertContactSettings"
                        }
                    },
                    "customHttpHeaders": {
                        "type": "object",
                        "description": "Custom HTTP headers to be sent in the request. Must be sent as JSON object with key-value pairs"
                    },
                    "successHttpResponseCodes": {
                        "example": [
                            "2xx",
                            "3xx"
                        ],
                        "default": [],
                        "description": "Success HTTP response codes. Can contain specific codes or ranges like 2xx. Default is [2xx, 3xx]",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "checkSSLErrors": {
                        "type": "boolean",
                        "description": "Whether to check for SSL and domain expiration errors"
                    },
                    "tagNames": {
                        "example": [
                            "tag1",
                            "tag2"
                        ],
                        "description": "Tags to be assigned to the monitor",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "maintenanceWindowsIds": {
                        "example": [
                            123,
                            234
                        ],
                        "description": "Maintenance windows to be assigned to the monitor",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "domainExpirationReminder": {
                        "type": "boolean",
                        "description": "Whether to send a notification when the domain is about to expire"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Whether to send a notification when the SSL certificate is about to expire"
                    },
                    "followRedirections": {
                        "type": "boolean",
                        "description": "Whether to follow redirections"
                    },
                    "responseTimeThreshold": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 60000,
                        "description": "Response time threshold in milliseconds. Response time over this threshold will trigger an incident"
                    },
                    "regionalData": {
                        "type": "string",
                        "description": "Region for monitoring: NA (North America), EU (Europe), AS (Asia), OC (Oceania)",
                        "enum": [
                            "na",
                            "eu",
                            "as",
                            "oc"
                        ],
                        "example": "NA"
                    },
                    "config": {
                        "type": "object",
                        "description": "DNS monitor configuration data",
                        "example": {
                            "dnsRecords": {
                                "CNAME": [
                                    "example.com"
                                ],
                                "MX": [
                                    "1 aspmx.l.google.com.",
                                    "5 alt1.aspmx.l.google.com."
                                ],
                                "NS": [
                                    "ns-cloud-a1.googledomains.com.",
                                    "ns-cloud-a2.googledomains.com."
                                ],
                                "A": [
                                    "192.168.1.1"
                                ],
                                "PTR": [
                                    "example.com"
                                ]
                            }
                        }
                    }
                }
            },
            "PspPaginationDto": {
                "type": "object",
                "properties": {
                    "nextLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "friendlyName": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "customDomain": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "isPasswordSet": {
                                    "type": "boolean"
                                },
                                "monitorIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    },
                                    "nullable": true
                                },
                                "monitorsCount": {
                                    "type": "number",
                                    "nullable": true
                                },
                                "status": {},
                                "urlKey": {
                                    "type": "string",
                                    "minLength": 1
                                },
                                "homepageLink": {
                                    "type": "string",
                                    "minLength": 3,
                                    "nullable": true
                                },
                                "gaCode": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "shareAnalyticsConsent": {
                                    "type": "boolean"
                                },
                                "useSmallCookieConsentModal": {
                                    "type": "boolean"
                                },
                                "icon": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "noIndex": {
                                    "type": "boolean"
                                },
                                "logo": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "hideUrlLinks": {
                                    "type": "boolean"
                                },
                                "subscription": {
                                    "type": "boolean"
                                },
                                "showCookieBar": {
                                    "type": "boolean"
                                },
                                "pinnedAnnouncementId": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "exclusiveMinimum": false,
                                    "nullable": true
                                },
                                "customSettings": {
                                    "type": "object",
                                    "properties": {
                                        "font": {
                                            "type": "object",
                                            "properties": {
                                                "family": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "family"
                                            ],
                                            "nullable": true
                                        },
                                        "page": {
                                            "type": "object",
                                            "properties": {
                                                "layout": {
                                                    "type": "string"
                                                },
                                                "theme": {
                                                    "type": "string",
                                                    "enum": [
                                                        "light",
                                                        "dark"
                                                    ]
                                                },
                                                "density": {
                                                    "type": "string",
                                                    "enum": [
                                                        "normal",
                                                        "compact"
                                                    ]
                                                }
                                            }
                                        },
                                        "colors": {
                                            "type": "object",
                                            "properties": {
                                                "main": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "text": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "link": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "main",
                                                "text",
                                                "link"
                                            ]
                                        },
                                        "features": {
                                            "type": "object",
                                            "properties": {
                                                "showBars": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showUptimePercentage": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "enableFloatingStatus": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOverallUptime": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOutageUpdates": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showOutageDetails": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "enableDetailsPage": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "showMonitorURL": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                },
                                                "hidePausedMonitors": {
                                                    "type": "string",
                                                    "enum": [
                                                        "true",
                                                        "false"
                                                    ],
                                                    "nullable": true
                                                }
                                            },
                                            "required": [
                                                "showUptimePercentage"
                                            ]
                                        }
                                    },
                                    "nullable": true
                                }
                            },
                            "required": [
                                "id",
                                "friendlyName",
                                "customDomain",
                                "isPasswordSet",
                                "monitorIds",
                                "monitorsCount",
                                "status",
                                "urlKey",
                                "homepageLink",
                                "gaCode",
                                "shareAnalyticsConsent",
                                "useSmallCookieConsentModal",
                                "icon",
                                "noIndex",
                                "logo",
                                "hideUrlLinks",
                                "subscription",
                                "showCookieBar",
                                "pinnedAnnouncementId",
                                "customSettings"
                            ]
                        }
                    }
                },
                "required": [
                    "nextLink",
                    "data"
                ]
            },
            "PspDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "friendlyName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "customDomain": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPasswordSet": {
                        "type": "boolean"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "nullable": true
                    },
                    "monitorsCount": {
                        "type": "number",
                        "nullable": true
                    },
                    "status": {},
                    "urlKey": {
                        "type": "string",
                        "minLength": 1
                    },
                    "homepageLink": {
                        "type": "string",
                        "minLength": 3,
                        "nullable": true
                    },
                    "gaCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "shareAnalyticsConsent": {
                        "type": "boolean"
                    },
                    "useSmallCookieConsentModal": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "noIndex": {
                        "type": "boolean"
                    },
                    "logo": {
                        "type": "string",
                        "nullable": true
                    },
                    "hideUrlLinks": {
                        "type": "boolean"
                    },
                    "subscription": {
                        "type": "boolean"
                    },
                    "showCookieBar": {
                        "type": "boolean"
                    },
                    "pinnedAnnouncementId": {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "nullable": true
                    },
                    "customSettings": {
                        "type": "object",
                        "properties": {
                            "font": {
                                "type": "object",
                                "properties": {
                                    "family": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "family"
                                ],
                                "nullable": true
                            },
                            "page": {
                                "type": "object",
                                "properties": {
                                    "layout": {
                                        "type": "string"
                                    },
                                    "theme": {
                                        "type": "string",
                                        "enum": [
                                            "light",
                                            "dark"
                                        ]
                                    },
                                    "density": {
                                        "type": "string",
                                        "enum": [
                                            "normal",
                                            "compact"
                                        ]
                                    }
                                }
                            },
                            "colors": {
                                "type": "object",
                                "properties": {
                                    "main": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "text": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "link": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "main",
                                    "text",
                                    "link"
                                ]
                            },
                            "features": {
                                "type": "object",
                                "properties": {
                                    "showBars": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "showUptimePercentage": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "enableFloatingStatus": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "showOverallUptime": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "showOutageUpdates": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "showOutageDetails": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "enableDetailsPage": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "showMonitorURL": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    },
                                    "hidePausedMonitors": {
                                        "type": "string",
                                        "enum": [
                                            "true",
                                            "false"
                                        ],
                                        "nullable": true
                                    }
                                },
                                "required": [
                                    "showUptimePercentage"
                                ]
                            }
                        },
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "friendlyName",
                    "customDomain",
                    "isPasswordSet",
                    "monitorIds",
                    "monitorsCount",
                    "status",
                    "urlKey",
                    "homepageLink",
                    "gaCode",
                    "shareAnalyticsConsent",
                    "useSmallCookieConsentModal",
                    "icon",
                    "noIndex",
                    "logo",
                    "hideUrlLinks",
                    "subscription",
                    "showCookieBar",
                    "pinnedAnnouncementId",
                    "customSettings"
                ]
            },
            "FontCustomSettingsDto": {
                "type": "object",
                "properties": {
                    "family": {
                        "type": "string",
                        "example": "Roboto",
                        "title": "Font family",
                        "description": "The font family to use for the PSP. Google fonts are supported."
                    }
                }
            },
            "PageCustomSettingsDto": {
                "type": "object",
                "properties": {
                    "layout": {
                        "enum": [
                            "LogoOnLeft",
                            "LogoOnCenter"
                        ],
                        "type": "string",
                        "title": "Logo alignment",
                        "description": "The alignment of the logo on the page"
                    },
                    "theme": {
                        "enum": [
                            "Light",
                            "Dark"
                        ],
                        "type": "string",
                        "title": "Theme",
                        "description": "The theme of the page"
                    },
                    "density": {
                        "enum": [
                            "Normal",
                            "Compact"
                        ],
                        "type": "string",
                        "title": "Density",
                        "description": "The density of the page"
                    }
                }
            },
            "ColorsCustomSettingsDto": {
                "type": "object",
                "properties": {
                    "main": {
                        "type": "string",
                        "example": "#131a26",
                        "description": "The main color of the page in hex format"
                    },
                    "text": {
                        "type": "string",
                        "example": "#ffffff",
                        "description": "The text color of the page in hex format"
                    },
                    "link": {
                        "type": "string",
                        "example": "#3bd671",
                        "description": "The link color of the page in hex format"
                    }
                }
            },
            "FeaturesCustomSettingsDto": {
                "type": "object",
                "properties": {
                    "showBars": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show bar charts",
                        "description": "Show or hide the bar charts for uptime of a monitor on a status page home screen"
                    },
                    "showUptimePercentage": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show uptime percentage",
                        "description": "Show or hide the uptime percentage of a monitor near the monitor name on a status page home screen"
                    },
                    "enableFloatingStatus": {
                        "type": "boolean",
                        "example": false,
                        "title": "Enable floating status bar",
                        "description": "Enable or disable the floating bar sticked to the bottom with the overall count of up and down monitors"
                    },
                    "showOverallUptime": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show overall percentage",
                        "description": "Show or hide the overall uptime (last 24 h, last 7 and 30 days) section below monitors list on a status page home screen"
                    },
                    "showOutageUpdates": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show outage details",
                        "description": "Show outage reason details (like status code) to give more explanation for your status page users"
                    },
                    "showOutageDetails": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show outage updates and the latest downtime",
                        "description": "Show or hide downtimes grouped by day for a specific monitor in the Announcement feed. The latest downtime will be visible in header. This won't hide the events on a details page"
                    },
                    "enableDetailsPage": {
                        "type": "boolean",
                        "example": false,
                        "title": "Enable Details Page",
                        "description": "Details page contains uptime, response times and up/down event history"
                    },
                    "showMonitorURL": {
                        "type": "boolean",
                        "example": false,
                        "title": "Show the monitor URL",
                        "description": "Show monitor URL and type to give your users more details on your Status page"
                    },
                    "hidePausedMonitors": {
                        "type": "boolean",
                        "example": false,
                        "title": "Hide paused monitors",
                        "description": "Don't display paused monitors on your Status page"
                    }
                }
            },
            "CustomSettingsDto": {
                "type": "object",
                "properties": {
                    "font": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FontCustomSettingsDto"
                            }
                        ]
                    },
                    "page": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PageCustomSettingsDto"
                            }
                        ]
                    },
                    "colors": {
                        "nullable": true,
                        "description": "The colors of the page",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ColorsCustomSettingsDto"
                            }
                        ]
                    },
                    "features": {
                        "nullable": true,
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FeaturesCustomSettingsDto"
                            }
                        ]
                    }
                }
            },
            "CreatePsPDto": {
                "type": "object",
                "properties": {
                    "monitorIds": {
                        "description": "List of monitor IDs to be assigned to the PSP",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "autoAddMonitors": {
                        "type": "boolean",
                        "description": "If enabled all monitors (old and new) will be added to PSP automatically. In this case \"monitorIds\" property will be ignored"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "My Status Page",
                        "description": "Friendly name of the Public Status Page"
                    },
                    "logo": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "binary"
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "binary"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Password protection for the Public Status Page"
                    },
                    "customDomain": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Provide when you want to use custom domain for the Public Status Page",
                        "example": "status.your-domain.com"
                    },
                    "hideUrlLinks": {
                        "type": "boolean",
                        "description": "This will hide \u00e2\u20ac\u0153Powered by UptimeRobot\u00e2\u20ac link in footer",
                        "example": false
                    },
                    "noIndex": {
                        "type": "boolean",
                        "description": "Set HTML meta tag to allow or disallow search engines to index your status page",
                        "example": false
                    },
                    "gaCode": {
                        "type": "string",
                        "pattern": "/G-[A-Z0-9]{10}/",
                        "example": "G-xxxxxxxxxx",
                        "title": "Google Analytics code",
                        "description": "Available only for a Custom Domain status page"
                    },
                    "sort": {
                        "type": "string",
                        "example": "FriendlyNameAsc",
                        "enum": [
                            "FriendlyNameAsc",
                            "FriendlyNameDesc",
                            "StatusUpDownPaused",
                            "StatusDownUpPaused"
                        ],
                        "description": "Sort monitors by friendly name or their statuses"
                    },
                    "status": {
                        "enum": [
                            "PAUSED",
                            "ENABLED"
                        ],
                        "type": "string",
                        "example": "ENABLED",
                        "title": "Status of the Public Status Page",
                        "description": "Send \"ENABLED\" to publish the status page, \"PAUSED\" to un-publish it"
                    },
                    "subscription": {
                        "type": "boolean",
                        "title": "Enable subscribe feature",
                        "description": "Subscribers can subscribe to receive announcements via an e-mail."
                    },
                    "shareAnalyticsConsent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Help us improve the Status Pages by sharing the analytics data with us."
                    },
                    "homepageLink": {
                        "type": "string",
                        "maxLength": 255,
                        "default": "https://uptimerobot.com",
                        "title": "Homepage URL",
                        "description": "The link target for the logo (or main title) on status page. Usually leads to your homepage."
                    },
                    "showCookieBar": {
                        "type": "boolean",
                        "default": true,
                        "title": "Show cookie consent bar on status page",
                        "description": "Available only for a Custom domain status page"
                    },
                    "useSmallCookieConsentModal": {
                        "type": "boolean",
                        "title": "Smaller version of cookie consent",
                        "description": "Allowing visitor to interact with the page - should not be used on public pages"
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "customSettings": {
                        "$ref": "#/components/schemas/CustomSettingsDto"
                    }
                },
                "required": [
                    "friendlyName"
                ]
            },
            "UpdatePspDto": {
                "type": "object",
                "properties": {
                    "monitorIds": {
                        "description": "List of monitor IDs to be assigned to the PSP",
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "autoAddMonitors": {
                        "type": "boolean",
                        "description": "If enabled all monitors (old and new) will be added to PSP automatically. In this case \"monitorIds\" property will be ignored"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "My Status Page",
                        "description": "Friendly name of the Public Status Page"
                    },
                    "logo": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "binary"
                    },
                    "icon": {
                        "type": "string",
                        "maxLength": 255,
                        "format": "binary"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Password protection for the Public Status Page"
                    },
                    "customDomain": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Provide when you want to use custom domain for the Public Status Page",
                        "example": "status.your-domain.com"
                    },
                    "hideUrlLinks": {
                        "type": "boolean",
                        "description": "This will hide \u00e2\u20ac\u0153Powered by UptimeRobot\u00e2\u20ac link in footer",
                        "example": false
                    },
                    "noIndex": {
                        "type": "boolean",
                        "description": "Set HTML meta tag to allow or disallow search engines to index your status page",
                        "example": false
                    },
                    "gaCode": {
                        "type": "string",
                        "pattern": "/G-[A-Z0-9]{10}/",
                        "example": "G-xxxxxxxxxx",
                        "title": "Google Analytics code",
                        "description": "Available only for a Custom Domain status page"
                    },
                    "sort": {
                        "type": "string",
                        "example": "FriendlyNameAsc",
                        "enum": [
                            "FriendlyNameAsc",
                            "FriendlyNameDesc",
                            "StatusUpDownPaused",
                            "StatusDownUpPaused"
                        ],
                        "description": "Sort monitors by friendly name or their statuses"
                    },
                    "status": {
                        "enum": [
                            "PAUSED",
                            "ENABLED"
                        ],
                        "type": "string",
                        "example": "ENABLED",
                        "title": "Status of the Public Status Page",
                        "description": "Send \"ENABLED\" to publish the status page, \"PAUSED\" to un-publish it"
                    },
                    "subscription": {
                        "type": "boolean",
                        "title": "Enable subscribe feature",
                        "description": "Subscribers can subscribe to receive announcements via an e-mail."
                    },
                    "shareAnalyticsConsent": {
                        "type": "boolean",
                        "default": true,
                        "description": "Help us improve the Status Pages by sharing the analytics data with us."
                    },
                    "homepageLink": {
                        "type": "string",
                        "maxLength": 255,
                        "default": "https://uptimerobot.com",
                        "title": "Homepage URL",
                        "description": "The link target for the logo (or main title) on status page. Usually leads to your homepage."
                    },
                    "showCookieBar": {
                        "type": "boolean",
                        "default": true,
                        "title": "Show cookie consent bar on status page",
                        "description": "Available only for a Custom domain status page"
                    },
                    "useSmallCookieConsentModal": {
                        "type": "boolean",
                        "title": "Smaller version of cookie consent",
                        "description": "Allowing visitor to interact with the page - should not be used on public pages"
                    },
                    "pinnedAnnouncementId": {
                        "type": "number"
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "customSettings": {
                        "$ref": "#/components/schemas/CustomSettingsDto"
                    }
                }
            },
            "MaintenanceWindowPaginationDto": {
                "type": "object",
                "properties": {
                    "nextLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "userId": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 3
                                },
                                "interval": {
                                    "type": "string",
                                    "enum": [
                                        "once",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ],
                                    "x-enumNames": [
                                        "once",
                                        "daily",
                                        "weekly",
                                        "monthly"
                                    ]
                                },
                                "date": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "time": {
                                    "type": "string",
                                    "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$"
                                },
                                "duration": {
                                    "type": "number",
                                    "minimum": 1,
                                    "exclusiveMinimum": false
                                },
                                "autoAddMonitors": {
                                    "type": "boolean"
                                },
                                "days": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "active",
                                        "paused"
                                    ],
                                    "x-enumNames": [
                                        "active",
                                        "paused"
                                    ]
                                },
                                "created": {
                                    "oneOf": [
                                        {},
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            },
                            "required": [
                                "id",
                                "userId",
                                "name",
                                "interval",
                                "date",
                                "time",
                                "duration",
                                "autoAddMonitors",
                                "days",
                                "status",
                                "created"
                            ]
                        }
                    }
                },
                "required": [
                    "nextLink",
                    "data"
                ]
            },
            "MaintenanceWindowDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "userId": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "name": {
                        "type": "string",
                        "minLength": 3
                    },
                    "interval": {
                        "type": "string",
                        "enum": [
                            "once",
                            "daily",
                            "weekly",
                            "monthly"
                        ],
                        "x-enumNames": [
                            "once",
                            "daily",
                            "weekly",
                            "monthly"
                        ]
                    },
                    "date": {
                        "type": "string",
                        "nullable": true
                    },
                    "time": {
                        "type": "string",
                        "pattern": "^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$"
                    },
                    "duration": {
                        "type": "number",
                        "minimum": 1,
                        "exclusiveMinimum": false
                    },
                    "autoAddMonitors": {
                        "type": "boolean"
                    },
                    "days": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "paused"
                        ],
                        "x-enumNames": [
                            "active",
                            "paused"
                        ]
                    },
                    "created": {
                        "oneOf": [
                            {},
                            {
                                "type": "string"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "userId",
                    "name",
                    "interval",
                    "date",
                    "time",
                    "duration",
                    "autoAddMonitors",
                    "days",
                    "status",
                    "created"
                ]
            },
            "CreateMaintenanceWindowDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Friendly name of the maintenance window",
                        "example": "Friday Maintenance window"
                    },
                    "autoAddMonitors": {
                        "type": "boolean",
                        "description": "If true, all monitors are automatically added to this maintenance window",
                        "example": false
                    },
                    "interval": {
                        "enum": [
                            "once",
                            "daily",
                            "weekly",
                            "monthly"
                        ],
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "pattern": "/^(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/",
                        "example": "2024-06-20",
                        "description": "Start date of the maintenance window in YYYY-MM-DD format (years 19xx or 20xx only)"
                    },
                    "time": {
                        "type": "string",
                        "pattern": "/^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/",
                        "example": "14:30:00",
                        "description": "Start time of the maintenance window in HH:mm:ss format"
                    },
                    "duration": {
                        "type": "number",
                        "minimum": 1,
                        "example": 30,
                        "description": "Duration of the maintenance window in minutes. Maintenance window will be active for this duration"
                    },
                    "days": {
                        "description": "(only needed for weekly and monthly maintenance windows). E.g. [2, 4, 5] for Tuesday, Thursday and Friday or [10, 17, 26] for the days of the month. -1 for last day of the month)",
                        "example": [
                            2,
                            4,
                            5
                        ],
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "monitorIds": {
                        "description": "List of monitor IDs to be assigned to the maintenance window",
                        "example": [
                            1,
                            2,
                            3
                        ],
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "required": [
                    "name",
                    "interval",
                    "date",
                    "time",
                    "duration"
                ]
            },
            "UpdateMaintenanceWindowDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Friendly name of the maintenance window",
                        "example": "Friday Maintenance window"
                    },
                    "autoAddMonitors": {
                        "type": "boolean",
                        "description": "If true, all monitors are automatically added to this maintenance window",
                        "example": false
                    },
                    "interval": {
                        "enum": [
                            "once",
                            "daily",
                            "weekly",
                            "monthly"
                        ],
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "pattern": "/^(19|20)\\d{2}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/",
                        "example": "2024-06-20",
                        "description": "Start date of the maintenance window in YYYY-MM-DD format (years 19xx or 20xx only)"
                    },
                    "time": {
                        "type": "string",
                        "pattern": "/^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/",
                        "example": "14:30:00",
                        "description": "Start time of the maintenance window in HH:mm:ss format"
                    },
                    "duration": {
                        "type": "number",
                        "minimum": 1,
                        "example": 30,
                        "description": "Duration of the maintenance window in minutes. Maintenance window will be active for this duration"
                    },
                    "days": {
                        "description": "(only needed for weekly and monthly maintenance windows). E.g. [2, 4, 5] for Tuesday, Thursday and Friday or [10, 17, 26] for the days of the month. -1 for last day of the month)",
                        "example": [
                            2,
                            4,
                            5
                        ],
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "monitorIds": {
                        "description": "List of monitor IDs to be assigned to the maintenance window",
                        "example": [
                            1,
                            2,
                            3
                        ],
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string"
                    },
                    "monitorsCount": {
                        "type": "number"
                    },
                    "monitorLimit": {
                        "type": "number"
                    },
                    "smsCredits": {
                        "type": "number"
                    },
                    "activeSubscription": {
                        "type": "object",
                        "properties": {
                            "plan": {
                                "type": "string"
                            },
                            "monitorLimit": {
                                "type": "number"
                            },
                            "expirationDate": {},
                            "status": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "plan",
                            "monitorLimit"
                        ]
                    }
                },
                "required": [
                    "email",
                    "fullName",
                    "monitorsCount",
                    "monitorLimit",
                    "smsCredits",
                    "activeSubscription"
                ]
            },
            "AlertContactDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number"
                    },
                    "friendlyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {},
                    "value": {
                        "type": "string"
                    },
                    "customValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "enableNotificationsFor": {},
                    "sslExpirationReminder": {
                        "type": "boolean"
                    },
                    "httpUsername": {
                        "type": "string",
                        "nullable": true
                    },
                    "httpPassword": {
                        "type": "string",
                        "nullable": true
                    },
                    "authType": {
                        "type": "boolean"
                    },
                    "customHeaders": {
                        "type": "string"
                    },
                    "mobileProviderId": {
                        "type": "number",
                        "nullable": true
                    },
                    "status": {},
                    "orgAlertContactId": {
                        "type": "number",
                        "nullable": true
                    },
                    "config": {
                        "type": "object",
                        "properties": {
                            "android_push_up_channel": {
                                "type": "string"
                            },
                            "android_push_down_channel": {
                                "type": "string"
                            }
                        },
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "friendlyName",
                    "type",
                    "customValue",
                    "enableNotificationsFor",
                    "sslExpirationReminder",
                    "httpUsername",
                    "httpPassword",
                    "authType",
                    "mobileProviderId",
                    "status",
                    "orgAlertContactId"
                ]
            },
            "IntegrationPaginationDto": {
                "type": "object",
                "properties": {
                    "nextLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "friendlyName": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "enableNotificationsFor": {},
                                "type": {},
                                "status": {},
                                "sslExpirationReminder": {
                                    "type": "boolean"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "customValue": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "customValue2": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "customValue3": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "customValue4": {
                                    "type": "string",
                                    "nullable": true
                                }
                            },
                            "required": [
                                "id",
                                "friendlyName",
                                "enableNotificationsFor",
                                "type",
                                "status",
                                "sslExpirationReminder",
                                "value",
                                "customValue",
                                "customValue2",
                                "customValue3",
                                "customValue4"
                            ]
                        }
                    }
                },
                "required": [
                    "nextLink",
                    "data"
                ]
            },
            "IntegrationDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "number",
                        "minimum": 0,
                        "exclusiveMinimum": false
                    },
                    "friendlyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "enableNotificationsFor": {},
                    "type": {},
                    "status": {},
                    "sslExpirationReminder": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    },
                    "customValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "customValue2": {
                        "type": "string",
                        "nullable": true
                    },
                    "customValue3": {
                        "type": "string",
                        "nullable": true
                    },
                    "customValue4": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "friendlyName",
                    "enableNotificationsFor",
                    "type",
                    "status",
                    "sslExpirationReminder",
                    "value",
                    "customValue",
                    "customValue2",
                    "customValue3",
                    "customValue4"
                ]
            },
            "SlackBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000
                    }
                },
                "required": [
                    "webhookURL",
                    "customValue"
                ]
            },
            "CreateSlackIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Slack"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/SlackBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "TelegramBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    }
                }
            },
            "CreateTelegramIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Telegram"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/TelegramBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "MsTeamsBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Microsoft Teams Webhook URL",
                        "example": "https://"
                    }
                },
                "required": [
                    "webhookURL"
                ]
            },
            "CreateMsTeamsIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "MSTeams"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MsTeamsBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "WebhookBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "urlToNotify": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "sendAsQueryString": {
                        "type": "boolean"
                    },
                    "postValue": {
                        "type": "string"
                    },
                    "sendAsJSON": {
                        "type": "boolean"
                    },
                    "sendAsPostParameters": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "urlToNotify",
                    "postValue"
                ]
            },
            "CreateWebhookIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Webhook"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/WebhookBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "ZapierBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "hookURL": {
                        "type": "string",
                        "maxLength": 1500
                    }
                },
                "required": [
                    "hookURL"
                ]
            },
            "CreateZapierIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Zapier"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/ZapierBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "CreatePagerdutyBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "integrationKey": {
                        "type": "string",
                        "minLength": 32,
                        "description": "The PagerDuty Integration Key",
                        "example": "32 digits key"
                    },
                    "location": {
                        "enum": [
                            "us",
                            "eu"
                        ],
                        "type": "string",
                        "description": "The PagerDuty Service region"
                    },
                    "autoResolve": {
                        "type": "boolean",
                        "description": "Auto-resolve incidents after up event",
                        "example": true
                    }
                },
                "required": [
                    "integrationKey"
                ]
            },
            "CreatePagerdutyIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Pagerduty"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CreatePagerdutyBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "GoogleChatBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "roomURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Google Chat Room URL",
                        "example": "https://chat.googleapis.com/v1/spaces/ABCD1234/..."
                    },
                    "customMessage": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    }
                },
                "required": [
                    "roomURL",
                    "customMessage"
                ]
            },
            "CreateGoogleChatIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "GoogleChat"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/GoogleChatBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "DiscordBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Discord Webhook URL to send the alert to",
                        "example": "https://discord.com/api/webhooks/1234567890/abcdefg"
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "sslExpirationReminder": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "webhookURL",
                    "customValue"
                ]
            },
            "CreateDiscordIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Discord"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/DiscordBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "SplunkBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "urlToNotify": {
                        "type": "string",
                        "maxLength": 1500
                    }
                },
                "required": [
                    "urlToNotify"
                ]
            },
            "CreateSplunkIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Splunk"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/SplunkBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "PushbulletBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Pushbullet Access Token",
                        "example": "1234567890"
                    }
                },
                "required": [
                    "accessToken"
                ]
            },
            "CreatePushbulletIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PushBullet"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PushbulletBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "CreatePushoverBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "userKey": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Pushover User Key",
                        "example": "abcdefxyz"
                    },
                    "priority": {
                        "enum": [
                            "Lowest",
                            "Low",
                            "Normal",
                            "High",
                            "Emergency"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "userKey"
                ]
            },
            "CreatePushoverIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Pushover"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/CreatePushoverBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "MattermostBaseIntegrationDto": {
                "type": "object",
                "properties": {
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Mattermost Webhook URL",
                        "example": "https://your-mattermost-instance.com/hooks/<generated-token>"
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "sslExpirationReminder": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "webhookURL",
                    "customValue"
                ]
            },
            "CreateMattermostIntegrationDto": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Mattermost"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MattermostBaseIntegrationDto"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "UpdateSlackIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000
                    }
                }
            },
            "UpdateSlackIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Slack"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateSlackIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateTelegramIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    }
                }
            },
            "UpdateTelegramIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Telegram"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateTelegramIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateMsTeamsIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Microsoft Teams Webhook URL",
                        "example": "https://"
                    }
                }
            },
            "UpdateMsTeamsIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "MSTeams"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateMsTeamsIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateWebhookIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "urlToNotify": {
                        "type": "string",
                        "maxLength": 1500
                    },
                    "sendAsQueryString": {
                        "type": "boolean"
                    },
                    "postValue": {
                        "type": "string"
                    },
                    "sendAsJSON": {
                        "type": "boolean"
                    },
                    "sendAsPostParameters": {
                        "type": "boolean"
                    }
                }
            },
            "UpdateWebhookIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Webhook"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateWebhookIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateZapierIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "hookURL": {
                        "type": "string",
                        "maxLength": 1500
                    }
                }
            },
            "UpdateZapierIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Zapier"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateZapierIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdatePagerdutyIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "integrationKey": {
                        "type": "string",
                        "minLength": 32,
                        "description": "The PagerDuty Integration Key",
                        "example": "32 digits key"
                    },
                    "location": {
                        "enum": [
                            "us",
                            "eu"
                        ],
                        "type": "string",
                        "description": "The PagerDuty Service region"
                    },
                    "autoResolve": {
                        "type": "boolean",
                        "description": "Auto-resolve incidents after up event",
                        "example": true
                    }
                }
            },
            "UpdatePagerdutyIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Pagerduty"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdatePagerdutyIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "PartialTypeClass": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "roomURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Google Chat Room URL",
                        "example": "https://chat.googleapis.com/v1/spaces/ABCD1234/..."
                    },
                    "customMessage": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    }
                }
            },
            "UpdateGoogleChatIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "GoogleChat"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PartialTypeClass"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateDiscordIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Discord Webhook URL to send the alert to",
                        "example": "https://discord.com/api/webhooks/1234567890/abcdefg"
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "sslExpirationReminder": {
                        "type": "boolean"
                    }
                }
            },
            "UpdateDiscordIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Discord"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateDiscordIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateSplunkIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Splunk"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PartialTypeClass"
                    }
                },
                "required": [
                    "type",
                    "data"
                ]
            },
            "UpdatePushbulletIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "accessToken": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Pushbullet Access Token",
                        "example": "1234567890"
                    }
                }
            },
            "UpdatePushbulletIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "PushBullet"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdatePushbulletIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdatePushoverIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60,
                        "description": "The friendly name of the integration",
                        "example": "My Integration from API"
                    },
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "sslExpirationReminder": {
                        "type": "boolean",
                        "description": "Send a notification about SSL & Domain expiry",
                        "example": true
                    },
                    "userKey": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Pushover User Key",
                        "example": "abcdefxyz"
                    },
                    "priority": {
                        "enum": [
                            "Lowest",
                            "Low",
                            "Normal",
                            "High",
                            "Emergency"
                        ],
                        "type": "string"
                    }
                }
            },
            "UpdatePushoverIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Pushover"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdatePushoverIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "UpdateMattermostIntegrationDataDto": {
                "type": "object",
                "properties": {
                    "enableNotificationsFor": {
                        "enum": [
                            "UpAndDown",
                            "Down",
                            "Up",
                            "None"
                        ],
                        "type": "string"
                    },
                    "webhookURL": {
                        "type": "string",
                        "maxLength": 1500,
                        "description": "The Mattermost Webhook URL",
                        "example": "https://your-mattermost-instance.com/hooks/<generated-token>"
                    },
                    "customValue": {
                        "type": "string",
                        "maxLength": 5000,
                        "description": "Optional. Text that will be added to body of each notification.",
                        "example": "This is a custom value"
                    },
                    "friendlyName": {
                        "type": "string",
                        "maxLength": 60
                    },
                    "sslExpirationReminder": {
                        "type": "boolean"
                    }
                }
            },
            "UpdateMattermostIntegrationSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "Mattermost"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/UpdateMattermostIntegrationDataDto"
                    }
                },
                "required": [
                    "data"
                ]
            },
            "SimpleTagPaginationDto": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "minimum": 0,
                                    "exclusiveMinimum": false
                                },
                                "name": {
                                    "type": "string",
                                    "minLength": 1
                                }
                            },
                            "required": [
                                "id",
                                "name"
                            ]
                        }
                    },
                    "nextCursorId": {
                        "type": "number",
                        "nullable": true
                    }
                },
                "required": [
                    "data",
                    "nextCursorId"
                ]
            }
        }
    }
}